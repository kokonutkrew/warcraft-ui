
HekiliDB = {
["namespaces"] = {
["LibDualSpec-1.0"] = {
},
},
["profileKeys"] = {
["Blanchyy - Emerald Dream"] = "Default",
["Kkfiftytwo - Area 52"] = "Default",
["Redrict - Bloodhoof"] = "Default",
["Twenk - Emerald Dream"] = "Default",
["Ascholokk - Emerald Dream"] = "Default",
["Kkbankk - Area 52"] = "Default",
["Okkoa - Area 52"] = "Default",
},
["profiles"] = {
["Default"] = {
["runOnce"] = {
["forceReloadClassDefaultOptions_20220306_103"] = true,
["removeOldThrottles_20241115"] = true,
["forceReloadClassDefaultOptions_20220306_105"] = true,
["forceReloadClassDefaultOptions_20220306_71"] = true,
["forceReloadClassDefaultOptions_20220306_257"] = true,
["forceReloadClassDefaultOptions_20220306_256"] = true,
["forceReloadClassDefaultOptions_20220306_102"] = true,
["forceReloadClassDefaultOptions_20220306_259"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceReloadClassDefaultOptions_20220306_260"] = true,
["forceReloadClassDefaultOptions_20220306_258"] = true,
["updateMaxRefreshToNewSpecOptions_20220222"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceReloadClassDefaultOptions_20220306_73"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_72"] = true,
["forceReloadClassDefaultOptions_20220306_261"] = true,
["forceReloadClassDefaultOptions_20220306_64"] = true,
["forceReloadClassDefaultOptions_20220306_62"] = true,
["fixHavocPriorityVersion_20240805"] = true,
["forceReloadClassDefaultOptions_20220306_104"] = true,
["forceReloadClassDefaultOptions_20220306_63"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
},
["specs"] = {
[103] = {
["settings"] = {
["regrowth"] = true,
["frenzy_cp"] = 2,
["zerk_biteweave"] = false,
["allow_crit_prediction"] = true,
["rip_duration"] = 9,
["solo_prowl"] = false,
["use_funnel"] = false,
["lazy_swipe"] = false,
["vigil_damage"] = 50,
},
},
[63] = {
["settings"] = {
["prevent_hardcasts"] = false,
["check_explosion_range"] = true,
["pyroblast_pull"] = false,
},
},
[105] = {
["settings"] = {
["healing_mode"] = false,
},
},
[260] = {
["settings"] = {
["solo_vanish"] = true,
["check_blade_rush_range"] = true,
["sinister_clash"] = -0.5,
["allow_shadowmeld"] = false,
},
},
[104] = {
["settings"] = {
["vigil_damage"] = 50,
["catweave_bear"] = false,
["maul_anyway"] = true,
["ironfur_damage_threshold"] = 5,
["maul_rage"] = 20,
["max_ironfur"] = 1,
},
},
[261] = {
["settings"] = {
["rupture_duration"] = 12,
["mfd_points"] = 3,
["solo_vanish"] = true,
["priority_rotation"] = false,
},
},
[102] = {
["settings"] = {
["vigil_damage"] = 50,
["starlord_cancel"] = false,
},
},
[71] = {
["settings"] = {
["shockwave_interrupt"] = true,
["spell_reflection_filter"] = true,
["heroic_charge"] = false,
},
},
[62] = {
["settings"] = {
["check_explosion_range"] = true,
},
},
[64] = {
["settings"] = {
["prevent_hardcasts"] = false,
},
},
[72] = {
["settings"] = {
["check_ww_range"] = false,
["t30_bloodthirst_crit"] = 95,
["shockwave_interrupt"] = true,
["spell_reflection_filter"] = true,
["heroic_charge"] = false,
},
},
[256] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[257] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[258] = {
["settings"] = {
["pad_void_bolt"] = true,
["sw_death_protection"] = 50,
["pad_ascended_blast"] = true,
},
},
[259] = {
["settings"] = {
["mfd_points"] = 3,
["envenom_pool_pct"] = 0,
["dot_threshold"] = 7,
["priority_rotation"] = false,
["solo_vanish"] = true,
},
},
[73] = {
["settings"] = {
["spell_block_amount"] = 25,
["rallying_cry_health"] = 50,
["spell_reflection_filter"] = true,
["stack_shield_block"] = false,
["stance_weaving"] = false,
["last_stand_amount"] = 50,
["rallying_cry_condition"] = false,
["shield_wall_amount"] = 50,
["last_stand_condition"] = false,
["spell_block_health"] = 75,
["shield_wall_condition"] = false,
["shield_wall_health"] = 50,
["overlap_ignore_pain"] = false,
["last_stand_offensively"] = false,
["victory_rush_health"] = 75,
["shockwave_interrupt"] = true,
["last_stand_health"] = 50,
["rallying_cry_amount"] = 50,
["reserve_rage"] = 35,
},
},
},
["packs"] = {
["Discipline"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20231114.3,
["author"] = "SimC",
["desc"] = "2023-11-14: Update for Harsh Discipline.",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! buff.twilight_equilibrium_holy_amp.up & ! buff.twilight_equilibrium_shadow_amp.up",
["var_name"] = "te_none",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_shadow_amp.up || variable.te_none",
["description"] = "Twilight Equilibrium is buffing shadow damage",
["var_name"] = "te_shadow",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_holy_amp.up || variable.te_none",
["description"] = "Twilight Equilibrium is buffing holy damage",
["var_name"] = "te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_covenant.enabled",
["description"] = "Long Shadow covenant is enabled",
["var_name"] = "long_scov",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.up || buff.shadow_covenant.up",
["description"] = "Ready to start shadow covenant phase",
["var_name"] = "can_enter_scov",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mind_blast.execute_time",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.dark_indulgence.enabled",
["description"] = "penance",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["criteria"] = "talent.shadow_word_death.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["criteria"] = "talent.shadow_word_death.enabled & talent.death_and_madness.enabled & target.health.pct < 20",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mindgames.execute_time",
["criteria"] = "talent.mindgames.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.divine_star.execute_time",
["criteria"] = "talent.divine_star.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["criteria"] = "talent.halo.enabled",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "floor",
["action"] = "variable",
["value"] = "( buff.shadow_covenant.duration - variable.shadow_spells_duration_max ) / gcd.max",
["description"] = "(scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)",
["var_name"] = "max_te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["description"] = "Counting variable, the number of non-fractional remaining holy casts available",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "variable.max_te_holy",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now",
["criteria"] = "talent.train_of_thought.enabled",
["var_name"] = "expected_penance_reduction",
["action"] = "variable",
["value_else"] = "0",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["description"] = "Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.",
["var_name"] = "shadow_spells_duration",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.penance.up || ( ( cooldown.penance.remains - variable.expected_penance_reduction ) < buff.shadow_covenant.remains )",
["description"] = "Penance",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.mindgames.up || ( cooldown.mindgames.remains_expected < buff.shadow_covenant.remains )",
["description"] = "Mindgames",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains )",
["description"] = "We always get the first SW:D",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "( cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains ) ) & ( target.health.pct < 20 || target.time_to_pct_20 < cooldown.shadow_word_death.remains ) & talent.death_and_madness.enabled",
["description"] = "Second SW:D only when talented and target health in execute range",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "action.mind_blast.charges >= 1",
["description"] = "Add any whole charges of mind blast",
["value"] = "action.mind_blast.charges * action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "( ( action.mind_blast.charges_fractional >= 1 & action.mind_blast.charges_fractional < 2 ) & ( ( ( 1 - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) ) || ( ( action.mind_blast.charges_fractional < 1 ) & ( ( ( 1 - action.mind_blast.charges_fractional ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) )",
["description"] = "Add any fractional charges of mindblast that will recharge in time",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.divine_star.up || ( cooldown.divine_star.remains < buff.shadow_covenant.remains )",
["description"] = "Divine Star",
["value"] = "action.divine_star.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["criteria"] = "cooldown.halo.up || ( cooldown.halo.remains < buff.shadow_covenant.remains )",
["description"] = "Halo",
["value"] = "action.halo.execute_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.",
["criteria"] = "talent.twilight_equilibrium.enabled",
["var_name"] = "should_te",
["action"] = "variable",
["value_else"] = "0",
["value"] = "( buff.shadow_covenant.remains - variable.shadow_spells_duration ) > action.smite.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.remains + action.shadowfiend.execute_time",
["description"] = "First casts should always be HD prep->covenant->schism->HD dark reprimand",
["var_name"] = "next_penance_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_penance_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.penance.duration - variable.expected_penance_reduction ) < variable.next_penance_time",
["var_name"] = "can_penance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Shadow Word: Death  SW:D is better than other spells if we are in execute phase.",
["var_name"] = "next_swd_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "( ( talent.mindgames.enabled & talent.shattered_perceptions.enabled ) || ( talent.mindgames.enabled & ! talent.expiation.enabled ) ) & target.health.pct >= 20",
["description"] = "indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "target.health.pct >= 20",
["description"] = "Mind blast is better than SW:D if we aren't in execute",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "target.health.pct >= 20 & talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["criteria"] = "talent.divine_star.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
["description"] = "Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation",
["value"] = "action.divine_star.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["criteria"] = "talent.halo.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
["var_name"] = "next_swd_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_word_death.duration_expected < variable.next_swd_time",
["var_name"] = "can_swd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Mindblast  Mindblast is better than other spells if we aren't in execute phase",
["var_name"] = "next_mind_blast_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "target.health.pct < 20",
["description"] = "Add SW:D if we're in execute phase",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "talent.death_and_madness.enabled & target.health.pct < 20",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["criteria"] = "talent.mindgames.enabled & ! talent.expiation.enabled",
["description"] = "Add mindgames if we have it talented and don't have expiation",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.",
["criteria"] = "action.mind_blast.charges_fractional >= 1",
["var_name"] = "can_mind_blast",
["action"] = "variable",
["value_else"] = "0",
["value"] = "( ( action.mind_blast.max_charges - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < variable.next_mind_blast_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation",
["var_name"] = "next_mindgames_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "target.health.pct < 20 || ( talent.expiation.enabled & ! talent.shattered_perceptions.enabled )",
["description"] = "SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "talent.expiation.enabled",
["description"] = "Mind blast is better than mindgames if we have expiation",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["criteria"] = "talent.expiation.enabled & talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.mindgames.duration_expected < variable.next_mindgames_time",
["var_name"] = "can_mindgames",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["description"] = "Divine Star",
["var_name"] = "next_divine_star_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "variable.remaining_te_holy > 0",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["value"] = "gcd.max",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["description"] = "Reduce our counting variable",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "target.health.pct < 20 || talent.expiation.enabled",
["description"] = "SW:D is better unless outside of execute phase when expiation is untalented",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
["description"] = "Add a second SW:D if we have death and madness",
["value"] = "action.shadow_word_death.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.expiation.enabled",
["description"] = "Mind blast is always better",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.dark_indulgence.enabled",
["description"] = "Second mindblast when talented",
["value"] = "action.mind_blast.execute_time",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["criteria"] = "talent.mindgames.enabled",
["description"] = "Mindgames is always better",
["value"] = "action.mindgames.execute_time",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.divine_star.duration < variable.next_divine_star_time",
["var_name"] = "can_divine_star",
},
{
["enabled"] = true,
["criteria"] = "talent.shadow_covenant.enabled & cooldown.mindbender.up",
["action"] = "run_action_list",
["list_name"] = "scov_prep",
},
{
["enabled"] = true,
["criteria"] = "variable.long_scov & variable.can_enter_scov",
["action"] = "run_action_list",
["list_name"] = "long_scov",
},
{
["enabled"] = true,
["criteria"] = "talent.purge_the_wicked.enabled & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.purge_the_wicked.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "! talent.purge_the_wicked.enabled & ( target.time_to_die > ( 0.3 * dot.shadow_word_pain.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.shadow_word_pain.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.dark_indulgence.enabled & buff.power_of_the_dark_side.down & cooldown.penance.remains < gcd.max",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_penance )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || variable.can_mind_blast",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & talent.expiation.enabled & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & ! talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_divine_star )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["enabled"] = true,
["description"] = "Don't use pets during shadow covenant windows, wasting GCDs",
["criteria"] = "! talent.mindbender.enabled & ! buff.shadow_covenant.up",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "talent.mindbender.enabled & ! buff.shadow_covenant.up",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "hold PI to use with shadow covenant if we have it",
["criteria"] = "! talent.shadow_covenant.enabled || ( talent.shadow_covenant.enabled & ( cooldown.shadowfiend.up || buff.shadow_covenant.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "sync potion with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "sync trinkets with PI",
["criteria"] = "buff.power_infusion.up || cooldown.power_infusion.remains >= action_cooldown",
["action"] = "use_items",
},
},
["long_scov"] = {
{
["enabled"] = true,
["description"] = "Long Shadow Covenant",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 3",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 3",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) ) & ( ! ticking || refreshable ) & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.shattered_perceptions.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) )",
["action"] = "smite",
},
{
["enabled"] = true,
["description"] = "just in case we run out of shadow spells with the above conditions",
["action"] = "penance",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["action"] = "mind_blast",
["enabled"] = true,
},
{
["action"] = "shadow_word_death",
["enabled"] = true,
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["action"] = "halo",
["enabled"] = true,
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["scov_prep"] = {
{
["enabled"] = true,
["description"] = "Prepare to enter shadow covenant",
["criteria"] = "! ticking & ( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
{
["enabled"] = true,
["criteria"] = "cooldown.shadowfiend.remains < cast_time",
["action"] = "power_word_radiance",
},
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > ( 0.3 * dot.purge_the_wicked.duration ) )",
["action"] = "purge_the_wicked",
},
},
},
["version"] = 20231114.3,
["warnings"] = "The import for 'default' required some automated changes.\nLine 5: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 10: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 11: Converted 'talent.shadow_word_death' to 'talent.shadow_word_death.enabled' (1x).\nLine 12: Converted 'talent.shadow_word_death' to 'talent.shadow_word_death.enabled' (1x).\nLine 12: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 13: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 14: Converted 'talent.divine_star' to 'talent.divine_star.enabled' (1x).\nLine 15: Converted 'talent.halo' to 'talent.halo.enabled' (1x).\nLine 16: Converted operations in '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max' to '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)/gcd.max'.\nLine 19: Converted 'talent.train_of_thought' to 'talent.train_of_thought.enabled' (1x).\nLine 24: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 29: Converted 'talent.twilight_equilibrium' to 'talent.twilight_equilibrium.enabled' (1x).\nLine 37: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 37: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 37: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 37: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 39: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 40: Converted 'talent.divine_star' to 'talent.divine_star.enabled' (1x).\nLine 40: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 41: Converted 'talent.halo' to 'talent.halo.enabled' (1x).\nLine 41: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 47: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 48: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 48: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 53: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 53: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 54: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 55: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 56: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 56: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 61: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 62: Converted 'talent.death_and_madness' to 'talent.death_and_madness.enabled' (1x).\nLine 63: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 64: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 65: Converted 'talent.mindgames' to 'talent.mindgames.enabled' (1x).\nLine 67: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 69: Converted 'talent.purge_the_wicked' to 'talent.purge_the_wicked.enabled' (1x).\nLine 69: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 69: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 70: Converted 'talent.purge_the_wicked' to 'talent.purge_the_wicked.enabled' (1x).\nLine 70: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 70: Converted 'talent.painful_punishment' to 'talent.painful_punishment.enabled' (1x).\nLine 71: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 72: Converted 'talent.dark_indulgence' to 'talent.dark_indulgence.enabled' (1x).\nLine 73: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 74: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 75: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 75: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 76: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 76: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 77: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 77: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 78: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 79: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\nLine 80: Converted 'talent.shadow_covenant' to 'talent.shadow_covenant.enabled' (1x).\n\nThe import for 'long_scov' required some automated changes.\nLine 5: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 10: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\nLine 11: Converted 'talent.shattered_perceptions' to 'talent.shattered_perceptions.enabled' (1x).\nLine 12: Converted 'talent.expiation' to 'talent.expiation.enabled' (1x).\n\nImported 5 action lists.\n",
["spec"] = 256,
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\nactions+=/variable,name=te_none,op=set,value=!buff.twilight_equilibrium_holy_amp.up&!buff.twilight_equilibrium_shadow_amp.up\n# Twilight Equilibrium is buffing shadow damage\nactions+=/variable,name=te_shadow,op=set,value=buff.twilight_equilibrium_shadow_amp.up||variable.te_none\n# Twilight Equilibrium is buffing holy damage\nactions+=/variable,name=te_holy,op=set,value=buff.twilight_equilibrium_holy_amp.up||variable.te_none\n# Long Shadow covenant is enabled\nactions+=/variable,name=long_scov,op=set,value=talent.shadow_covenant\n# Ready to start shadow covenant phase\nactions+=/variable,name=can_enter_scov,op=set,value=cooldown.shadowfiend.up||buff.shadow_covenant.up\nactions+=/variable,name=shadow_spells_duration_max,op=set,value=0\n## actions+=/variable,name=shadow_spells_duration_max,op=add,value=action.schism.execute_time,if=talent.schism\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=2\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time\n# penance\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death&talent.death_and_madness&target.health.pct<20\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.divine_star.execute_time,if=talent.divine_star\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.halo.execute_time,if=talent.halo\n# (scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)\nactions+=/variable,name=max_te_holy,op=floor,value=(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max\n# Counting variable, the number of non-fractional remaining holy casts available\nactions+=/variable,name=remaining_te_holy,op=set,value=0\nactions+=/variable,name=remaining_te_holy,op=add,value=variable.max_te_holy\n# TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now\nactions+=/variable,name=expected_penance_reduction,op=setif,condition=talent.train_of_thought,value=2,value_else=0\n# Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.\nactions+=/variable,name=shadow_spells_duration,op=set,value=0\n# Schism\n## actions+=/variable,name=shadow_spells_duration,op=add,value=action.schism.execute_time,if=cooldown.schism.up||(cooldown.schism.remains<buff.shadow_covenant.remains)\n# Penance\nactions+=/variable,name=shadow_spells_duration,op=add,value=2,if=cooldown.penance.up||((cooldown.penance.remains-variable.expected_penance_reduction)<buff.shadow_covenant.remains)\n# Mindgames\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mindgames.execute_time,if=cooldown.mindgames.up||(cooldown.mindgames.remains_expected<buff.shadow_covenant.remains)\n# We always get the first SW:D\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains)\n# Second SW:D only when talented and target health in execute range\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=(cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains))&(target.health.pct<20||target.time_to_pct_20<cooldown.shadow_word_death.remains)&talent.death_and_madness\n# Add any whole charges of mind blast\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.charges*action.mind_blast.execute_time,if=action.mind_blast.charges>=1\n# Add any fractional charges of mindblast that will recharge in time\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.execute_time,if=((action.mind_blast.charges_fractional>=1&action.mind_blast.charges_fractional<2)&(((1-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))||((action.mind_blast.charges_fractional<1)&(((1-action.mind_blast.charges_fractional)*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))\n# Divine Star\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.divine_star.execute_time,if=cooldown.divine_star.up||(cooldown.divine_star.remains<buff.shadow_covenant.remains)\n# Halo\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.halo.execute_time,if=cooldown.halo.up||(cooldown.halo.remains<buff.shadow_covenant.remains)\n# Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.\nactions+=/variable,name=should_te,op=setif,condition=talent.twilight_equilibrium,value=(buff.shadow_covenant.remains-variable.shadow_spells_duration)>action.smite.execute_time,value_else=0\n\n# First casts should always be HD prep->covenant->schism->HD dark reprimand\nactions+=/variable,name=next_penance_time,op=set,value=cooldown.shadowfiend.remains+action.shadowfiend.execute_time\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_penance_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\nactions+=/variable,name=can_penance,op=set,value=(cooldown.penance.duration-variable.expected_penance_reduction)<variable.next_penance_time\n# Shadow Word: Death  SW:D is better than other spells if we are in execute phase.\nactions+=/variable,name=next_swd_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_swd_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio\nactions+=/variable,name=next_swd_time,op=add,value=action.mindgames.execute_time,if=((talent.mindgames&talent.shattered_perceptions)||(talent.mindgames&!talent.expiation))&target.health.pct>=20\n# Mind blast is better than SW:D if we aren't in execute\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20\n# Second mindblast when talented\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20&talent.dark_indulgence\n# Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.divine_star.execute_time,if=talent.divine_star&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.halo.execute_time,if=talent.halo&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=can_swd,op=set,value=cooldown.shadow_word_death.duration_expected<variable.next_swd_time\n# Mindblast  Mindblast is better than other spells if we aren't in execute phase\nactions+=/variable,name=next_mind_blast_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mind_blast_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# Add SW:D if we're in execute phase\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=talent.death_and_madness&target.health.pct<20\n# Add mindgames if we have it talented and don't have expiation\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames&!talent.expiation\n# TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.\nactions+=/variable,name=can_mind_blast,op=setif,condition=action.mind_blast.charges_fractional>=1,value=((action.mind_blast.max_charges-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<variable.next_mind_blast_time,value_else=0\n# Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation\nactions+=/variable,name=next_mindgames_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mindgames_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||(talent.expiation&!talent.shattered_perceptions)\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is better than mindgames if we have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation&talent.dark_indulgence\nactions+=/variable,name=can_mindgames,op=set,value=cooldown.mindgames.duration_expected<variable.next_mindgames_time\n# Divine Star\nactions+=/variable,name=next_divine_star_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_divine_star_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better unless outside of execute phase when expiation is untalented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||talent.expiation\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\n# Mindgames is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=can_divine_star,op=set,value=cooldown.divine_star.duration<variable.next_divine_star_time\nactions+=/run_action_list,name=scov_prep,if=talent.shadow_covenant&cooldown.mindbender.up\n## actions+=/run_action_list,name=short_scov,if=variable.short_scov&variable.can_enter_scov\nactions+=/run_action_list,name=long_scov,if=variable.long_scov&variable.can_enter_scov\nactions+=/purge_the_wicked,if=talent.purge_the_wicked&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.purge_the_wicked.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\nactions+=/shadow_word_pain,if=!talent.purge_the_wicked&(target.time_to_die>(0.3*dot.shadow_word_pain.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.shadow_word_pain.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\n## actions+=/schism,if=!talent.shadow_covenant\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&target.health.pct<20\nactions+=/mind_blast,if=talent.dark_indulgence&buff.power_of_the_dark_side.down&cooldown.penance.remains<gcd.max\nactions+=/penance,if=(!talent.shadow_covenant||variable.can_penance)\n## # For DPS, Lights wrath should always be used outside of scov when you take wrath unleashed to maximize the number of smites it buffs. In a real raid setting, you may want to cast it at the beginning of a scov cycle for additional healing.\n## actions+=/lights_wrath,if=talent.wrath_unleashed\nactions+=/mind_blast,if=!talent.shadow_covenant||variable.can_mind_blast\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&talent.shattered_perceptions\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&talent.expiation&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&!talent.shattered_perceptions\nactions+=/halo,if=!talent.shadow_covenant\nactions+=/divine_star,if=(!talent.shadow_covenant||variable.can_divine_star)\n## actions+=/power_word_solace\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/smite\n\n# Prepare to enter shadow covenant\nactions.scov_prep+=/purge_the_wicked,if=!ticking&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\nactions.scov_prep+=/power_word_radiance,if=cooldown.shadowfiend.remains<cast_time\nactions.scov_prep+=/purge_the_wicked,if=(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\n\n# Long Shadow Covenant\nactions.long_scov+=/mindbender\n## actions.long_scov+=/schism\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=3\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=3\nactions.long_scov+=/purge_the_wicked,if=(!variable.should_te||(variable.should_te&variable.te_holy))&(!ticking||refreshable)&(target.time_to_die>(0.3*dot.purge_the_wicked.duration))\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/penance,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=2\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=2\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mindgames,if=talent.shattered_perceptions&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\nactions.long_scov+=/mindgames,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\n## actions.long_scov+=/lights_wrath,if=(!variable.should_te||(variable.should_te&variable.te_holy))\nactions.long_scov+=/smite,if=(!variable.should_te||(variable.should_te&variable.te_holy))\n# just in case we run out of shadow spells with the above conditions\nactions.long_scov+=/penance\nactions.long_scov+=/mindgames\nactions.long_scov+=/mind_blast\nactions.long_scov+=/shadow_word_death\nactions.long_scov+=/divine_star\nactions.long_scov+=/halo\nactions.long_scov+=/smite\n\n## Cooldowns\n# Don't use pets during shadow covenant windows, wasting GCDs\nactions.cooldowns+=/shadowfiend,if=!talent.mindbender.enabled&!buff.shadow_covenant.up\nactions.cooldowns+=/mindbender,if=talent.mindbender.enabled&!buff.shadow_covenant.up\n# hold PI to use with shadow covenant if we have it\nactions.cooldowns+=/power_infusion,if=!talent.shadow_covenant.enabled||(talent.shadow_covenant.enabled&(cooldown.shadowfiend.up||buff.shadow_covenant.up))\n# sync potion with PI\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# sync trinkets with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up||cooldown.power_infusion.remains>=cooldown",
},
["Shadow"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240515,
["author"] = "SimC",
["desc"] = "2024-05-15: Fix for target swaps.\n\n2024-05-08: SimC update.\n\n2023-12-07:  Fix variables.\n\n2023-11-26:  Remove PW:S usage per SimC update.\n\n2023-11-08:  Minor fix.\n\n2023-11-05:  Patch 10.2.\n\n2023-08-27:  Minor update to precombat SC/VT.\n\n2023-07-31:  SimC update to Mindgames, SW:Death, and Devouring Plague.\n\n2023-07-22:  Reduce likelihood of using DOTs on enemies who won't live long enough to be worthwhile.\n\n2023-07-02:  Shadow Word: Death and Mindbender adjustments.\n\n2023-06-24:  Devouring Plague adjustments, especially at the end of fights.\n\n2023-05-20:  Move variables in priority to fix issues.\n\n2023-05-04:  Prevent holding_crash variable from blocking Void Eruption if Shadow Crash is not talented or is disabled.\n\n2023-05-03:  Additional updates for 10.1.\n\n2023-05-02:  Remove Light's Judgment.\n\n2023-04-29:  Updates for 10.1.\n\n2023-03-30:  Don't cycle_targets for Mind Sear.\n\n2023-03-29:  Make 'holding_crash' variable true if you've disabled Shadow Crash.\n\n2023-03-13:  Routine update from SimC.\n\n2023-03-05:  When Shadow Crash is in-flight, act as though SWP and VT are already applied to your target.",
["lists"] = {
["filler"] = {
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["criteria"] = "buff.unfurling_darkness.up",
["description"] = "Cast Vampiric Touch to consume Unfurling Darkness, prefering the target with the lowest DoT duration active",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Use PWS with CR talented to trigger TOF if there are no better alternatives available to do this as we still get insanity for a PWS cast.",
["criteria"] = "dot.devouring_plague.remains > action.mind_spike.cast_time || ! talent.mind_spike.enabled",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "( target.health.pct < 20 || buff.deathspeaker.up || set_bonus.tier31_2pc ) & dot.devouring_plague.ticking",
["description"] = "Cast Shadow Word: Death if the target is in execute, you have a Deathspeaker proc or you have the Season 3 2-piece bonus",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["criteria"] = "talent.inescapable_torment.enabled & pet.fiend.active",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mindgames",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up || cooldown.dark_ascension.up || buff.mind_devourer.up",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["description"] = "Save up to 20s if adds are coming soon.",
["criteria"] = "spell_targets > 1",
["action"] = "halo",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["action"] = "mind_spike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["chain"] = "1",
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash while moving as a low-priority action when adds will not come in 20 seconds.",
["criteria"] = "raid_event.adds.in > 20 & ! set_bonus.tier31_4pc",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "target.health.pct < 20",
["description"] = "Use Shadow Word: Death while moving as a low-priority action in execute",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["description"] = "Use Shadow Word: Death while moving as a low-priority action",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
["criteria"] = "set_bonus.tier31_4pc",
["description"] = "Use Shadow Word: Pain while moving as a low-priority action with T31 4pc",
},
{
["enabled"] = true,
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
["criteria"] = "! set_bonus.tier31_4pc",
["description"] = "Use Shadow Word: Pain while moving as a low-priority action without T31 4pc",
},
},
["empowered_filler"] = {
{
["enabled"] = true,
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["criteria"] = "buff.mind_flay_insanity.up",
["cycle_targets"] = 1,
},
},
["heal_for_tof"] = {
{
["enabled"] = true,
["description"] = "Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["action"] = "halo",
},
{
["enabled"] = true,
["description"] = "Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.",
["criteria"] = "buff.rhapsody.stack = 20 & talent.rhapsody.enabled",
["action"] = "holy_nova",
},
},
["default"] = {
{
["action"] = "silence",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_crash.enabled & ! action.shadow_crash.disabled & raid_event.adds.in < 15",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "target.time_to_die < 8 || ( dot.shadow_word_pain.ticking & dot.vampiric_touch.ticking || action.shadow_crash.in_flight ) & dot.devouring_plague.ticking",
["var_name"] = "all_dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.void_eruption.remains <= gcd.max * 3 & talent.void_eruption.enabled || cooldown.dark_ascension.up & talent.dark_ascension.enabled ) || talent.void_torrent.enabled & talent.psychic_link.enabled & cooldown.void_torrent.remains <= 4 & ( ! raid_event.adds.exists & spell_targets.vampiric_touch > 1 || raid_event.adds.in <= 5 || raid_event.adds.remains >= 6 & ! variable.holding_crash ) & ! buff.voidform.up",
["var_name"] = "pool_for_cds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.vampiric_touch >? 12",
["default"] = "12",
["var_name"] = "max_vts",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "is_vt_possible",
["criteria"] = "dot.vampiric_touch.refreshable || active_dot.vampiric_touch < cycle_enemies & fight_remains > 8",
["value_else"] = "false",
["value"] = "true",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "vts_applied",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "main",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "! buff.shadowform.up",
["action"] = "shadowform",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "mind_sear_cutoff",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "60",
["var_name"] = "pool_amount",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= 25 & spell_targets.shadow_crash <= 8 & ! boss & ( ! set_bonus.tier31_4pc || spell_targets.shadow_crash > 1 )",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! action.shadow_crash.in_flight & ( ! talent.shadow_crash.enabled || raid_event.adds.in < 25 || spell_targets.shadow_crash > 8 || ! boss || set_bonus.tier31_4pc & spell_targets.shadow_crash = 1 )",
["action"] = "vampiric_touch",
},
},
["aoe"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ( action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) ) >= variable.max_vts || ! variable.is_vt_possible || fight_remains < 8",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.max_vts - active_dot.vampiric_touch ) < 4 || raid_event.adds.in < 10 & raid_event.adds.count > ( variable.max_vts - active_dot.vampiric_touch )",
["criteria"] = "variable.holding_crash & talent.whispering_shadows.enabled",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ! variable.holding_crash ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "manual_vts_applied",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 & ! variable.manual_vts_applied & ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
["description"] = "High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE",
},
{
["enabled"] = true,
["action"] = "shadow_crash",
["cycle_targets"] = 1,
["criteria"] = "! variable.holding_crash & ( dot.vampiric_touch.refreshable || dot.vampiric_touch.remains <= target.time_to_die & ! buff.voidform.up & ( raid_event.adds.in - dot.vampiric_touch.remains ) < 15 )",
["description"] = "Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend or Mindbender on cooldown if DoTs are active and sync with Dark Ascension",
["criteria"] = "( dot.shadow_word_pain.ticking & variable.dots_up || action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["action"] = "void_bolt",
["description"] = "Use Void Bolt at the highest priority",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["criteria"] = "talent.distorted_reality.enabled & ( active_dot.devouring_plague = 0 || insanity.deficit <= 20 )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["criteria"] = "dot.devouring_plague.remains & ( set_bonus.tier31_4pc || pet.fiend.active & talent.inescapable_torment.enabled & set_bonus.tier31_2pc )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["criteria"] = "( cooldown.mind_blast.full_recharge_time <= gcd.max + cast_time || pet.fiend.remains <= cast_time + gcd.max ) & pet.fiend.active & talent.inescapable_torment.enabled & pet.fiend.remains > cast_time & active_enemies <= 7 & ! buff.mind_devourer.up & dot.devouring_plague.remains > execute_time",
["description"] = "Use Mind Blast when capped on charges and talented into Mind Devourer to fish for the buff or if Inescapable Torment is talented with Mindbender active. Only use when facing 3-7 targets.",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "pet.fiend.remains <= 2 & pet.fiend.active & talent.inescapable_torment.enabled & active_enemies <= 7",
["description"] = "High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["criteria"] = "talent.distorted_reality.enabled",
["description"] = "Use Devouring Plague on enemies that will live the longest with distorted reality.",
},
{
["enabled"] = true,
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.",
["criteria"] = "( remains <= gcd.max & ! variable.pool_for_cds || insanity.deficit <= 20 || buff.voidform.up & cooldown.void_bolt.remains > buff.voidform.remains & cooldown.void_bolt.remains <= buff.voidform.remains + 2 ) & ! talent.distorted_reality.enabled",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains || variable.holding_crash ) & ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "variable.dots_up & talent.inescapable_torment.enabled & pet.fiend.active & ( ( ! talent.insidious_ire.enabled & ! talent.idol_of_yoggsaron.enabled ) || buff.deathspeaker.up ) & ! set_bonus.tier31_2pc",
["description"] = "Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active",
},
{
["enabled"] = true,
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
["criteria"] = "variable.dots_up & cooldown.mind_blast.full_recharge_time >= gcd.max * 3 & talent.idol_of_cthun.enabled & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled )",
["description"] = "High Priority Mind Spike: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["criteria"] = "buff.mind_flay_insanity.up & variable.dots_up & cooldown.mind_blast.full_recharge_time >= gcd.max * 3 & talent.idol_of_cthun.enabled & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled )",
["description"] = "High Priority Mind Flay: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["criteria"] = "variable.dots_up & ( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
["description"] = "# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["criteria"] = "( ! variable.holding_crash || raid_event.adds.count / ( active_dot.vampiric_touch + raid_event.adds.count ) < 1.5 ) & ( dot.devouring_plague.remains >= 2.5 || buff.voidform.up )",
["description"] = "Void Torrent action list for AoE",
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["criteria"] = "buff.mind_flay_insanity.up & talent.idol_of_cthun.enabled",
["description"] = "High priority action for Mind Flay: Insanity to fish for Idol of C'Thun procs, cancel as soon as something else is more important and most of the channel has completed",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["cds"] = {
{
["enabled"] = true,
["description"] = "TODO: Check VE/DA enter conditions based on dots",
["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up & ( fight_remains <= cooldown.power_infusion.remains + 15 ) || boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 8",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 12",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains <= 15",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "nymues_unraveling_spindle",
["description"] = "Use Nymue's before we go into our cooldowns",
["criteria"] = "variable.dots_up & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < 3 + gcd.max || fight_remains < 15 )",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["description"] = "Sync Power Infusion with Voidform or Dark Ascension",
["criteria"] = "( buff.voidform.up || buff.dark_ascension.up )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting",
["criteria"] = "! cooldown.fiend.up & ( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled || active_enemies > 2 & ! talent.inescapable_torment.rank ) & ( cooldown.mind_blast.charges = 0 || time > 15 )",
["action"] = "void_eruption",
},
{
["enabled"] = true,
["description"] = "Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets",
["criteria"] = "pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled",
["action"] = "dark_ascension",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "( dot.shadow_word_pain.ticking & variable.vts_applied || action.shadow_crash.in_flight )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%",
["criteria"] = "health.pct <= 75",
["action"] = "desperate_prayer",
},
},
["main"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_dot.vampiric_touch = active_enemies || action.shadow_crash.in_flight & talent.whispering_shadows.enabled || fight_remains < 8",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension",
["criteria"] = "variable.dots_up & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
},
{
["enabled"] = true,
["description"] = "Use Void Bolt at the highest priority",
["criteria"] = "variable.dots_up",
["action"] = "void_bolt",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["criteria"] = "remains <= gcd.max || ( ! talent.distorted_reality.enabled || active_enemies = 1 ) & insanity.deficit <= 16",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( set_bonus.tier31_4pc || pet.fiend.active & talent.inescapable_torment.enabled & set_bonus.tier31_2pc ) & dot.devouring_plague.ticking",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["criteria"] = "( dot.devouring_plague.remains > execute_time & ( cooldown.mind_blast.full_recharge_time <= gcd.max + execute_time ) || pet.fiend.remains <= execute_time + gcd.max ) & pet.fiend.active & talent.inescapable_torment.enabled & pet.fiend.remains > execute_time & active_enemies <= 7",
["description"] = "High priority Mind Blast action when using Inescapable Torment",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["criteria"] = "dot.devouring_plague.ticking & pet.fiend.remains <= 2 & pet.fiend.active & talent.inescapable_torment.enabled & active_enemies <= 7",
["description"] = "High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds",
},
{
["enabled"] = true,
["description"] = "Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s",
["criteria"] = "fight_remains <= duration + 4",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["criteria"] = "( ! talent.distorted_reality.enabled || active_enemies = 1 || remains <= gcd.max ) & ( insanity.deficit <= 35 & talent.distorted_reality.enabled || buff.dark_ascension.up || buff.mind_devourer.up & cooldown.mind_blast.up )",
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["criteria"] = "! variable.holding_crash & talent.idol_of_cthun.enabled & cooldown.mind_blast.full_recharge_time >= 3 & talent.void_eruption.enabled & dot.devouring_plague.remains >= 2.5",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier31_2pc",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range",
["criteria"] = "! variable.holding_crash & ( dot.vampiric_touch.refreshable || buff.deaths_torment.stack > 9 & set_bonus.tier31_4pc & active_enemies > 1 )",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["description"] = "Consume T31 4pc SWPs",
["criteria"] = "buff.deaths_torment.stack > 9 & set_bonus.tier31_4pc & active_enemies = 1",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active",
["criteria"] = "variable.dots_up & talent.inescapable_torment.enabled & pet.fiend.active & ( ( ! talent.insidious_ire.enabled & ! talent.idol_of_yoggsaron.enabled ) || buff.deathspeaker.up ) & ! set_bonus.tier31_2pc",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["criteria"] = "refreshable & target.time_to_die >= 12 & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains || variable.holding_crash || ! talent.whispering_shadows.enabled ) & ( ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
["description"] = "Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon",
},
{
["enabled"] = true,
["description"] = "Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
["criteria"] = "( ! buff.mind_devourer.up || cooldown.void_eruption.up & talent.void_eruption.enabled )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["interrupt_if"] = "cooldown.shadow_word_death.ready&pet.fiend.active&set_bonus.tier31_2pc",
["criteria"] = "! variable.holding_crash & ( ! talent.idol_of_cthun.enabled || ! talent.void_eruption.enabled ) & dot.devouring_plague.remains >= 2.5",
["description"] = "Void Torrent if you are not holding Shadow Crash for an add pack coming, prefer the target with the most DoTs active. Only cast if Devouring Plague is on that target and will last at least 2 seconds",
},
{
["enabled"] = true,
["description"] = "Cast Mindgames if all DoTs will be active by the time the cast finishes",
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["trinkets"] = {
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || boss & fight_remains < 20",
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["use_off_gcd"] = 1,
["name"] = "iridal_the_earths_master",
["criteria"] = "gcd.remains > 0 || boss & fight_remains < 20",
},
{
["enabled"] = true,
["action"] = "dreambinder_loom_of_the_great_cycle",
["use_off_gcd"] = 1,
["name"] = "dreambinder_loom_of_the_great_cycle",
["criteria"] = "gcd.remains > 0 || boss & fight_remains < 20",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_inferno",
["action"] = "darkmoon_deck_box_inferno",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_rime",
["action"] = "darkmoon_deck_box_rime",
},
{
["enabled"] = true,
["name"] = "darkmoon_deck_box_dance",
["action"] = "darkmoon_deck_box_dance",
},
{
["enabled"] = true,
["name"] = "conjured_chillglobe",
["action"] = "conjured_chillglobe",
},
{
["enabled"] = true,
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.iceblood_deathsnare >= 5 ) || fight_remains < 20",
["name"] = "iceblood_deathsnare",
["action"] = "iceblood_deathsnare",
},
{
["enabled"] = true,
["name"] = "erupting_spear_fragment",
["description"] = "Use Erupting Spear Fragment with cooldowns, adds are currently active, or the fight will end in less than 20 seconds",
["criteria"] = "buff.power_infusion.up || raid_event.adds.up || boss & fight_remains < 20",
["action"] = "erupting_spear_fragment",
},
{
["enabled"] = true,
["name"] = "belorrelos_the_suncaller",
["description"] = "Use Belor'relos on cooldown except to hold for incoming adds or if already facing 5 or more targets",
["criteria"] = "( ! raid_event.adds.exists || raid_event.adds.up || spell_targets.belorrelos_the_suncaller >= 5 || fight_remains < 20 ) & equipped.belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["name"] = "beacon_to_the_beyond",
["description"] = "Use Beacon to the Beyond on cooldown except to hold for incoming adds or if already facing 5 or more targets",
["criteria"] = "! raid_event.adds.exists || raid_event.adds.up || spell_targets.beacon_to_the_beyond >= 5 || boss & fight_remains < 20",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up || buff.power_infusion.up || buff.dark_ascension.up || ( cooldown.void_eruption.remains > 10 & trinket.cooldown.duration <= 60 ) || boss & fight_remains < 20",
["action"] = "use_items",
},
{
["enabled"] = true,
["name"] = "desperate_invokers_codex",
["action"] = "desperate_invokers_codex",
},
},
},
["version"] = 20240515,
["warnings"] = "The import for 'filler' required some automated changes.\nLine 2: Converted 'talent.mind_spike' to 'talent.mind_spike.enabled' (1x).\nLine 4: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\n\nThe import for 'heal_for_tof' required some automated changes.\nLine 3: Converted 'talent.rhapsody' to 'talent.rhapsody.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.shadow_crash' to 'talent.shadow_crash.enabled' (1x).\nLine 4: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 4: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 4: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 4: Converted 'talent.psychic_link' to 'talent.psychic_link.enabled' (1x).\nLine 7: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 2: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 4: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 7: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 7: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 9: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 10: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 11: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 12: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 13: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 14: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 15: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 16: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 16: Converted 'talent.insidious_ire' to 'talent.insidious_ire.enabled' (1x).\nLine 16: Converted 'talent.idol_of_yoggsaron' to 'talent.idol_of_yoggsaron.enabled' (1x).\nLine 17: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 17: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 18: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 18: Converted 'talent.void_torrent' to 'talent.void_torrent.enabled' (1x).\nLine 19: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 20: Converted operations in '(!variable.holding_crash||raid_event.adds.count%(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)' to '(!variable.holding_crash||raid_event.adds.count/(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)'.\nLine 21: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 6: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 8: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 9: Converted 'talent.mindbender' to 'talent.mindbender.enabled' (1x).\nLine 9: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\n\nThe import for 'main' required some automated changes.\nLine 1: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 3: Converted 'talent.dark_ascension' to 'talent.dark_ascension.enabled' (1x).\nLine 5: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 6: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 7: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 8: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 10: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 10: Converted 'talent.distorted_reality' to 'talent.distorted_reality.enabled' (1x).\nLine 11: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 11: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 15: Converted 'talent.inescapable_torment' to 'talent.inescapable_torment.enabled' (1x).\nLine 15: Converted 'talent.insidious_ire' to 'talent.insidious_ire.enabled' (1x).\nLine 15: Converted 'talent.idol_of_yoggsaron' to 'talent.idol_of_yoggsaron.enabled' (1x).\nLine 16: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 16: Converted 'talent.whispering_shadows' to 'talent.whispering_shadows.enabled' (1x).\nLine 17: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\nLine 18: Converted 'talent.idol_of_cthun' to 'talent.idol_of_cthun.enabled' (1x).\nLine 18: Converted 'talent.void_eruption' to 'talent.void_eruption.enabled' (1x).\n\nImported 9 action lists.\n",
["spec"] = 258,
["profile"] = "actions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/arcane_torrent\nactions.precombat+=/variable,name=mind_sear_cutoff,op=set,value=2\nactions.precombat+=/variable,name=pool_amount,op=set,value=60\nactions.precombat+=/shadow_crash,if=raid_event.adds.in>=25&spell_targets.shadow_crash<=8&!boss&(!set_bonus.tier31_4pc||spell_targets.shadow_crash>1)\nactions.precombat+=/vampiric_touch,if=refreshable&!action.shadow_crash.in_flight&(!talent.shadow_crash.enabled||raid_event.adds.in<25||spell_targets.shadow_crash>8||!boss||set_bonus.tier31_4pc&spell_targets.shadow_crash=1)\n\nactions+=/silence\nactions+=/variable,name=holding_crash,op=set,value=talent.shadow_crash&!action.shadow_crash.disabled&raid_event.adds.in<15\nactions+=/variable,name=all_dots_up,op=set,value=target.time_to_die<8||(dot.shadow_word_pain.ticking&dot.vampiric_touch.ticking||action.shadow_crash.in_flight)&dot.devouring_plague.ticking\nactions+=/variable,name=pool_for_cds,op=set,value=(cooldown.void_eruption.remains<=gcd.max*3&talent.void_eruption||cooldown.dark_ascension.up&talent.dark_ascension)||talent.void_torrent&talent.psychic_link&cooldown.void_torrent.remains<=4&(!raid_event.adds.exists&spell_targets.vampiric_touch>1||raid_event.adds.in<=5||raid_event.adds.remains>=6&!variable.holding_crash)&!buff.voidform.up\nactions+=/variable,name=max_vts,op=set,default=12,value=spell_targets.vampiric_touch>?12\nactions+=/variable,name=is_vt_possible,op=set,value=true,value_else=false,condition=dot.vampiric_touch.refreshable||active_dot.vampiric_touch<cycle_enemies&fight_remains>8\nactions+=/variable,name=vts_applied,op=set,value=(active_dot.vampiric_touch+8*action.shadow_crash.in_flight&talent.whispering_shadows)>=variable.max_vts||!variable.is_vt_possible\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2\nactions+=/run_action_list,name=main\n\nactions.aoe+=/variable,name=dots_up,op=set,value=(active_dot.vampiric_touch+8*(action.shadow_crash.in_flight&talent.whispering_shadows))>=variable.max_vts||!variable.is_vt_possible||fight_remains<8\nactions.aoe+=/variable,name=holding_crash,op=set,value=(variable.max_vts-active_dot.vampiric_touch)<4||raid_event.adds.in<10&raid_event.adds.count>(variable.max_vts-active_dot.vampiric_touch),if=variable.holding_crash&talent.whispering_shadows\nactions.aoe+=/variable,name=manual_vts_applied,op=set,value=(active_dot.vampiric_touch+8*!variable.holding_crash)>=variable.max_vts||!variable.is_vt_possible\n# High Priority action to put out Vampiric Touch on enemies that will live at least 18 seconds, up to 12 targets manually while prepping AoE\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0&!variable.manual_vts_applied&!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use Shadow Crash to apply Vampiric Touch to as many adds as possible while being efficient with Vampiric Touch refresh windows\nactions.aoe+=/shadow_crash,cycle_targets=1,if=!variable.holding_crash&(dot.vampiric_touch.refreshable||dot.vampiric_touch.remains<=target.time_to_die&!buff.voidform.up&(raid_event.adds.in-dot.vampiric_touch.remains)<15)\nactions.aoe+=/call_action_list,name=cds,if=fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend or Mindbender on cooldown if DoTs are active and sync with Dark Ascension\nactions.aoe+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.dots_up||action.shadow_crash.in_flight&talent.whispering_shadows)&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\n# Use Void Bolt at the highest priority\nactions.aoe+=/void_bolt,cycle_targets=1\nactions.aoe+=/devouring_plague,cycle_targets=1,if=talent.distorted_reality&(active_dot.devouring_plague=0||insanity.deficit<=20)\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.remains&(set_bonus.tier31_4pc||pet.fiend.active&talent.inescapable_torment&set_bonus.tier31_2pc)\n# Use Mind Blast when capped on charges and talented into Mind Devourer to fish for the buff or if Inescapable Torment is talented with Mindbender active. Only use when facing 3-7 targets.\nactions.aoe+=/mind_blast,cycle_targets=1,if=(cooldown.mind_blast.full_recharge_time<=gcd.max+cast_time||pet.fiend.remains<=cast_time+gcd.max)&pet.fiend.active&talent.inescapable_torment&pet.fiend.remains>cast_time&active_enemies<=7&!buff.mind_devourer.up&dot.devouring_plague.remains>execute_time\n# High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=pet.fiend.remains<=2&pet.fiend.active&talent.inescapable_torment&active_enemies<=7\n## actions.aoe+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Use Devouring Plague on enemies that will live the longest with distorted reality.\nactions.aoe+=/devouring_plague,cycle_targets=1,if=talent.distorted_reality\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.\nactions.aoe+=/devouring_plague,if=(remains<=gcd.max&!variable.pool_for_cds||insanity.deficit<=20||buff.voidform.up&cooldown.void_bolt.remains>buff.voidform.remains&cooldown.void_bolt.remains<=buff.voidform.remains+2)&!talent.distorted_reality\nactions.aoe+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains||variable.holding_crash)&!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active\nactions.aoe+=/shadow_word_death,cycle_targets=1,if=variable.dots_up&talent.inescapable_torment&pet.fiend.active&((!talent.insidious_ire&!talent.idol_of_yoggsaron)||buff.deathspeaker.up)&!set_bonus.tier31_2pc\n# High Priority Mind Spike: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active\nactions.aoe+=/mind_spike_insanity,cycle_targets=1,if=variable.dots_up&cooldown.mind_blast.full_recharge_time>=gcd*3&talent.idol_of_cthun&(!cooldown.void_torrent.up||!talent.void_torrent)\n# High Priority Mind Flay: Insanity to fish for C'Thun procs when Mind Blast is not capped and Void Torrent is not available and Mindbender is not active\nactions.aoe+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up&variable.dots_up&cooldown.mind_blast.full_recharge_time>=gcd*3&talent.idol_of_cthun&(!cooldown.void_torrent.up||!talent.void_torrent)\n# # Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.aoe+=/mind_blast,cycle_targets=1,if=variable.dots_up&(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\n# Void Torrent action list for AoE\nactions.aoe+=/void_torrent,cycle_targets=1,if=(!variable.holding_crash||raid_event.adds.count%(active_dot.vampiric_touch+raid_event.adds.count)<1.5)&(dot.devouring_plague.remains>=2.5||buff.voidform.up)\n# High priority action for Mind Flay: Insanity to fish for Idol of C'Thun procs, cancel as soon as something else is more important and most of the channel has completed\nactions.aoe+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up&talent.idol_of_cthun,interrupt_if=ticks>=2,interrupt_immediate=1\nactions.aoe+=/call_action_list,name=filler\n\n# TODO: Check VE/DA enter conditions based on dots\nactions.cds+=/potion,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up&(fight_remains<=cooldown.power_infusion.remains+15)||boss&fight_remains<=30\nactions.cds+=/fireblood,if=buff.power_infusion.up||boss&fight_remains<=8\nactions.cds+=/berserking,if=buff.power_infusion.up||boss&fight_remains<=12\nactions.cds+=/blood_fury,if=buff.power_infusion.up||boss&fight_remains<=15\nactions.cds+=/ancestral_call,if=buff.power_infusion.up||boss&fight_remains<=15\n# Use Nymue's before we go into our cooldowns\nactions.cds+=/use_item,name=nymues_unraveling_spindle,if=variable.dots_up&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<3+gcd.max||fight_remains<15)\n# Sync Power Infusion with Voidform or Dark Ascension\nactions.cds+=/power_infusion,if=(buff.voidform.up||buff.dark_ascension.up)\n# Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting\nactions.cds+=/void_eruption,if=!cooldown.fiend.up&(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender||active_enemies>2&!talent.inescapable_torment.rank)&(cooldown.mind_blast.charges=0||time>15)\n# Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets\nactions.cds+=/dark_ascension,if=pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment\nactions.cds+=/call_action_list,name=trinkets\nactions.cds+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.vts_applied||action.shadow_crash.in_flight)\n# Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\n# Cast Vampiric Touch to consume Unfurling Darkness, prefering the target with the lowest DoT duration active\nactions.filler+=/vampiric_touch,cycle_targets=1,if=buff.unfurling_darkness.up\n## actions.filler+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Use PWS with CR talented to trigger TOF if there are no better alternatives available to do this as we still get insanity for a PWS cast.\n## actions.filler+=/power_word_shield,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&talent.crystalline_reflection\nactions.filler+=/call_action_list,name=empowered_filler,if=dot.devouring_plague.remains>action.mind_spike.cast_time||!talent.mind_spike\n# Cast Shadow Word: Death if the target is in execute, you have a Deathspeaker proc or you have the Season 3 2-piece bonus\nactions.filler+=/shadow_word_death,cycle_targets=1,if=(target.health.pct<20||buff.deathspeaker.up||set_bonus.tier31_2pc)&dot.devouring_plague.ticking\nactions.filler+=/shadow_word_death,cycle_targets=1,if=talent.inescapable_torment&pet.fiend.active\nactions.filler+=/mindgames,cycle_targets=1\nactions.filler+=/devouring_plague,if=buff.voidform.up||cooldown.dark_ascension.up||buff.mind_devourer.up\n# Save up to 20s if adds are coming soon.\nactions.filler+=/halo,if=spell_targets>1\n## Using a heal with no damage kickbacks for TOF is damage neutral, so we will do it.\n## actions.filler+=/power_word_life,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up\nactions.filler+=/call_action_list,name=empowered_filler\n## actions.filler+=/call_action_list,name=heal_for_tof,if=equipped.rashoks_molten_heart&(active_allies-(10-buff.molten_radiance.value))>=10&buff.molten_radiance.up,line_cd=5\nactions.filler+=/mind_spike,cycle_targets=1,\nactions.filler+=/mind_flay,cycle_targets=1,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2\nactions.filler+=/divine_star\n# Use Shadow Crash while moving as a low-priority action when adds will not come in 20 seconds.\nactions.filler+=/shadow_crash,if=raid_event.adds.in>20&!set_bonus.tier31_4pc\n# Use Shadow Word: Death while moving as a low-priority action in execute\nactions.filler+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20\n# Use Shadow Word: Death while moving as a low-priority action\nactions.filler+=/shadow_word_death,cycle_targets=1\n# Use Shadow Word: Pain while moving as a low-priority action with T31 4pc\nactions.filler+=/shadow_word_pain,cycle_targets=1,if=set_bonus.tier31_4pc\n# Use Shadow Word: Pain while moving as a low-priority action without T31 4pc\nactions.filler+=/shadow_word_pain,cycle_targets=1,if=!set_bonus.tier31_4pc\n\nactions.empowered_filler+=/mind_spike_insanity,cycle_targets=1\nactions.empowered_filler+=/mind_flay,cycle_targets=1,if=buff.mind_flay_insanity.up\n\nactions.main+=/variable,name=dots_up,op=set,value=active_dot.vampiric_touch=active_enemies||action.shadow_crash.in_flight&talent.whispering_shadows||fight_remains<8\nactions.main+=/call_action_list,name=cds,if=fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension\nactions.main+=/mindbender,if=variable.dots_up&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\n# Use Void Bolt at the highest priority\nactions.main+=/void_bolt,if=variable.dots_up\nactions.main+=/devouring_plague,cycle_targets=1,if=remains<=gcd.max||(!talent.distorted_reality||active_enemies=1)&insanity.deficit<=16\nactions.main+=/shadow_word_death,if=(set_bonus.tier31_4pc||pet.fiend.active&talent.inescapable_torment&set_bonus.tier31_2pc)&dot.devouring_plague.ticking\n# High priority Mind Blast action when using Inescapable Torment\nactions.main+=/mind_blast,cycle_targets=1,if=(dot.devouring_plague.remains>execute_time&(cooldown.mind_blast.full_recharge_time<=gcd.max+execute_time)||pet.fiend.remains<=execute_time+gcd.max)&pet.fiend.active&talent.inescapable_torment&pet.fiend.remains>execute_time&active_enemies<=7\n# High Priority Shadow Word: Death is Mindbender is expiring in less than 2 seconds\nactions.main+=/shadow_word_death,cycle_targets=1,if=dot.devouring_plague.ticking&pet.fiend.remains<=2&pet.fiend.active&talent.inescapable_torment&active_enemies<=7\n## actions.main+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s\nactions.main+=/devouring_plague,if=fight_remains<=duration+4\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 20 or to get out an extra Void Bolt by extending Voidform. With Distorted Reality can maintain more than one at a time in multi-target.\nactions.main+=/devouring_plague,cycle_targets=1,if=(!talent.distorted_reality||active_enemies=1||remains<=gcd.max)&(insanity.deficit<=35&talent.distorted_reality||buff.dark_ascension.up||buff.mind_devourer.up&cooldown.mind_blast.up)\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&talent.idol_of_cthun&cooldown.mind_blast.full_recharge_time>=3&talent.void_eruption&dot.devouring_plague.remains>=2.5\nactions.main+=/shadow_word_death,if=set_bonus.tier31_2pc\n# Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range\nactions.main+=/shadow_crash,if=!variable.holding_crash&(dot.vampiric_touch.refreshable||buff.deaths_torment.stack>9&set_bonus.tier31_4pc&active_enemies>1)\n# Consume T31 4pc SWPs\nactions.main+=/shadow_word_pain,if=buff.deaths_torment.stack>9&set_bonus.tier31_4pc&active_enemies=1\n# Use Shadow Word: Death with Inescapable Torment and Mindbender active and not talented into Insidious Ire and Yogg or Deathspeaker is active\nactions.main+=/shadow_word_death,if=variable.dots_up&talent.inescapable_torment&pet.fiend.active&((!talent.insidious_ire&!talent.idol_of_yoggsaron)||buff.deathspeaker.up)&!set_bonus.tier31_2pc\n# Put out Vampiric Touch on enemies that will live at least 12s and Shadow Crash is not available soon\nactions.main+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=12&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains||variable.holding_crash||!talent.whispering_shadows)&(!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.main+=/mind_blast,if=(!buff.mind_devourer.up||cooldown.void_eruption.up&talent.void_eruption)\n# Void Torrent if you are not holding Shadow Crash for an add pack coming, prefer the target with the most DoTs active. Only cast if Devouring Plague is on that target and will last at least 2 seconds\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&(!talent.idol_of_cthun||!talent.void_eruption)&dot.devouring_plague.remains>=2.5,interrupt_if=cooldown.shadow_word_death.ready&pet.fiend.active&set_bonus.tier31_2pc\n# Cast Mindgames if all DoTs will be active by the time the cast finishes\nactions.main+=/call_action_list,name=filler\n\n# Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/halo\n# Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/divine_star\n# Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\nactions.heal_for_tof+=/holy_nova,if=buff.rhapsody.stack=20&talent.rhapsody\n\nactions.trinkets+=/use_item,name=voidmenders_shadowgem,if=buff.power_infusion.up||boss&fight_remains<20\nactions.trinkets+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains>0||boss&fight_remains<20\nactions.trinkets+=/use_item,name=dreambinder_loom_of_the_great_cycle,use_off_gcd=1,if=gcd.remains>0||boss&fight_remains<20\nactions.trinkets+=/use_item,name=darkmoon_deck_box_inferno\nactions.trinkets+=/use_item,name=darkmoon_deck_box_rime\nactions.trinkets+=/use_item,name=darkmoon_deck_box_dance\nactions.trinkets+=/use_item,name=conjured_chillglobe\nactions.trinkets+=/use_item,name=iceblood_deathsnare,if=(!raid_event.adds.exists||raid_event.adds.up||spell_targets.iceblood_deathsnare>=5)||fight_remains<20\n# Use Erupting Spear Fragment with cooldowns, adds are currently active, or the fight will end in less than 20 seconds\nactions.trinkets+=/use_item,name=erupting_spear_fragment,if=buff.power_infusion.up||raid_event.adds.up||boss&fight_remains<20\n# Use Belor'relos on cooldown except to hold for incoming adds or if already facing 5 or more targets\nactions.trinkets+=/use_item,name=belorrelos_the_suncaller,if=(!raid_event.adds.exists||raid_event.adds.up||spell_targets.belorrelos_the_suncaller>=5||fight_remains<20)&equipped.belorrelos_the_suncaller\n# Use Beacon to the Beyond on cooldown except to hold for incoming adds or if already facing 5 or more targets\nactions.trinkets+=/use_item,name=beacon_to_the_beyond,if=!raid_event.adds.exists||raid_event.adds.up||spell_targets.beacon_to_the_beyond>=5||boss&fight_remains<20\nactions.trinkets+=/use_items,if=buff.voidform.up||buff.power_infusion.up||buff.dark_ascension.up||(cooldown.void_eruption.remains>10&trinket.cooldown.duration<=60)||boss&fight_remains<20\nactions.trinkets+=/use_item,name=desperate_invokers_codex",
},
["Fire"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["author"] = "SimC",
["desc"] = "2024-05-08: SimC update.\n\n2024-03-12: Minor sim update.\n\n2024-01-04:  Retire an old trinket.\n\n2023-11-11 & 26: Minor SimC update.\n\n2023-08-27:  Sync up to 10.1.5/7.\n\n2023-08-07:  Minor SimC updates again.\n\n2023-07-12:  Minor SimC update.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Use debuff.sated.up for Temporal Warp.\n\n2023-05-08:  Updates for 10.1, including many variables shifted from priority to internal code.\n\n2023-03-20:  Modify priority for \"Instant-Only When Moving\" setting.\n\n2023-03-27:  Remove Scorch > Pyroblast hardcast scenario.\n\n2023-04-02:  Revise Scorch > Pyroblast to check Hot Streak.",
["lists"] = {
["combustion_cooldowns"] = {
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.up",
["action"] = "berserking",
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.temporal_warp.enabled || runeforge.temporal_warp.enabled ) & debuff.sated.up",
["action"] = "time_warp",
},
{
["enabled"] = true,
["action"] = "gladiators_badge",
["effect_name"] = "gladiators_badge",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["action"] = "irideus_fragment",
},
{
["enabled"] = true,
["name"] = "spoils_of_neltharus",
["action"] = "spoils_of_neltharus",
},
{
["enabled"] = true,
["name"] = "tome_of_unstable_power",
["action"] = "tome_of_unstable_power",
},
{
["enabled"] = true,
["name"] = "timebreaching_talon",
["action"] = "timebreaching_talon",
},
{
["enabled"] = true,
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["name"] = "horn_of_valor",
["action"] = "horn_of_valor",
},
{
["enabled"] = true,
["name"] = "timethiefs_gambit",
["action"] = "timethiefs_gambit",
},
{
["enabled"] = true,
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "counterspell",
},
{
["enabled"] = true,
["description"] = "The second Time Warp is usually best used immediately on pull with Temporal Warp so that it comes off cooldown earlier, this can sometimes be slightly worse if doing so will not result in additional Time Warp(s) throughout the encounter. Additionally, it should always be used at the end of the fight regardless of Combustion being ready if it is available.",
["criteria"] = "debuff.sated.up & talent.temporal_warp.enabled & ( firestarter.active || interpolated_fight_remains < buff.bloodlust.duration )",
["action"] = "time_warp",
},
{
["enabled"] = true,
["criteria"] = "buff.potion.duration > variable.time_to_combustion + buff.combustion.duration",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion > action_cooldown - 5",
["action"] = "gladiators_badge",
["effect_name"] = "gladiators_badge",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= variable.empyreal_ordnance_delay & variable.time_to_combustion > variable.empyreal_ordnance_delay - 5",
["name"] = "empyreal_ordnance",
["action"] = "empyreal_ordnance",
},
{
["enabled"] = true,
["criteria"] = "( variable.time_to_combustion <= variable.combustion_precast_time + 2 || fight_remains < variable.time_to_combustion ) & buff.combustion.down & ( ! equipped.the_first_sigil || cooldown.the_first_sigil_367241.remains > 40 )",
["name"] = "shadowed_orb_of_torment",
["action"] = "shadowed_orb_of_torment",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 8 || fight_remains < variable.time_to_combustion",
["name"] = "grim_eclipse",
["action"] = "grim_eclipse",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "buff.combustion.up & buff.combustion.remains > 11",
["description"] = "New trinket and weapon lines  need special line for Nymue trinket which would delay combustion under certain conditions?",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.up",
["name"] = "timethiefs_gambit",
["action"] = "timethiefs_gambit",
},
{
["enabled"] = true,
["criteria"] = "( variable.time_to_combustion <= 3 & buff.fury_of_the_sun_king.up ) || ( buff.combustion.up & buff.combustion.remains > 11 )",
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["criteria"] = "( variable.time_to_combustion <= 3 & buff.fury_of_the_sun_king.up ) || ( buff.combustion.up & buff.combustion.remains > 11 )",
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 9",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["name"] = "iridal_the_earths_master",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["description"] = "Iridal can and should be used while on the GCD",
["criteria"] = "gcd.remains >= 0.6 * gcd.max",
["action"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.steroid_trinket_equipped & buff.combustion.down ) || ( variable.steroid_trinket_equipped & trinket.t1.has_cooldown & trinket.t1.cooldown.remains > 20 & buff.combustion.down ) || ( variable.steroid_trinket_equipped & trinket.t2.has_cooldown & trinket.t2.cooldown.remains > 20 & buff.combustion.down )",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "! variable.item_cutoff_active",
["name"] = "glyph_of_assimilation",
["action"] = "glyph_of_assimilation",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 5",
["name"] = "macabre_sheet_music",
["action"] = "macabre_sheet_music",
},
{
["enabled"] = true,
["name"] = "dreadfire_vessel",
["action"] = "dreadfire_vessel",
["criteria"] = "! variable.item_cutoff_active & ( buff.infernal_cascade.stack = buff.infernal_cascade.max_stack || ! conduit.infernal_cascade.enabled || variable.combustion_on_use & ! ( runeforge.sun_kings_blessing.enabled || talent.sun_kings_blessing.enabled ) || variable.time_to_combustion > interpolated_fight_remains %  ( action_cooldown + 10 ) )",
["description"] = "If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Feel the Burn is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown. Note that with Sun King's Blessing, it is possible to sync this with SKB Combustions regardless of on-use trinkets.",
},
{
["enabled"] = true,
["name"] = "inscrutable_quantum_device",
["action"] = "inscrutable_quantum_device",
["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
["description"] = "Items that do not benefit Combustion should just be used outside of Combustion at some point.",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "flame_of_battle",
["action"] = "flame_of_battle",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "wakeners_frond",
["action"] = "wakeners_frond",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "instructors_divine_bell",
["action"] = "instructors_divine_bell",
},
{
["enabled"] = true,
["criteria"] = "equipped.gladiators_badge & ! variable.item_cutoff_active",
["name"] = "sunblood_amethyst",
["action"] = "sunblood_amethyst",
},
{
["enabled"] = true,
["criteria"] = "buff.scars_of_fraternal_strife_4.down",
["name"] = "scars_of_fraternal_strife",
["action"] = "scars_of_fraternal_strife",
},
{
["enabled"] = true,
["criteria"] = "! variable.item_cutoff_active",
["action"] = "use_items",
},
{
["enabled"] = true,
["description"] = "Use Frost Nova to trigger Grisly Icicle.",
["criteria"] = "runeforge.grisly_icicle.enabled & buff.combustion.down & ( variable.time_to_combustion > action_cooldown || variable.time_to_combustion < variable.combustion_precast_time + execute_time )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["description"] = "Get the Disciplinary Command buff up, unless combustion is soon.",
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
["action"] = "counterspell",
},
{
["enabled"] = true,
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + execute_time + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 & ! talent.rune_of_power.enabled )",
["action"] = "arcane_explosion",
},
{
["enabled"] = true,
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.remains < cast_time & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
["action"] = "frostbolt",
},
{
["enabled"] = true,
["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["op"] = "set",
["description"] = "Pool as many Fire Blasts as possible for Combustion.",
["use_while_casting"] = 1,
["value"] = "buff.combustion.down & action.fire_blast.charges_fractional + ( variable.time_to_combustion + action.shifting_power.full_reduction * variable.shifting_power_before_combustion ) / cooldown.fire_blast.duration - 1 < cooldown.fire_blast.max_charges + variable.overpool_fire_blasts / cooldown.fire_blast.duration - ( buff.combustion.duration / cooldown.fire_blast.duration )  % 1 & variable.time_to_combustion < fight_remains",
["var_name"] = "fire_blast_pooling",
["use_off_gcd"] = 1,
["action"] = "variable",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.up || variable.time_to_combustion < variable.combustion_precast_time & cooldown.combustion.remains < variable.combustion_precast_time",
["list_name"] = "combustion_phase",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["description"] = "Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.",
["op"] = "set",
["criteria"] = "! variable.fire_blast_pooling & talent.sun_kings_blessing.enabled",
["value"] = "searing_touch.active & action.fire_blast.full_recharge_time > 3 * gcd.max",
["var_name"] = "fire_blast_pooling",
["action"] = "variable",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & ( action.fire_blast.charges = 0 || variable.fire_blast_pooling ) & ( ! improved_scorch.active || debuff.improved_scorch.remains > cast_time + action.scorch.cast_time & ! buff.fury_of_the_sun_king.up ) & ! buff.hot_streak.react & variable.shifting_power_before_combustion",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! variable.fire_blast_pooling & variable.time_to_combustion > 0 & active_enemies >= variable.hard_cast_flamestrike & ! firestarter.active & ! buff.hot_streak.react & ( buff.heating_up.react & action.flamestrike.execute_remains < 0.5 || charges_fractional >= 2 )",
["use_off_gcd"] = 1,
["description"] = "When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Feel the Burn.",
["action"] = "fire_blast",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Feel the Burn, they should be spread out to maintain the Feel the Burn buff.",
["criteria"] = "buff.combustion.down & firestarter.active & variable.time_to_combustion > 0",
["list_name"] = "firestarter_fire_blasts",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "fire_blast",
["criteria"] = "action.shifting_power.executing & full_recharge_time < action.shifting_power.tick_reduction",
["description"] = "Avoid capping Fire Blast charges while channeling Shifting Power",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.time_to_combustion > 0 & buff.combustion.down",
["list_name"] = "standard_rotation",
},
{
["action"] = "scorch",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.gladiators_badge || equipped.irideus_fragment || equipped.erupting_spear_fragment || equipped.spoils_of_neltharus || equipped.timebreaching_talon || equipped.horn_of_valor || equipped.mirror_of_fractured_tomorrows || equipped.ashes_of_the_embersoul || equipped.balefire_branch || equipped.time_theifs_gambit || equipped.nymues_unraveling_spindle",
["var_name"] = "steroid_trinket_equipped",
["description"] = "defining a group of trinkets as Steroids",
},
{
["enabled"] = true,
["criteria"] = "! variable.combustion_on_use & ! equipped.dreadfire_vessel & ( ! talent.firestarter.enabled || variable.firestarter_combustion )",
["name"] = "soul_igniter",
["action"] = "soul_igniter",
},
{
["enabled"] = true,
["criteria"] = "! equipped.the_first_sigil",
["name"] = "shadowed_orb_of_torment",
["action"] = "shadowed_orb_of_torment",
},
{
["action"] = "mirror_image",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hot_streak_flamestrike",
["action"] = "flamestrike",
},
{
["action"] = "pyroblast",
["enabled"] = true,
},
},
["firestarter_fire_blasts"] = {
{
["enabled"] = true,
["use_while_casting"] = 1,
["action"] = "fire_blast",
["criteria"] = "! variable.fire_blast_pooling & ! buff.hot_streak.react & ( action.fireball.execute_remains > gcd.remains || action.pyroblast.executing ) & buff.heating_up.react + hot_streak_spells_in_flight = 1 & ( cooldown.shifting_power.ready || charges > 1 || buff.feel_the_burn.remains < 2 * gcd.max )",
["description"] = "While casting Fireball or Pyroblast, convert Heating Up to a Hot Streak!",
},
{
["enabled"] = true,
["criteria"] = "! variable.fire_blast_pooling & buff.heating_up.react + hot_streak_spells_in_flight = 1 & ( talent.feel_the_burn.enabled & buff.feel_the_burn.remains < gcd.remains || cooldown.shifting_power.ready & ( ! set_bonus.tier30_2pc || debuff.charring_embers.remains > 2 * gcd.max ) )",
["use_off_gcd"] = 1,
["description"] = "If not casting anything, use Fire Blast to trigger Hot Streak! only if Feel the Burn is talented and would expire before the GCD ends or if Shifting Power is available.",
["action"] = "fire_blast",
},
},
["active_talents"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.combustion.down & ( variable.time_to_combustion > cooldown.living_bomb.duration || variable.time_to_combustion <= 0 )",
["action"] = "living_bomb",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.remains > travel_time || ! talent.sun_kings_blessing.enabled & ( cooldown.meteor.duration < variable.time_to_combustion || fight_remains < variable.time_to_combustion )",
["action"] = "meteor",
},
{
["enabled"] = true,
["description"] = "With Alexstrasza's Fury when Combustion is not active, Dragon's Breath should be used to convert Heating Up to a Hot Streak.",
["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.react ) & ( buff.feel_the_burn.up || time > 15 ) & ( ! improved_scorch.active ) & ! firestarter.remains & ! talent.tempered_flames.enabled",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.react ) & ( buff.feel_the_burn.up || time > 15 ) & ( ! improved_scorch.active ) & talent.tempered_flames.enabled",
["action"] = "dragons_breath",
},
},
["standard_rotation"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.react || ( buff.firestorm.react || buff.hyperthermia.react ) )",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "buff.hyperthermia.react",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & ( buff.hot_streak.remains < action.fireball.execute_time )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & ( hot_streak_spells_in_flight || firestarter.active || talent.alexstraszas_fury.enabled & action.phoenix_flames.charges )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & searing_touch.active",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.skb_flamestrike & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.remains < action.pyroblast.cast_time + 5 * gcd.max & buff.fury_of_the_sun_king.up & ! action.scorch.in_flight",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & searing_touch.active",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! firestarter.active & ! variable.fire_blast_pooling & buff.fury_of_the_sun_king.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! talent.hyperthermia.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 || ! talent.hyperthermia.enabled ) ) & buff.heating_up.react ) || ( searing_touch.active & ( ! improved_scorch.active || debuff.improved_scorch.stack = debuff.improved_scorch.max_stack || full_recharge_time < 3 ) & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
["use_off_gcd"] = 1,
["description"] = "During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
["action"] = "fire_blast",
},
{
["enabled"] = true,
["description"] = "Modified, changed to Hot Streak to avoid hardcasted Pyroblasts.",
["criteria"] = "prev_gcd.1.scorch & buff.hot_streak.react & searing_touch.active & active_enemies < variable.hot_streak_flamestrike",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.remains < 4 * gcd.max",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ( ! talent.feel_the_burn.enabled || buff.feel_the_burn.remains < 2 * gcd.max )",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tier30_2pc & debuff.charring_embers.remains < 2 * gcd.max & ! buff.hot_streak.react",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "improved_scorch.active & debuff.improved_scorch.stack < debuff.improved_scorch.max_stack",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "! talent.alexstraszas_fury.enabled & ! buff.hot_streak.react & ! variable.phoenix_pooling & buff.flames_fury.up",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "talent.alexstraszas_fury.enabled & ! buff.hot_streak.react & hot_streak_spells_in_flight = 0 & ( ! variable.phoenix_pooling & buff.flames_fury.up || charges_fractional > 2.5 || charges_fractional > 1.5 & ( ! talent.feel_the_burn.enabled || buff.feel_the_burn.remains < 3 * gcd.max ) )",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "active_talents",
},
{
["enabled"] = true,
["description"] = "Dragon's Breath is no longer a gain to be cast unless Alexstrazas is talented (need to check cutoff, was true on 10t)",
["criteria"] = "active_enemies > 1 & talent.alexstraszas_fury.enabled",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "searing_touch.active",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana",
["action"] = "arcane_explosion",
},
{
["enabled"] = true,
["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.",
["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "talent.tempered_flames.enabled & ! buff.flame_accelerant.react",
["action"] = "pyroblast",
},
{
["action"] = "fireball",
["enabled"] = true,
},
},
["combustion_phase"] = {
{
["enabled"] = true,
["criteria"] = "buff.combustion.down",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & buff.combustion.down",
["action"] = "living_bomb",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.",
["criteria"] = "buff.combustion.remains > variable.skb_duration || fight_remains < 20",
["list_name"] = "combustion_cooldowns",
},
{
["enabled"] = true,
["criteria"] = "prev.1.fire_blast + prev.2.fire_blast + prev.3.fire_blast >= 2 & action.fire_blast.charges = 0",
["name"] = "hyperthread_wristwraps",
["action"] = "hyperthread_wristwraps",
},
{
["enabled"] = true,
["criteria"] = "variable.time_to_combustion > 60",
["name"] = "neural_synapse_enhancer",
["action"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["description"] = "In Charring embers is not up before Combustion, make sure to apply it.",
["criteria"] = "buff.combustion.down & set_bonus.tier30_2pc & ! action.phoenix_flames.in_flight & debuff.charring_embers.remains < 4 * gcd.max & ! buff.hot_streak.react",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "active_talents",
},
{
["enabled"] = true,
["description"] = "If Combustion is down, precast something before activating it.",
["criteria"] = "buff.combustion.down & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0 & cooldown.combustion.remains < cast_time & active_enemies >= variable.skb_flamestrike",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & active_enemies < 2 & ! improved_scorch.active",
["action"] = "fireball",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time",
["action"] = "scorch",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "hot_streak_spells_in_flight = 0 & buff.combustion.down & variable.time_to_combustion <= 0 & ( action.scorch.executing & action.scorch.execute_remains < variable.combustion_cast_remains || action.fireball.executing & action.fireball.execute_remains < variable.combustion_cast_remains || action.pyroblast.executing & action.pyroblast.execute_remains < variable.combustion_cast_remains || action.flamestrike.executing & action.flamestrike.execute_remains < variable.combustion_cast_remains || action.meteor.in_flight & action.meteor.in_flight_remains < variable.combustion_cast_remains )",
["use_off_gcd"] = 1,
["description"] = "Combustion should be used when the precast is almost finished or when Meteor is about to land.",
["action"] = "combustion",
},
{
["enabled"] = true,
["use_while_casting"] = 1,
["criteria"] = "! variable.fire_blast_pooling & ( ! improved_scorch.active || action.scorch.executing || debuff.improved_scorch.remains > 4 * gcd.max ) & ( buff.fury_of_the_sun_king.down || action.pyroblast.executing ) & buff.combustion.up & ! buff.hyperthermia.react & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
["use_off_gcd"] = 1,
["description"] = "Without Feel the Burn, just use Fire Blasts when they won't munch crits and when Firestorm is down.",
["action"] = "fire_blast",
},
{
["enabled"] = true,
["description"] = "Spend Hot Streaks during Combustion at high priority.",
["criteria"] = "( buff.hot_streak.react & active_enemies >= variable.combustion_flamestrike ) || ( ( buff.firestorm.react || buff.hyperthermia.react ) & active_enemies >= variable.combustion_flamestrike - ( runeforge.firestorm.enabled || talent.hyperthermia.enabled ) )",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["description"] = "Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.",
["criteria"] = "buff.combustion.up & 2 * buff.hot_streak.react + buff.heating_up.react + hot_streak_spells_in_flight = 2",
["action"] = "radiant_spark",
},
{
["enabled"] = true,
["criteria"] = "( buff.firestorm.react || buff.hyperthermia.react )",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_streak.react & buff.combustion.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.scorch & buff.heating_up.react & active_enemies < variable.combustion_flamestrike & buff.combustion.up",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["description"] = "Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.",
["criteria"] = "buff.combustion.up & ! action.fire_blast.charges & ( action.phoenix_flames.charges < action.phoenix_flames.max_charges || talent.alexstraszas_fury.enabled ) & variable.combustion_shifting_power <= active_enemies",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & active_enemies >= variable.skb_flamestrike & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "flamestrike",
},
{
["enabled"] = true,
["criteria"] = "buff.fury_of_the_sun_king.up & buff.fury_of_the_sun_king.remains > cast_time & buff.fury_of_the_sun_king.expiration_delay_remains = 0",
["action"] = "pyroblast",
},
{
["enabled"] = true,
["description"] = "Maintain Improved Scorch when not casting Flamestrikes in Combustion.",
["criteria"] = "improved_scorch.active & ( debuff.improved_scorch.remains < 4 * gcd.max ) & active_enemies < variable.combustion_flamestrike",
["action"] = "scorch",
},
{
["enabled"] = true,
["description"] = "With the T30 set, Phoenix Flames should be used to maintain Charring Embers during Combustion and Flame's Fury procs should be spent.",
["criteria"] = "set_bonus.tier30_2pc & travel_time < buff.combustion.remains & buff.heating_up.react + hot_streak_spells_in_flight < 2 & ( debuff.charring_embers.remains < 4 * gcd.max || buff.flames_fury.stack > 1 || buff.flames_fury.up )",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time & buff.flame_accelerant.react",
["action"] = "fireball",
},
{
["enabled"] = true,
["description"] = "Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.",
["criteria"] = "( ! talent.alexstraszas_fury.enabled & travel_time < buff.combustion.remains || talent.alexstraszas_fury.enabled ) & buff.heating_up.react + hot_streak_spells_in_flight < 2",
["action"] = "phoenix_flames",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time & cast_time >= gcd.max",
["action"] = "scorch",
},
{
["enabled"] = true,
["criteria"] = "buff.combustion.remains > cast_time",
["action"] = "fireball",
},
{
["enabled"] = true,
["description"] = "If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.",
["criteria"] = "buff.combustion.remains < gcd.max & active_enemies > 1",
["action"] = "living_bomb",
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'firestarter_fire_blasts' required some automated changes.\nLine 2: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 15: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 15: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 15: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 18: Converted 'conduit.infernal_cascade' to 'conduit.infernal_cascade.enabled' (1x).\nLine 18: Converted 'runeforge.sun_kings_blessing' to 'runeforge.sun_kings_blessing.enabled' (1x).\nLine 18: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 18: Converted operations in '!variable.item_cutoff_active&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade.enabled||variable.combustion_on_use&!(runeforge.sun_kings_blessing.enabled||talent.sun_kings_blessing.enabled)||variable.time_to_combustion>interpolated_fight_remains%%(action_cooldown+10))' to '!variable.item_cutoff_active&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade.enabled||variable.combustion_on_use&!(runeforge.sun_kings_blessing.enabled||talent.sun_kings_blessing.enabled)||variable.time_to_combustion>interpolated_fight_remains%(action_cooldown+10))'.\nLine 26: Converted 'runeforge.grisly_icicle' to 'runeforge.grisly_icicle.enabled' (1x).\nLine 27: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 28: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 28: Converted 'talent.rune_of_power' to 'talent.rune_of_power.enabled' (1x).\nLine 29: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 30: Converted 'runeforge.disciplinary_command' to 'runeforge.disciplinary_command.enabled' (1x).\nLine 31: Converted operations in 'buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains' to 'buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)/cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts/cooldown.fire_blast.duration-(buff.combustion.duration/cooldown.fire_blast.duration)%1&variable.time_to_combustion<fight_remains'.\nLine 33: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.firestarter' to 'talent.firestarter.enabled' (1x).\n\nThe import for 'combustion_cooldowns' required some automated changes.\nLine 6: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 6: Converted 'runeforge.temporal_warp' to 'runeforge.temporal_warp.enabled' (1x).\n\nThe import for 'active_talents' required some automated changes.\nLine 2: Converted 'talent.sun_kings_blessing' to 'talent.sun_kings_blessing.enabled' (1x).\nLine 3: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 3: Converted 'talent.tempered_flames' to 'talent.tempered_flames.enabled' (1x).\nLine 4: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 4: Converted 'talent.tempered_flames' to 'talent.tempered_flames.enabled' (1x).\n\nThe import for 'standard_rotation' required some automated changes.\nLine 4: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 10: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 10: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 13: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 13: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\nLine 16: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 17: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 17: Converted 'talent.feel_the_burn' to 'talent.feel_the_burn.enabled' (1x).\nLine 19: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 23: Converted 'talent.tempered_flames' to 'talent.tempered_flames.enabled' (1x).\n\nThe import for 'combustion_phase' required some automated changes.\nLine 15: Converted 'runeforge.firestorm' to 'runeforge.firestorm.enabled' (1x).\nLine 15: Converted 'talent.hyperthermia' to 'talent.hyperthermia.enabled' (1x).\nLine 20: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 26: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\nLine 26: Converted 'talent.alexstraszas_fury' to 'talent.alexstraszas_fury.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\n# defining a group of trinkets as Steroids\nactions.precombat+=/variable,name=steroid_trinket_equipped,op=set,value=equipped.gladiators_badge||equipped.irideus_fragment||equipped.erupting_spear_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.horn_of_valor||equipped.mirror_of_fractured_tomorrows||equipped.ashes_of_the_embersoul||equipped.balefire_branch||equipped.time_theifs_gambit||equipped.nymues_unraveling_spindle\n## # APL Variable Option: If set to a non-zero value, the Combustion action and cooldowns that are constrained to only be used when Combustion is up will not be used during the simulation.\n## actions.precombat+=/variable,name=disable_combustion,op=reset\n## # APL Variable Option: This variable specifies whether Combustion should be used during Firestarter.\n## actions.precombat+=/variable,name=firestarter_combustion,default=-1,value=talent.sun_kings_blessing,if=variable.firestarter_combustion<0\n## # APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes outside of Combustion should be used.\n## actions.precombat+=/variable,name=hot_streak_flamestrike,if=variable.hot_streak_flamestrike=0,value=4*talent.flame_patch+999*!talent.flame_patch\n## # APL Variable Option: This variable specifies the number of targets at which Hard Cast Flamestrikes outside of Combustion should be used as filler.\n## actions.precombat+=/variable,name=hard_cast_flamestrike,if=variable.hard_cast_flamestrike=0,value=999\n## # APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes are used during Combustion.\n## actions.precombat+=/variable,name=combustion_flamestrike,if=variable.combustion_flamestrike=0,value=4*talent.flame_patch+999*!talent.flame_patch\n## # APL Variable Option: This variable specifies the number of targets at which Flamestrikes should be used to consume Fury of the Sun King.  Restricting this variable to be true only if Fuel the Fire is talented.\n## actions.precombat+=/variable,name=skb_flamestrike,if=variable.skb_flamestrike=0,value=3*talent.fuel_the_fire+999*!talent.fuel_the_fire\n## # APL Variable Option: This variable specifies the number of targets at which Arcane Explosion outside of Combustion should be used.\n## actions.precombat+=/variable,name=arcane_explosion,if=variable.arcane_explosion=0,value=999\n## # APL Variable Option: This variable specifies the percentage of mana below which Arcane Explosion will not be used.\n## actions.precombat+=/variable,name=arcane_explosion_mana,default=40,op=reset\n## # APL Variable Option: The number of targets at which Shifting Power can used during Combustion.\n## actions.precombat+=/variable,name=combustion_shifting_power,if=variable.combustion_shifting_power=0,value=999\n## # APL Variable Option: The time remaining on a cast when Combustion can be used in seconds.\n## actions.precombat+=/variable,name=combustion_cast_remains,default=0.3,op=reset\n## # APL Variable Option: This variable specifies the number of seconds of Fire Blast that should be pooled past the default amount.\n## actions.precombat+=/variable,name=overpool_fire_blasts,default=0,op=reset\n## # If Combustion is disabled, schedule the first Combustion far after the fight ends.\n## actions.precombat+=/variable,name=time_to_combustion,value=fight_remains+100,if=variable.disable_combustion\n## # The duration of a Sun King's Blessing Combustion.\n## actions.precombat+=/variable,name=skb_duration,value=dbc.effect.1016075.base_value\n## # Whether a usable item used to buff Combustion is equipped.\n## actions.precombat+=/variable,name=combustion_on_use,value=equipped.gladiators_badge||equipped.moonlit_prism||equipped.irideus_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.horn_of_valor\n## # How long before Combustion should trinkets that trigger a shared category cooldown on other trinkets not be used?\n## actions.precombat+=/variable,name=on_use_cutoff,value=20,if=variable.combustion_on_use\nactions.precombat+=/use_item,name=soul_igniter,if=!variable.combustion_on_use&!equipped.dreadfire_vessel&(!talent.firestarter||variable.firestarter_combustion)\nactions.precombat+=/use_item,name=shadowed_orb_of_torment,if=!equipped.the_first_sigil\nactions.precombat+=/mirror_image\nactions.precombat+=/flamestrike,if=active_enemies>=variable.hot_streak_flamestrike\nactions.precombat+=/pyroblast\n\n# Executed every time the actor is available.\nactions=counterspell\n# The second Time Warp is usually best used immediately on pull with Temporal Warp so that it comes off cooldown earlier; this can sometimes be slightly worse if doing so will not result in additional Time Warp(s) throughout the encounter. Additionally, it should always be used at the end of the fight regardless of Combustion being ready if it is available.\nactions+=/time_warp,if=debuff.sated.up&talent.temporal_warp&(firestarter.active||interpolated_fight_remains<buff.bloodlust.duration)\nactions+=/potion,if=buff.potion.duration>variable.time_to_combustion+buff.combustion.duration\nactions+=/use_item,effect_name=gladiators_badge,if=variable.time_to_combustion>cooldown-5\nactions+=/use_item,name=empyreal_ordnance,if=variable.time_to_combustion<=variable.empyreal_ordnance_delay&variable.time_to_combustion>variable.empyreal_ordnance_delay-5\nactions+=/use_item,name=shadowed_orb_of_torment,if=(variable.time_to_combustion<=variable.combustion_precast_time+2||fight_remains<variable.time_to_combustion)&buff.combustion.down&(!equipped.the_first_sigil||cooldown.the_first_sigil_367241.remains>40)\nactions+=/use_item,name=grim_eclipse,if=variable.time_to_combustion<=8||fight_remains<variable.time_to_combustion\n# New trinket and weapon lines  need special line for Nymue trinket which would delay combustion under certain conditions?\nactions+=/use_item,name=mirror_of_fractured_tomorrows,if=buff.combustion.up&buff.combustion.remains>11\nactions+=/use_item,name=timethiefs_gambit,if=buff.combustion.up\nactions+=/use_item,name=balefire_branch,if=(variable.time_to_combustion<=3&buff.fury_of_the_sun_king.up)||(buff.combustion.up&buff.combustion.remains>11)\nactions+=/use_item,name=ashes_of_the_embersoul,if=(variable.time_to_combustion<=3&buff.fury_of_the_sun_king.up)||(buff.combustion.up&buff.combustion.remains>11)\nactions+=/use_item,name=nymues_unraveling_spindle,if=variable.time_to_combustion<=9\nactions+=/use_item,name=dreambinder_loom_of_the_great_cycle\n# Iridal can and should be used while on the GCD\nactions+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,slot=main_hand,if=gcd.remains>=0.6*gcd.max\nactions+=/use_item,name=belorrelos_the_suncaller,if=(!variable.steroid_trinket_equipped&buff.combustion.down)||(variable.steroid_trinket_equipped&trinket.1.has_cooldown&trinket.1.cooldown.remains>20&buff.combustion.down)||(variable.steroid_trinket_equipped&trinket.2.has_cooldown&trinket.2.cooldown.remains>20&buff.combustion.down)\nactions+=/use_item,name=glyph_of_assimilation,if=!variable.item_cutoff_active\nactions+=/use_item,name=macabre_sheet_music,if=variable.time_to_combustion<=5\n# If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Feel the Burn is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown. Note that with Sun King's Blessing, it is possible to sync this with SKB Combustions regardless of on-use trinkets.\nactions+=/use_item,name=dreadfire_vessel,if=!variable.item_cutoff_active&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade||variable.combustion_on_use&!(runeforge.sun_kings_blessing||talent.sun_kings_blessing)||variable.time_to_combustion>interpolated_fight_remains%%(cooldown+10))\n# Items that do not benefit Combustion should just be used outside of Combustion at some point.\nactions+=/use_item,name=inscrutable_quantum_device,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=flame_of_battle,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=wakeners_frond,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=instructors_divine_bell,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=sunblood_amethyst,if=equipped.gladiators_badge&!variable.item_cutoff_active\nactions+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.down\nactions+=/use_items,if=!variable.item_cutoff_active\n# Use Frost Nova to trigger Grisly Icicle.\nactions+=/frost_nova,if=runeforge.grisly_icicle&buff.combustion.down&(variable.time_to_combustion>cooldown||variable.time_to_combustion<variable.combustion_precast_time+execute_time)\n# Get the Disciplinary Command buff up, unless combustion is soon.\nactions+=/counterspell,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/arcane_explosion,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+execute_time+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5&!talent.rune_of_power)\nactions+=/frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.remains<cast_time&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion+cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/frost_nova,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\n# Pool as many Fire Blasts as possible for Combustion.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=buff.combustion.down&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion)%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains\nactions+=/call_action_list,name=combustion_phase,if=variable.time_to_combustion<=0||buff.combustion.up||variable.time_to_combustion<variable.combustion_precast_time&cooldown.combustion.remains<variable.combustion_precast_time\n# Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=searing_touch.active&action.fire_blast.full_recharge_time>3*gcd.max,if=!variable.fire_blast_pooling&talent.sun_kings_blessing\nactions+=/shifting_power,if=buff.combustion.down&(action.fire_blast.charges=0||variable.fire_blast_pooling)&(!improved_scorch.active||debuff.improved_scorch.remains>cast_time+action.scorch.cast_time&!buff.fury_of_the_sun_king.up)&!buff.hot_streak.react&variable.shifting_power_before_combustion\n# When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Feel the Burn.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&variable.time_to_combustion>0&active_enemies>=variable.hard_cast_flamestrike&!firestarter.active&!buff.hot_streak.react&(buff.heating_up.react&action.flamestrike.execute_remains<0.5||charges_fractional>=2)\n# During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Feel the Burn, they should be spread out to maintain the Feel the Burn buff.\nactions+=/call_action_list,name=firestarter_fire_blasts,if=buff.combustion.down&firestarter.active&variable.time_to_combustion>0\n# Avoid capping Fire Blast charges while channeling Shifting Power\nactions+=/fire_blast,use_while_casting=1,if=action.shifting_power.executing&full_recharge_time<action.shifting_power.tick_reduction\nactions+=/call_action_list,name=standard_rotation,if=variable.time_to_combustion>0&buff.combustion.down\nactions+=/scorch\n\nactions.active_talents=living_bomb,if=active_enemies>1&buff.combustion.down&(variable.time_to_combustion>cooldown.living_bomb.duration||variable.time_to_combustion<=0)\nactions.active_talents+=/meteor,if=variable.time_to_combustion<=0||buff.combustion.remains>travel_time||!talent.sun_kings_blessing&(cooldown.meteor.duration<variable.time_to_combustion||fight_remains<variable.time_to_combustion)\n# With Alexstrasza's Fury when Combustion is not active, Dragon's Breath should be used to convert Heating Up to a Hot Streak.\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.react)&(buff.feel_the_burn.up||time>15)&(!improved_scorch.active)&!firestarter.remains&!talent.tempered_flames\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.react)&(buff.feel_the_burn.up||time>15)&(!improved_scorch.active)&talent.tempered_flames\n\nactions.combustion_cooldowns=potion\nactions.combustion_cooldowns+=/blood_fury\nactions.combustion_cooldowns+=/berserking,if=buff.combustion.up\nactions.combustion_cooldowns+=/fireblood\nactions.combustion_cooldowns+=/ancestral_call\n## The addon does not invoke external buffs, because they player cannot actually choose to trigger them personally.\n## actions.combustion_cooldowns+=/invoke_external_buff,name=power_infusion,if=buff.power_infusion.down\n## actions.combustion_cooldowns+=/invoke_external_buff,name=blessing_of_summer,if=buff.blessing_of_summer.down\nactions.combustion_cooldowns+=/time_warp,if=(talent.temporal_warp||runeforge.temporal_warp)&debuff.sated.up\nactions.combustion_cooldowns+=/use_item,effect_name=gladiators_badge\nactions.combustion_cooldowns+=/use_item,name=irideus_fragment\nactions.combustion_cooldowns+=/use_item,name=spoils_of_neltharus\nactions.combustion_cooldowns+=/use_item,name=tome_of_unstable_power\nactions.combustion_cooldowns+=/use_item,name=timebreaching_talon\nactions.combustion_cooldowns+=/use_item,name=voidmenders_shadowgem\nactions.combustion_cooldowns+=/use_item,name=horn_of_valor\nactions.combustion_cooldowns+=/use_item,name=timethiefs_gambit\nactions.combustion_cooldowns+=/use_item,name=balefire_branch\nactions.combustion_cooldowns+=/use_item,name=ashes_of_the_embersoul\nactions.combustion_cooldowns+=/use_item,name=mirror_of_fractured_tomorrows\n\nactions.combustion_phase=lights_judgment,if=buff.combustion.down\nactions.combustion_phase+=/bag_of_tricks,if=buff.combustion.down\nactions.combustion_phase+=/living_bomb,if=active_enemies>1&buff.combustion.down\n# Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.\nactions.combustion_phase+=/call_action_list,name=combustion_cooldowns,if=buff.combustion.remains>variable.skb_duration||fight_remains<20\nactions.combustion_phase+=/use_item,name=hyperthread_wristwraps,if=prev.1.fire_blast+prev.2.fire_blast+prev.3.fire_blast>=2&action.fire_blast.charges=0\nactions.combustion_phase+=/use_item,name=neural_synapse_enhancer,if=variable.time_to_combustion>60\n# In Charring embers is not up before Combustion, make sure to apply it.\nactions.combustion_phase+=/phoenix_flames,if=buff.combustion.down&set_bonus.tier30_2pc&!action.phoenix_flames.in_flight&debuff.charring_embers.remains<4*gcd.max&!buff.hot_streak.react\nactions.combustion_phase+=/call_action_list,name=active_talents\n# If Combustion is down, precast something before activating it.\nactions.combustion_phase+=/flamestrike,if=buff.combustion.down&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0&cooldown.combustion.remains<cast_time&active_enemies>=variable.skb_flamestrike\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.combustion_phase+=/fireball,if=buff.combustion.down&cooldown.combustion.remains<cast_time&active_enemies<2&!improved_scorch.active\nactions.combustion_phase+=/scorch,if=buff.combustion.down&cooldown.combustion.remains<cast_time\n# Combustion should be used when the precast is almost finished or when Meteor is about to land.\nactions.combustion_phase+=/combustion,use_off_gcd=1,use_while_casting=1,if=hot_streak_spells_in_flight=0&buff.combustion.down&variable.time_to_combustion<=0&(action.scorch.executing&action.scorch.execute_remains<variable.combustion_cast_remains||action.fireball.executing&action.fireball.execute_remains<variable.combustion_cast_remains||action.pyroblast.executing&action.pyroblast.execute_remains<variable.combustion_cast_remains||action.flamestrike.executing&action.flamestrike.execute_remains<variable.combustion_cast_remains||action.meteor.in_flight&action.meteor.in_flight_remains<variable.combustion_cast_remains)\n# Without Feel the Burn, just use Fire Blasts when they won't munch crits and when Firestorm is down.\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&(!improved_scorch.active||action.scorch.executing||debuff.improved_scorch.remains>4*gcd.max)&(buff.fury_of_the_sun_king.down||action.pyroblast.executing)&buff.combustion.up&!buff.hyperthermia.react&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# Spend Hot Streaks during Combustion at high priority.\nactions.combustion_phase+=/flamestrike,if=(buff.hot_streak.react&active_enemies>=variable.combustion_flamestrike)||((buff.firestorm.react||buff.hyperthermia.react)&active_enemies>=variable.combustion_flamestrike-(runeforge.firestorm||talent.hyperthermia))\n# Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.\nactions.combustion_phase+=/radiant_spark,if=buff.combustion.up&2*buff.hot_streak.react+buff.heating_up.react+hot_streak_spells_in_flight=2\nactions.combustion_phase+=/pyroblast,if=(buff.firestorm.react||buff.hyperthermia.react)\n## With Sun King's Blessing, there is a brief delay before the Sun King's Blessing ready buff is removed after consuming it. It is beneficial to wait for this delay before spending Hot Streaks to not waste a stack.\n## actions.combustion_phase+=/wait,sec=0.01,if=buff.hot_streak.react&active_enemies<variable.combustion_flamestrike&(buff.sun_kings_blessing_ready.expiration_delay_remains||time-buff.sun_kings_blessing_ready.last_expire<variable.skb_delay-0.03)\nactions.combustion_phase+=/pyroblast,if=buff.hot_streak.react&buff.combustion.up\nactions.combustion_phase+=/pyroblast,if=prev_gcd.1.scorch&buff.heating_up.react&active_enemies<variable.combustion_flamestrike&buff.combustion.up\n# Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.\nactions.combustion_phase+=/shifting_power,if=buff.combustion.up&!action.fire_blast.charges&(action.phoenix_flames.charges<action.phoenix_flames.max_charges||talent.alexstraszas_fury)&variable.combustion_shifting_power<=active_enemies\n+# Spend Fury of the Sun King procs.\nactions.combustion_phase+=/flamestrike,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&active_enemies>=variable.skb_flamestrike&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.combustion_phase+=/pyroblast,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.remains>cast_time&buff.fury_of_the_sun_king.expiration_delay_remains=0\n# Maintain Improved Scorch when not casting Flamestrikes in Combustion.\nactions.combustion_phase+=/scorch,if=improved_scorch.active&(debuff.improved_scorch.remains<4*gcd.max)&active_enemies<variable.combustion_flamestrike\n# With the T30 set, Phoenix Flames should be used to maintain Charring Embers during Combustion and Flame's Fury procs should be spent.\nactions.combustion_phase+=/phoenix_flames,if=set_bonus.tier30_2pc&travel_time<buff.combustion.remains&buff.heating_up.react+hot_streak_spells_in_flight<2&(debuff.charring_embers.remains<4*gcd.max||buff.flames_fury.stack>1||buff.flames_fury.up)\nactions.combustion_phase+=/fireball,if=buff.combustion.remains>cast_time&buff.flame_accelerant.react\n# Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.\nactions.combustion_phase+=/phoenix_flames,if=(!talent.alexstraszas_fury&travel_time<buff.combustion.remains||talent.alexstraszas_fury)&buff.heating_up.react+hot_streak_spells_in_flight<2\nactions.combustion_phase+=/scorch,if=buff.combustion.remains>cast_time&cast_time>=gcd.max\nactions.combustion_phase+=/fireball,if=buff.combustion.remains>cast_time\n# If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.\nactions.combustion_phase+=/living_bomb,if=buff.combustion.remains<gcd.max&active_enemies>1\n\n# While casting Fireball or Pyroblast, convert Heating Up to a Hot Streak!\nactions.firestarter_fire_blasts+=/fire_blast,use_while_casting=1,if=!variable.fire_blast_pooling&!buff.hot_streak.react&(action.fireball.execute_remains>gcd.remains||action.pyroblast.executing)&buff.heating_up.react+hot_streak_spells_in_flight=1&(cooldown.shifting_power.ready||charges>1||buff.feel_the_burn.remains<2*gcd.max)\n# If not casting anything, use Fire Blast to trigger Hot Streak! only if Feel the Burn is talented and would expire before the GCD ends or if Shifting Power is available.\nactions.firestarter_fire_blasts+=/fire_blast,use_off_gcd=1,if=!variable.fire_blast_pooling&buff.heating_up.react+hot_streak_spells_in_flight=1&(talent.feel_the_burn&buff.feel_the_burn.remains<gcd.remains||cooldown.shifting_power.ready&(!set_bonus.tier30_2pc||debuff.charring_embers.remains>2*gcd.max))\n\nactions.standard_rotation=flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.react||(buff.firestorm.react||buff.hyperthermia.react))\nactions.standard_rotation+=/pyroblast,if=buff.hyperthermia.react\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&(buff.hot_streak.remains<action.fireball.execute_time)\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&(hot_streak_spells_in_flight||firestarter.active||talent.alexstraszas_fury&action.phoenix_flames.charges)\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&searing_touch.active\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.skb_flamestrike&buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.remains<action.pyroblast.cast_time+5*gcd.max&buff.fury_of_the_sun_king.up&!action.scorch.in_flight\nactions.standard_rotation+=/pyroblast,if=buff.fury_of_the_sun_king.up&buff.fury_of_the_sun_king.expiration_delay_remains=0\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.react&searing_touch.active\n# During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.standard_rotation+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!firestarter.active&!variable.fire_blast_pooling&buff.fury_of_the_sun_king.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!talent.hyperthermia)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5||!talent.hyperthermia))&buff.heating_up.react)||(searing_touch.active&(!improved_scorch.active||debuff.improved_scorch.stack=debuff.improved_scorch.max_stack||full_recharge_time<3)&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\n# Modified; changed to Hot Streak to avoid hardcasted Pyroblasts.\nactions.standard_rotation+=/pyroblast,if=prev_gcd.1.scorch&buff.hot_streak.react&searing_touch.active&active_enemies<variable.hot_streak_flamestrike\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.remains<4*gcd.max\nactions.standard_rotation+=/phoenix_flames,if=talent.alexstraszas_fury&(!talent.feel_the_burn||buff.feel_the_burn.remains<2*gcd.max)\nactions.standard_rotation+=/phoenix_flames,if=set_bonus.tier30_2pc&debuff.charring_embers.remains<2*gcd.max&!buff.hot_streak.react\nactions.standard_rotation+=/scorch,if=improved_scorch.active&debuff.improved_scorch.stack<debuff.improved_scorch.max_stack\nactions.standard_rotation+=/phoenix_flames,if=!talent.alexstraszas_fury&!buff.hot_streak.react&!variable.phoenix_pooling&buff.flames_fury.up\nactions.standard_rotation+=/phoenix_flames,if=talent.alexstraszas_fury&!buff.hot_streak.react&hot_streak_spells_in_flight=0&(!variable.phoenix_pooling&buff.flames_fury.up||charges_fractional>2.5||charges_fractional>1.5&(!talent.feel_the_burn||buff.feel_the_burn.remains<3*gcd.max))\nactions.standard_rotation+=/call_action_list,name=active_talents\n# Dragon's Breath is no longer a gain to be cast unless Alexstrazas is talented (need to check cutoff, was true on 10t)\nactions.standard_rotation+=/dragons_breath,if=active_enemies>1&talent.alexstraszas_fury\nactions.standard_rotation+=/scorch,if=searing_touch.active\nactions.standard_rotation+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.standard_rotation+=/pyroblast,if=talent.tempered_flames&!buff.flame_accelerant.react\nactions.standard_rotation+=/fireball",
["spec"] = 63,
},
["Assassination"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20241027.1,
["author"] = "SimC",
["desc"] = "2024-10-27: Master Assassin correction\n\n2024-10-21, 10-25: SimC update\n\n2024-09-28: Force pooling for Envenom without Darkest Night if Envenom is down\n\n2024-09-24: Tweak pooling for Enveom\n\n2024-09-15: SimC update\n\n2024-09-11: Revise filler Envenom\n\n2024-09-05, 09-08, 09-09: SimC update\n\n2024-08-29: Allow filler Envenom\n\n2024-08-24: SimC update; relax energy regen requirements\n\n2024-08-22: Enable more AOE\n\n2024-08-14: Fix scent_saturation variable\n\n2024-08-09, 10: Updates from SimC\n\n2024-07-27: The War Within",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Stealthed Actions",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "Apply Deathstalkers Mark if it has fallen off",
["criteria"] = "! debuff.deathstalkers_mark.up & talent.deathstalkers_mark.enabled & ( active_dot.deathstalkers_mark = 0 || buff.darkest_night.down )",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Make sure to have Shiv up during Kingsbane as a final check",
["criteria"] = "talent.kingsbane.enabled & dot.kingsbane.ticking & debuff.shiv.remains < 1 & buff.envenom.up",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Envenom to maintain the buff during Subterfuge",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & dot.kingsbane.ticking & buff.envenom.remains <= 3 & ( debuff.deathstalkers_mark.up || buff.cold_blood.up )",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Envenom during Master Assassin in single target",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.master_assassin_aura.up & active_enemies = 1 & ( debuff.deathstalkers_mark.up || buff.cold_blood.up )",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["description"] = "Rupture during Indiscriminate Carnage",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.indiscriminate_carnage.up & ( refreshable || ! settings.cycle ) & ( ! variable.regen_saturated || ! variable.scent_saturation || ! dot.rupture.ticking ) & target.time_to_die > 15",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["description"] = "Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage",
["criteria"] = "stealthed.improved_garrote & ( remains < 12 || pmultiplier <= 1 || ( buff.indiscriminate_carnage.up & active_dot.garrote < cycle_enemies ) ) & active_enemies > 1 & target.time_to_die - remains > 2",
},
{
["enabled"] = true,
["criteria"] = "stealthed.improved_garrote & ( pmultiplier <= 1 || remains < 12 || active_enemies > 1 & buff.master_assassin_aura.up & buff.master_assassin_aura.remains < 3 ) & combo_points.deficit >= 1 + 2 * talent.shrouded_suffocation.enabled",
["action"] = "garrote",
},
},
["vanish"] = {
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["extra_amount"] = "45",
["description"] = "Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish to fish for Fateful Ending",
["criteria"] = "! buff.fatebound_lucky_coin.up & effective_combo_points >= variable.effective_spend_cp & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish to spread Garrote during Deathmark without Indiscriminate Carnage",
["criteria"] = "! talent.master_assassin.enabled & ! talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["extra_amount"] = "45",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish for cleaving Garrotes with Indiscriminate Carnage",
["criteria"] = "! talent.master_assassin.enabled & talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & spell_targets.fan_of_knives > 2 & ( target.time_to_die - remains > 15 || raid_event.adds.in > 20 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish fallback for Master Assassin",
["criteria"] = "! talent.improved_garrote.enabled & talent.master_assassin.enabled & ! dot.rupture.refreshable & dot.garrote.remains > 3 & debuff.deathmark.up & ( debuff.shiv.up || debuff.deathmark.remains < 4 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish fallback for Improved Garrote during Deathmark if no add waves are expected",
["criteria"] = "talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & raid_event.adds.in > 30",
},
},
["core_dot"] = {
{
["enabled"] = true,
["action"] = "garrote",
["description"] = "Core damage over time abilities used everywhere Maintain Garrote",
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > 12",
},
{
["enabled"] = true,
["action"] = "rupture",
["description"] = "Maintain Rupture unless darkest night is up",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ( ! buff.darkest_night.up || talent.caustic_spatter.enabled & ! debuff.caustic_spatter.up )",
},
},
["shiv"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking",
["var_name"] = "shiv_condition",
["description"] = "Shiv conditions",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.kingsbane.enabled & buff.envenom.up & variable.shiv_condition",
["var_name"] = "shiv_kingsbane_condition",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv for aoe with Arterial Precision",
["criteria"] = "talent.arterial_precision.enabled & variable.shiv_condition & spell_targets.fan_of_knives >= 4 & dot.crimson_tempest.ticking",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv cases for Kingsbane",
["criteria"] = "! talent.lightweight_shiv.enabled & variable.shiv_kingsbane_condition & ( dot.kingsbane.ticking & dot.kingsbane.remains < 8 || ! dot.kingsbane.ticking & cooldown.kingsbane.remains >= 20 ) & ( ! talent.crimson_tempest.enabled || active_enemies = 1 || dot.crimson_tempest.ticking )",
},
{
["enabled"] = true,
["criteria"] = "talent.lightweight_shiv.enabled & variable.shiv_kingsbane_condition & ( dot.kingsbane.ticking || cooldown.kingsbane.remains <= 1 )",
["action"] = "shiv",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Fallback shiv for arterial during deathmark",
["criteria"] = "talent.arterial_precision.enabled & variable.shiv_condition & debuff.deathmark.up",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Fallback if no special cases apply",
["criteria"] = "! talent.kingsbane.enabled & ! talent.arterial_precision.enabled & variable.shiv_condition & ( ! talent.crimson_tempest.enabled || active_enemies = 1 || dot.crimson_tempest.ticking )",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Dump Shiv on fight end",
["criteria"] = "boss & fight_remains <= charges * 8",
},
},
["misc_cds"] = {
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Miscellaneous Cooldowns Potion",
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || debuff.deathmark.up",
},
{
["enabled"] = true,
["action"] = "blood_fury",
["description"] = "Various special racials to be synced with cooldowns",
["criteria"] = "debuff.deathmark.up",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.kingsbane.enabled & debuff.deathmark.up & debuff.shiv.up ) || ( talent.kingsbane.enabled & debuff.deathmark.up & dot.kingsbane.ticking & dot.kingsbane.remains < 8 )",
["action"] = "ancestral_call",
},
},
["aoe_dot"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "effective_combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 )",
["var_name"] = "dot_finisher_condition",
["description"] = "Helper Variable to check basic finisher conditions",
},
{
["enabled"] = true,
["action"] = "crimson_tempest",
["description"] = "Crimson Tempest on 2+ Targets if we have enough energy regen",
["criteria"] = "spell_targets >= 2 & variable.dot_finisher_condition & refreshable & target.time_to_die - remains > 6",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["description"] = "Garrote upkeep, also uses it in AoE to reach energy saturation",
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & ! variable.regen_saturated & target.time_to_die - remains > 12",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["description"] = "Rupture upkeep, also uses it in AoE to reach energy or scent of blood saturation",
["criteria"] = "variable.dot_finisher_condition & refreshable & ( ! dot.kingsbane.ticking || buff.cold_blood.up ) & ( ! variable.regen_saturated & ( talent.scent_of_blood.rank = 2 || talent.scent_of_blood.rank <= 1 & ( buff.indiscriminate_carnage.up || target.time_to_die - remains > 15 ) ) ) & target.time_to_die - remains > ( 7 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
},
{
["enabled"] = true,
["criteria"] = "variable.dot_finisher_condition & refreshable & ( ! dot.kingsbane.ticking || buff.cold_blood.up ) & variable.regen_saturated & ! variable.scent_saturation & target.time_to_die - remains > 19 & ! buff.darkest_night.up",
["action"] = "rupture",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "garrote",
["description"] = "Garrote as a special generator for the last CP before a finisher for edge case handling",
["criteria"] = "refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 4 & master_assassin_remains = 0",
},
},
["items"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || dot.deathmark.ticking || boss & fight_remains <= 22",
["var_name"] = "base_trinket_condition",
["description"] = "Special Case Trinkets",
},
{
["enabled"] = true,
["action"] = "ashes_of_the_embersoul",
["use_off_gcd"] = 1,
["criteria"] = "( dot.kingsbane.ticking & dot.kingsbane.remains <= 11 ) || boss & fight_remains <= 22",
["name"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "variable.base_trinket_condition",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["action"] = "treacherous_transmitter",
["use_off_gcd"] = 1,
["criteria"] = "variable.base_trinket_condition",
["name"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "mad_queens_mandate",
["criteria"] = "cooldown.deathmark.remains >= 30 & ! dot.deathmark.ticking || boss & fight_remains <= 3",
["name"] = "mad_queens_mandate",
},
{
["enabled"] = true,
["action"] = "imperfect_ascendancy_serum",
["use_off_gcd"] = 1,
["criteria"] = "variable.base_trinket_condition",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["criteria"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || boss & fight_remains <= 22",
["name"] = "algethar_puzzle_box",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 1 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready & dot.kingsbane.ticking || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 & dot.kingsbane.ticking ) ) || ! variable.trinket_sync_slot )",
["action"] = "trinket1",
["slots"] = "trinket1",
["description"] = "Fallback case for using stat trinkets",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( debuff.deathmark.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready & dot.kingsbane.ticking || ! debuff.deathmark.up & cooldown.deathmark.remains > 20 & dot.kingsbane.ticking ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.regen_combined > 15",
["var_name"] = "regen_saturated",
["description"] = "Combined Energy Regen needed to saturate (TODO: estimate poisoned_bleeds better)",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( spell_targets.fan_of_knives * talent.scent_of_blood.rank * 2 ) >? 20",
["var_name"] = "scent_effective_max_stacks",
["description"] = "AoE Damage over time abilities Check what the maximum Scent of Blood stacks is currently",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.scent_of_blood.stack >= variable.scent_effective_max_stacks",
["var_name"] = "scent_saturation",
["description"] = "We are Scent Saturated when our stack count is hitting the maximum",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( dot.deathmark.ticking || dot.kingsbane.ticking || debuff.shiv.up ) || ( buff.envenom.up & buff.envenom.remains <= 1 ) || energy.pct >= ( 40 + 30 * talent.hand_of_fate.enabled - 15 * talent.vicious_venoms.enabled ) || boss & fight_remains <= 20",
["var_name"] = "not_pooling",
["description"] = "Check if we should be using our energy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.deathmark.ticking || dot.kingsbane.ticking || debuff.shiv.up",
["var_name"] = "in_cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.envenom.up & buff.envenom.remains <= 1",
["var_name"] = "clip_envenom",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "70 - 30 * talent.sanguine_blades.enabled - 10 * talent.vicious_venoms.rank",
["var_name"] = "upper_limit_energy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy > 40 + 50 + 5 * talent.vicious_venoms.rank",
["var_name"] = "avoid_tea",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.kingsbane.remains < 6 & ! cooldown.kingsbane.ready",
["var_name"] = "cd_soon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.in_cooldowns || ! variable.cd_soon & variable.avoid_tea & buff.darkest_night.up || ! variable.cd_soon & variable.avoid_tea & variable.clip_envenom || energy.percent >= variable.upper_limit_energy || fight_remains <= 20",
["var_name"] = "not_pooling",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "stealthed.rogue || stealthed.improved_garrote || master_assassin_remains > 0",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "core_dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1",
["list_name"] = "aoe_dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "direct",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen_combined",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "toggle.funnel",
["var_name"] = "priority_rotation",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "trinket_sync_slot",
["value"] = "1",
["description"] = "Check which trinket slots have Stat Values",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) & ! trinket.t2.is.witherbarks_branch || trinket.t1.is.witherbarks_branch",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) & ! trinket.t1.is.witherbarks_branch || trinket.t2.is.witherbarks_branch",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cp_max_spend - 2 <? 5 * talent.hand_of_fate.enabled",
["var_name"] = "effective_spend_cp",
["description"] = "Determine combo point finish condition",
},
{
["enabled"] = true,
["description"] = "Pre-cast Slice and Dice if possible",
["action"] = "stealth",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! buff.indiscriminate_carnage.up",
["action"] = "slice_and_dice",
["precombat_seconds"] = "1",
},
},
["direct"] = {
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
["extra_amount"] = "energy.max*(0.4+0.3*talent.hand_of_fate.rank-0.15*talent.vicious_venoms.rank)-action.envenom.cost",
["criteria"] = "active_dot.envenom = 0",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.",
["criteria"] = "! buff.darkest_night.up & combo_points >= variable.effective_spend_cp & ( variable.not_pooling || debuff.amplifying_poison.stack >= 20 || active_enemies > 1 ) & ! buff.vanish.up",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Special Envenom handling for Darkest Night",
["criteria"] = "buff.darkest_night.up & effective_combo_points >= cp_max_spend",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points.deficit > 1 - buff.darkest_night.up || variable.not_pooling || active_enemies > 1",
["var_name"] = "use_filler",
["description"] = "Check if we should be using a filler",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & combo_points.deficit > 1 & active_enemies > 1",
["var_name"] = "use_caustic_filler",
["description"] = "Maintain Caustic Spatter",
},
{
["enabled"] = true,
["criteria"] = "variable.use_caustic_filler",
["action"] = "mutilate",
},
{
["enabled"] = true,
["criteria"] = "variable.use_caustic_filler",
["action"] = "ambush",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 3+ targets, accounting for various edge cases",
["criteria"] = "variable.use_filler & ! priority_rotation & ( spell_targets.fan_of_knives >= 3 - ( talent.momentum_of_despair.enabled & talent.thrown_precision.enabled ) || buff.clear_the_witnesses.up & ! talent.vicious_venoms.enabled )",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T",
["criteria"] = "active_dot.deadly_poison_dot < spell_targets.fan_of_knives & ( ! priority_rotation || dot.garrote.ticking || dot.rupture.ticking ) & variable.use_filler & spell_targets.fan_of_knives >= 3 - ( talent.momentum_of_despair.enabled & talent.thrown_precision.enabled )",
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.",
["criteria"] = "variable.use_filler & ( buff.blindside.up || stealthed.rogue ) & ( ! dot.kingsbane.ticking || debuff.deathmark.down || buff.blindside.up )",
},
{
["enabled"] = true,
["action"] = "mutilate",
["cycle_targets"] = 1,
["description"] = "Tab-Mutilate to apply Deadly Poison at 2 targets",
["criteria"] = "variable.use_filler & spell_targets.fan_of_knives = 2",
},
{
["enabled"] = true,
["action"] = "mutilate",
["description"] = "Fallback Mutilate (without breaking Envenom pooling)",
["criteria"] = "variable.use_filler",
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.master_assassin.enabled || dot.garrote.ticking",
["var_name"] = "deathmark_ma_condition",
["description"] = "Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.kingsbane.enabled || cooldown.kingsbane.remains <= 2",
["var_name"] = "deathmark_kingsbane_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! stealthed.rogue & buff.slice_and_dice.remains > 5 & dot.rupture.ticking & buff.envenom.up & ! debuff.deathmark.up & variable.deathmark_ma_condition & variable.deathmark_kingsbane_condition",
["var_name"] = "deathmark_condition",
["description"] = "Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Usages for various special-case Trinkets and other Cantrips if applicable",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "deathmark",
["description"] = "Cast Deathmark if the target will survive long enough",
["criteria"] = "( variable.deathmark_condition & target.time_to_die >= 10 ) || boss & fight_remains <= 20",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Check for Applicable Shiv usage",
["criteria"] = "cooldown.shiv.ready",
["list_name"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "( debuff.shiv.up || cooldown.shiv.remains < 6 ) & buff.envenom.up & ( cooldown.deathmark.remains >= 50 || dot.deathmark.ticking ) || boss & fight_remains <= 15",
["action"] = "kingsbane",
},
{
["enabled"] = true,
["action"] = "thistle_tea",
["description"] = "Avoid overcapped energy, use with shiv, or dump charges at the end of a fight",
["criteria"] = "! buff.thistle_tea.up & ( debuff.shiv.remains >= 4 || spell_targets.fan_of_knives >= 4 & debuff.shiv.remains >= 6 || boss & fight_remains <= cooldown.thistle_tea.charges * 6 )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Potion/Racials/Other misc cooldowns",
["list_name"] = "misc_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! stealthed.all & master_assassin_remains = 0",
["list_name"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "( buff.fatebound_coin_tails.stack > 0 & buff.fatebound_coin_heads.stack > 0 ) || debuff.shiv.up & ( cooldown.deathmark.remains > 50 || ! talent.inevitabile_end.enabled & effective_combo_points >= variable.effective_spend_cp )",
["use_off_gcd"] = 1,
["description"] = "Cold Blood for Edge Case or Envenoms during shiv",
["action"] = "cold_blood",
},
},
},
["version"] = 20241027.1,
["warnings"] = "The import for 'stealthed' required some automated changes.\nLine 2: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 3: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 8: Converted 'talent.shrouded_suffocation' to 'talent.shrouded_suffocation.enabled' (1x).\n\nThe import for 'vanish' required some automated changes.\nLine 3: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 3: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 3: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 5: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 5: Converted 'talent.indiscriminate_carnage' to 'talent.indiscriminate_carnage.enabled' (1x).\nLine 5: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 6: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\nLine 6: Converted 'talent.master_assassin' to 'talent.master_assassin.enabled' (1x).\nLine 7: Converted 'talent.improved_garrote' to 'talent.improved_garrote.enabled' (1x).\n\nThe import for 'core_dot' required some automated changes.\nLine 2: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\nLine 2: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\n\nThe import for 'shiv' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 3: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 6: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\nLine 7: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 7: Converted 'talent.arterial_precision' to 'talent.arterial_precision.enabled' (1x).\n\nThe import for 'misc_cds' required some automated changes.\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 5: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\n\nThe import for 'aoe_dot' required some automated changes.\nLine 4: Converted 'talent.dashing_scoundrel' to 'talent.dashing_scoundrel.enabled' (1x).\n\nThe import for 'items' required some automated changes.\nLine 8: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 8: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 9: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 9: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'default' required some automated changes.\nLine 6: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\nLine 6: Converted 'talent.vicious_venoms' to 'talent.vicious_venoms.enabled' (1x).\nLine 9: Converted 'talent.sanguine_blades' to 'talent.sanguine_blades.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 3: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 4: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 4: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.1.is.witherbarks_branch' to 'trinket.t1.is.witherbarks_branch' (1x).\nLine 4: Converted 'trinket.2.is.witherbarks_branch' to 'trinket.t2.is.witherbarks_branch' (1x).\nLine 5: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\n\nThe import for 'direct' required some automated changes.\nLine 5: Converted 'talent.caustic_spatter' to 'talent.caustic_spatter.enabled' (1x).\nLine 8: Converted 'talent.momentum_of_despair' to 'talent.momentum_of_despair.enabled' (1x).\nLine 8: Converted 'talent.thrown_precision' to 'talent.thrown_precision.enabled' (1x).\nLine 8: Converted 'talent.vicious_venoms' to 'talent.vicious_venoms.enabled' (1x).\nLine 9: Converted 'talent.momentum_of_despair' to 'talent.momentum_of_despair.enabled' (1x).\nLine 9: Converted 'talent.thrown_precision' to 'talent.thrown_precision.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 2: Converted 'talent.kingsbane' to 'talent.kingsbane.enabled' (1x).\nLine 11: Converted 'talent.inevitabile_end' to 'talent.inevitabile_end.enabled' (1x).\n\nImported 11 action lists.\n",
["spec"] = 259,
["profile"] = "actions.precombat+=/apply_poison\nactions.precombat+=/variable,name=priority_rotation,value=toggle.funnel\n# Check which trinket slots have Stat Values\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)&!trinket.2.is.witherbarks_branch||trinket.1.is.witherbarks_branch\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)&!trinket.1.is.witherbarks_branch||trinket.2.is.witherbarks_branch\n# Determine combo point finish condition\nactions.precombat+=/variable,name=effective_spend_cp,value=cp_max_spend-2<?5*talent.hand_of_fate\n# Pre-cast Slice and Dice if possible\nactions.precombat+=/stealth\nactions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable&!buff.indiscriminate_carnage.up\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Combined Energy Regen needed to saturate (TODO: estimate poisoned_bleeds better)\nactions+=/variable,name=regen_saturated,value=energy.regen_combined>15\n# AoE Damage over time abilities Check what the maximum Scent of Blood stacks is currently\nactions+=/variable,name=scent_effective_max_stacks,value=(spell_targets.fan_of_knives*talent.scent_of_blood.rank*2)>?20\n# We are Scent Saturated when our stack count is hitting the maximum\nactions+=/variable,name=scent_saturation,value=buff.scent_of_blood.stack>=variable.scent_effective_max_stacks\n# Check if we should be using our energy\nactions+=/variable,name=not_pooling,value=(dot.deathmark.ticking||dot.kingsbane.ticking||debuff.shiv.up)||(buff.envenom.up&buff.envenom.remains<=1)||energy.pct>=(40+30*talent.hand_of_fate-15*talent.vicious_venoms)||boss&fight_remains<=20\nactions+=/variable,name=in_cooldowns,value=dot.deathmark.ticking||dot.kingsbane.ticking||debuff.shiv.up\nactions+=/variable,name=clip_envenom,value=buff.envenom.up&buff.envenom.remains<=1\nactions+=/variable,name=upper_limit_energy,value=70-30*talent.sanguine_blades-10*talent.vicious_venoms.rank\nactions+=/variable,name=avoid_tea,value=energy>40+50+5*talent.vicious_venoms.rank\nactions+=/variable,name=cd_soon,value=cooldown.kingsbane.remains<6&!cooldown.kingsbane.ready\nactions+=/variable,name=not_pooling,value=variable.in_cooldowns||!variable.cd_soon&variable.avoid_tea&buff.darkest_night.up||!variable.cd_soon&variable.avoid_tea&variable.clip_envenom||energy.percent>=variable.upper_limit_energy||fight_remains<=20\nactions+=/call_action_list,name=stealthed,strict=1,if=stealthed.rogue||stealthed.improved_garrote||master_assassin_remains>0\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=core_dot\nactions+=/call_action_list,name=aoe_dot,strict=1,if=active_enemies>1\nactions+=/call_action_list,name=direct\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen_combined\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane\nactions.cds+=/variable,name=deathmark_ma_condition,value=!talent.master_assassin.enabled||dot.garrote.ticking\nactions.cds+=/variable,name=deathmark_kingsbane_condition,value=!talent.kingsbane||cooldown.kingsbane.remains<=2\n# Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied\nactions.cds+=/variable,name=deathmark_condition,value=!stealthed.rogue&buff.slice_and_dice.remains>5&dot.rupture.ticking&buff.envenom.up&!debuff.deathmark.up&variable.deathmark_ma_condition&variable.deathmark_kingsbane_condition\n# Usages for various special-case Trinkets and other Cantrips if applicable\nactions.cds+=/call_action_list,name=items\n## Invoke Externals to Deathmark\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=dot.deathmark.ticking\n# Cast Deathmark if the target will survive long enough\nactions.cds+=/deathmark,if=(variable.deathmark_condition&target.time_to_die>=10)||boss&fight_remains<=20\n# Check for Applicable Shiv usage\nactions.cds+=/call_action_list,name=shiv,if=cooldown.shiv.ready\nactions.cds+=/kingsbane,if=(debuff.shiv.up||cooldown.shiv.remains<6)&buff.envenom.up&(cooldown.deathmark.remains>=50||dot.deathmark.ticking)||boss&fight_remains<=15\n# Avoid overcapped energy, use with shiv, or dump charges at the end of a fight\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(debuff.shiv.remains>=4||spell_targets.fan_of_knives>=4&debuff.shiv.remains>=6||boss&fight_remains<=cooldown.thistle_tea.charges*6)\n# Potion/Racials/Other misc cooldowns\nactions.cds+=/call_action_list,name=misc_cds\nactions.cds+=/call_action_list,name=vanish,if=!stealthed.all&master_assassin_remains=0\n# Cold Blood for Edge Case or Envenoms during shiv\nactions.cds+=/cold_blood,use_off_gcd=1,if=(buff.fatebound_coin_tails.stack>0&buff.fatebound_coin_heads.stack>0)||debuff.shiv.up&(cooldown.deathmark.remains>50||!talent.inevitabile_end&effective_combo_points>=variable.effective_spend_cp)\n\n# Core damage over time abilities used everywhere Maintain Garrote\nactions.core_dot+=/garrote,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&target.time_to_die-remains>12\n# Maintain Rupture unless darkest night is up\nactions.core_dot+=/rupture,if=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)&refreshable&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&(!buff.darkest_night.up||talent.caustic_spatter&!debuff.caustic_spatter.up)\n\n# Helper Variable to check basic finisher conditions\nactions.aoe_dot+=/variable,name=dot_finisher_condition,value=effective_combo_points>=variable.effective_spend_cp&(pmultiplier<=1)\n# Crimson Tempest on 2+ Targets if we have enough energy regen\nactions.aoe_dot+=/crimson_tempest,if=spell_targets>=2&variable.dot_finisher_condition&refreshable&target.time_to_die-remains>6\n# Garrote upkeep, also uses it in AoE to reach energy saturation\nactions.aoe_dot+=/garrote,cycle_targets=1,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&!variable.regen_saturated&target.time_to_die-remains>12\n# Rupture upkeep, also uses it in AoE to reach energy or scent of blood saturation\nactions.aoe_dot+=/rupture,cycle_targets=1,if=variable.dot_finisher_condition&refreshable&(!dot.kingsbane.ticking||buff.cold_blood.up)&(!variable.regen_saturated&(talent.scent_of_blood.rank=2||talent.scent_of_blood.rank<=1&(buff.indiscriminate_carnage.up||target.time_to_die-remains>15)))&target.time_to_die-remains>(7+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\nactions.aoe_dot+=/rupture,cycle_targets=1,if=variable.dot_finisher_condition&refreshable&(!dot.kingsbane.ticking||buff.cold_blood.up)&variable.regen_saturated&!variable.scent_saturation&target.time_to_die-remains>19&!buff.darkest_night.up\n# Garrote as a special generator for the last CP before a finisher for edge case handling\nactions.aoe_dot+=/garrote,if=refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>4&master_assassin_remains=0\n\nactions.direct+=/pool_resource,for_next=1,extra_amount=energy.max*(0.4+0.3*talent.hand_of_fate.rank-0.15*talent.vicious_venoms.rank)-action.envenom.cost,if=active_dot.envenom=0\n# Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.\nactions.direct+=/envenom,if=!buff.darkest_night.up&combo_points>=variable.effective_spend_cp&(variable.not_pooling||debuff.amplifying_poison.stack>=20||active_enemies>1)&!buff.vanish.up\n# Special Envenom handling for Darkest Night\nactions.direct+=/envenom,if=buff.darkest_night.up&effective_combo_points>=cp_max_spend\n# Check if we should be using a filler\nactions.direct+=/variable,name=use_filler,value=combo_points.deficit>1-buff.darkest_night.up||variable.not_pooling||active_enemies>1\n# Maintain Caustic Spatter\nactions.direct+=/variable,name=use_caustic_filler,value=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&combo_points.deficit>1&active_enemies>1\nactions.direct+=/mutilate,if=variable.use_caustic_filler\nactions.direct+=/ambush,if=variable.use_caustic_filler\n# Fan of Knives at 3+ targets, accounting for various edge cases\nactions.direct+=/fan_of_knives,if=variable.use_filler&!priority_rotation&(spell_targets.fan_of_knives>=3-(talent.momentum_of_despair&talent.thrown_precision)||buff.clear_the_witnesses.up&!talent.vicious_venoms)\n# Fan of Knives to apply poisons if inactive on any target (or any bleeding targets with priority rotation) at 3T\nactions.direct+=/fan_of_knives,if=active_dot.deadly_poison_dot<spell_targets.fan_of_knives&(!priority_rotation||dot.garrote.ticking||dot.rupture.ticking)&variable.use_filler&spell_targets.fan_of_knives>=3-(talent.momentum_of_despair&talent.thrown_precision)\n# Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.\nactions.direct+=/ambush,if=variable.use_filler&(buff.blindside.up||stealthed.rogue)&(!dot.kingsbane.ticking||debuff.deathmark.down||buff.blindside.up)\n# Tab-Mutilate to apply Deadly Poison at 2 targets\nactions.direct+=/mutilate,cycle_targets=1,if=variable.use_filler&spell_targets.fan_of_knives=2\n# Fallback Mutilate (without breaking Envenom pooling)\nactions.direct+=/mutilate,if=variable.use_filler\n\n# Special Case Trinkets\nactions.items+=/variable,name=base_trinket_condition,value=dot.rupture.ticking&cooldown.deathmark.remains<2||dot.deathmark.ticking||boss&fight_remains<=22\nactions.items+=/use_item,name=ashes_of_the_embersoul,use_off_gcd=1,if=(dot.kingsbane.ticking&dot.kingsbane.remains<=11)||boss&fight_remains<=22\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=treacherous_transmitter,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=mad_queens_mandate,if=cooldown.deathmark.remains>=30&!dot.deathmark.ticking||boss&fight_remains<=3\n## actions.items+=/do_treacherous_transmitter_task,use_off_gcd=1,if=dot.deathmark.ticking&active_enemies=1||buff.realigning_nexus_convergence_divergence.up&buff.realigning_nexus_convergence_divergence.remains<=2||buff.cryptic_instructions.up&buff.cryptic_instructions.remains<=2||buff.errant_manaforge_emission.up&buff.errant_manaforge_emission.remains<=2||fight_remains<=15\nactions.items+=/use_item,name=imperfect_ascendancy_serum,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=dot.rupture.ticking&cooldown.deathmark.remains<2||boss&fight_remains<=22\n# Fallback case for using stat trinkets\nactions.items+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready&dot.kingsbane.ticking||!debuff.deathmark.up&cooldown.deathmark.remains>20&dot.kingsbane.ticking))||!variable.trinket_sync_slot)\nactions.items+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(debuff.deathmark.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready&dot.kingsbane.ticking||!debuff.deathmark.up&cooldown.deathmark.remains>20&dot.kingsbane.ticking))||!variable.trinket_sync_slot)\n\n# Miscellaneous Cooldowns Potion\nactions.misc_cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||debuff.deathmark.up\n# Various special racials to be synced with cooldowns\nactions.misc_cds+=/blood_fury,if=debuff.deathmark.up\nactions.misc_cds+=/berserking,if=debuff.deathmark.up\nactions.misc_cds+=/fireblood,if=debuff.deathmark.up\nactions.misc_cds+=/ancestral_call,if=(!talent.kingsbane&debuff.deathmark.up&debuff.shiv.up)||(talent.kingsbane&debuff.deathmark.up&dot.kingsbane.ticking&dot.kingsbane.remains<8)\n\n# Shiv conditions\nactions.shiv+=/variable,name=shiv_condition,value=!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking\nactions.shiv+=/variable,name=shiv_kingsbane_condition,value=talent.kingsbane&buff.envenom.up&variable.shiv_condition\n# Shiv for aoe with Arterial Precision\nactions.shiv+=/shiv,if=talent.arterial_precision&variable.shiv_condition&spell_targets.fan_of_knives>=4&dot.crimson_tempest.ticking\n# Shiv cases for Kingsbane\nactions.shiv+=/shiv,if=!talent.lightweight_shiv.enabled&variable.shiv_kingsbane_condition&(dot.kingsbane.ticking&dot.kingsbane.remains<8||!dot.kingsbane.ticking&cooldown.kingsbane.remains>=20)&(!talent.crimson_tempest.enabled||active_enemies=1||dot.crimson_tempest.ticking)\nactions.shiv+=/shiv,if=talent.lightweight_shiv.enabled&variable.shiv_kingsbane_condition&(dot.kingsbane.ticking||cooldown.kingsbane.remains<=1)\n# Fallback shiv for arterial during deathmark\nactions.shiv+=/shiv,if=talent.arterial_precision&variable.shiv_condition&debuff.deathmark.up\n# Fallback if no special cases apply\nactions.shiv+=/shiv,if=!talent.kingsbane&!talent.arterial_precision&variable.shiv_condition&(!talent.crimson_tempest.enabled||active_enemies=1||dot.crimson_tempest.ticking)\n# Dump Shiv on fight end\nactions.shiv+=/shiv,if=boss&fight_remains<=charges*8\n\n# Stealthed Actions\nactions.stealthed+=/pool_resource,for_next=1\n# Apply Deathstalkers Mark if it has fallen off\nactions.stealthed+=/ambush,if=!debuff.deathstalkers_mark.up&talent.deathstalkers_mark&(active_dot.deathstalkers_mark=0||buff.darkest_night.down)\n# Make sure to have Shiv up during Kingsbane as a final check\nactions.stealthed+=/shiv,if=talent.kingsbane&dot.kingsbane.ticking&debuff.shiv.remains<1&buff.envenom.up\n# Envenom to maintain the buff during Subterfuge\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&dot.kingsbane.ticking&buff.envenom.remains<=3&(debuff.deathstalkers_mark.up||buff.cold_blood.up)\n# Envenom during Master Assassin in single target\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&buff.master_assassin_aura.up&active_enemies=1&(debuff.deathstalkers_mark.up||buff.cold_blood.up)\n# Rupture during Indiscriminate Carnage\nactions.stealthed+=/rupture,cycle_targets=1,if=effective_combo_points>=variable.effective_spend_cp&buff.indiscriminate_carnage.up&(refreshable||!settings.cycle)&(!variable.regen_saturated||!variable.scent_saturation||!dot.rupture.ticking)&target.time_to_die>15\n# Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage\nactions.stealthed+=/garrote,cycle_targets=1,if=stealthed.improved_garrote&(remains<12||pmultiplier<=1||(buff.indiscriminate_carnage.up&active_dot.garrote<cycle_enemies))&active_enemies>1&target.time_to_die-remains>2\nactions.stealthed+=/garrote,if=stealthed.improved_garrote&(pmultiplier<=1||remains<12||active_enemies>1&buff.master_assassin_aura.up&buff.master_assassin_aura.remains<3)&combo_points.deficit>=1+2*talent.shrouded_suffocation\n\n\n# Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish to fish for Fateful Ending\nactions.vanish+=/vanish,if=!buff.fatebound_lucky_coin.up&effective_combo_points>=variable.effective_spend_cp&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)\n# Vanish to spread Garrote during Deathmark without Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&!talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish for cleaving Garrotes with Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&spell_targets.fan_of_knives>2&(target.time_to_die-remains>15||raid_event.adds.in>20)\n# Vanish fallback for Master Assassin\nactions.vanish+=/vanish,if=!talent.improved_garrote&talent.master_assassin&!dot.rupture.refreshable&dot.garrote.remains>3&debuff.deathmark.up&(debuff.shiv.up||debuff.deathmark.remains<4)\n# Vanish fallback for Improved Garrote during Deathmark if no add waves are expected\nactions.vanish+=/vanish,if=talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&raid_event.adds.in>30",
},
["Feral"] = {
["builtIn"] = true,
["date"] = 20241022,
["spec"] = 103,
["desc"] = "2024-10-22: 11.0.5\n\n2024-09-21: SimC update\n\n2024-09-10: Fix Ferocious Bite max_energy\n\n2024-09-04, 09-08: SimC update\n\n2024-09-03: Tweak targeting\n\n2024-08-24: SimC priority update\n\n2024-08-15: Adjust Ferocious Bite for Wildstalker\n\n2024-08-11: Mark of the Wild, priority update\n\n2024-08-08: Interrupt and Soothe\n\n2024-07-24: The War Within",
["profile"] = "actions.precombat+=/mark_of_the_wild\nactions.precombat+=/prowl,if=!buff.prowl.up\nactions.precombat+=/cat_form,if=!buff.cat_form.up\n# check if trinket slot contains a stat on use (variable is just kept in case of things like mirror not working with has_use_buff)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff&!trinket.1.is.imperfect_ascendancy_serum&!trinket.1.is.ovinaxs_mercurial_egg&!trinket.1.is.concoction_kiss_of_death\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff&!trinket.2.is.imperfect_ascendancy_serum&!trinket.2.is.ovinaxs_mercurial_egg&!trinket.2.is.concoction_kiss_of_death\n# if we are playing 2 minute convoke, we prefer 2 minute on-use over 3 minute on-use even without berserk: heart of the lion\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=talent.convoke_the_spirits&!talent.ashamanes_guidance&variable.trinket_1_buffs&(trinket.1.cooldown.duration%%120=0||120%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=talent.convoke_the_spirits&!talent.ashamanes_guidance&variable.trinket_2_buffs&(trinket.1.cooldown.duration%%120=0||120%%trinket.1.cooldown.duration=0)\n# if we aren't playing 2 minute convoke, then we can sync 3 minute cds with berserk sans hotl\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=!(talent.convoke_the_spirits&!talent.ashamanes_guidance)&variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.1.cooldown.duration=0||trinket.1.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=!(talent.convoke_the_spirits&!talent.ashamanes_guidance)&variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.2.cooldown.duration=0||trinket.2.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.2.cooldown.duration=0)\n# prioritize trinkets that line-up with cds->main-stat on uses->longer cd trinkets->shorter duration trinkets\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.agility)*(1.2+trinket.2.has_buff.mastery)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.agility)*(1.2+trinket.1.has_buff.mastery)*(variable.trinket_1_sync))\n\nactions+=/prowl,if=buff.bs_inc.down&!buff.prowl.up\nactions+=/cat_form,if=!buff.cat_form.up&!talent.fluid_form\nactions+=/skull_bash\nactions+=/soothe\n## Line up <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> with Berserk.\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.bs_inc.up||!talent.berserk_heart_of_the_lion\nactions+=/call_action_list,name=variable\n## actions+=/stop_moving,if=gcd.remains=0&equipped.ovinaxs_mercurial_egg\nactions+=/tigers_fury,if=(energy.deficit>35||combo_points=5||combo_points>=3&dot.rip.refreshable&buff.bloodtalons.up)&(boss&fight_remains<=15||(cooldown.bs_inc.remains>20&fight_remains>5)||(cooldown.bs_inc.ready&fight_remains>12||boss))\nactions+=/rake,cycle_targets=1,if=buff.shadowmeld.up||buff.prowl.up\nactions+=/natures_vigil,if=variable.regrowth&health.percent<70&(buff.bs_inc.up||buff.tigers_fury.up)\nactions+=/renewal,if=variable.regrowth&health.percent<70\nactions+=/adaptive_swarm,cycle_targets=1,if=dot.adaptive_swarm_damage.stack<3&(!dot.adaptive_swarm_damage.ticking||dot.adaptive_swarm_damage.remains<2)&!action.adaptive_swarm.in_flight&(spell_targets=1||!talent.unbridled_swarm)&(dot.rip.ticking||hero_tree.druid_of_the_claw)\nactions+=/adaptive_swarm,cycle_targets=1,if=buff.cat_form.up&dot.adaptive_swarm_damage.stack<3&talent.unbridled_swarm.enabled&spell_targets.swipe_cat>1&dot.rip.ticking\nactions+=/ferocious_bite,if=buff.apex_predators_craving.up&!(variable.need_bt&active_bt_triggers=2)\nactions+=/call_action_list,name=cooldown,strict=1,if=dot.rip.ticking\n# with wildstalker and not both raging fury + veinripper, low cp rips for snapshot reasons is worth\nactions+=/rip,if=spell_targets=1&hero_tree.wildstalker&!(talent.raging_fury&talent.veinripper)&(buff.bloodtalons.up||!talent.bloodtalons)&(dot.rip.remains<5&buff.tigers_fury.remains>10&combo_points>=3||((buff.tigers_fury.remains<3&combo_points=5)||buff.tigers_fury.remains<=1)&buff.tigers_fury.up&combo_points>=3&remains<cooldown.tigers_fury.remains)\nactions+=/call_action_list,name=finisher,if=combo_points=5\nactions+=/call_action_list,name=builder,if=spell_targets.swipe_cat=1&combo_points<5&(variable.time_to_pool<=0||!variable.need_bt||variable.proccing_bt)\nactions+=/call_action_list,name=aoe_builder,if=spell_targets.swipe_cat>=2&combo_points<5&(variable.time_to_pool<=0||!variable.need_bt||variable.proccing_bt)\nactions+=/regrowth,if=buff.predatory_swiftness.up&variable.regrowth&selection_time>gcd.max\n\nactions.aoe_builder+=/variable,name=proccing_bt,op=set,value=variable.need_bt\n# maintain thrash highest prio\nactions.aoe_builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws&!(variable.need_bt&buff.bt_thrash.up)\n# avoid capping brs charges. Also send brutal slashes/ws swipe in aoe, even if we need to proc bloodtalons, during berserk.\nactions.aoe_builder+=/brutal_slash,cycle_targets=1,if=(cooldown.brutal_slash.full_recharge_time<4||time_to_die<4||raid_event.adds.remains<4||(buff.bs_inc.up&spell_targets>=3-hero_tree.druid_of_the_claw))&!(variable.need_bt&buff.bt_swipe.up&(buff.bs_inc.down||spell_targets<3-hero_tree.druid_of_the_claw))\nactions.aoe_builder+=/swipe_cat,if=talent.wild_slashes&(time_to_die<4||raid_event.adds.remains<4||buff.bs_inc.up&spell_targets>=3-hero_tree.druid_of_the_claw)&!(variable.need_bt&buff.bt_swipe.up&(buff.bs_inc.down||spell_targets<3-hero_tree.druid_of_the_claw))\n# with wild slashes we swipe at 5+ targets over raking/moonfire\nactions.aoe_builder+=/swipe_cat,if=time_to_die<4||(talent.wild_slashes&spell_targets.swipe_cat>4&!(variable.need_bt&buff.bt_swipe.up))\nactions.aoe_builder+=/prowl,if=dot.rake.refreshable||dot.rake.pmultiplier<1.4&!(variable.need_bt&buff.bt_rake.up)&action.rake.ready&gcd.remains=0&!buff.sudden_ambush.up&!variable.cc_capped\nactions.aoe_builder+=/shadowmeld,if=dot.rake.refreshable||dot.rake.pmultiplier<1.4&!(variable.need_bt&buff.bt_rake.up)&action.rake.ready&!buff.sudden_ambush.up&!buff.prowl.up&!variable.cc_capped\n# dcr rake > moonfire\nactions.aoe_builder+=/rake,cycle_targets=1,if=refreshable&talent.doubleclawed_rake&!(variable.need_bt&buff.bt_rake.up)&!variable.cc_capped\n# at 3t with wild slashes, swipe is better than moonfiring/st rake\nactions.aoe_builder+=/swipe_cat,if=talent.wild_slashes&spell_targets.swipe_cat>2&!(variable.need_bt&buff.bt_swipe.up)\n# li moonfire is better than non-dcr rake in aoe\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_moonfire.up)&!variable.cc_capped\nactions.aoe_builder+=/rake,cycle_targets=1,if=refreshable&!(variable.need_bt&buff.bt_rake.up)&!variable.cc_capped\n# fillers\nactions.aoe_builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.aoe_builder+=/swipe_cat,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.aoe_builder+=/shred,if=!buff.sudden_ambush.up&!variable.easy_swipe&!(variable.need_bt&buff.bt_shred.up)\nactions.aoe_builder+=/thrash_cat,if=!talent.thrashing_claws&!(variable.need_bt&buff.bt_thrash.up)\n# fallback bt actions\nactions.aoe_builder+=/rake,cycle_targets=1,if=talent.doubleclawed_rake&buff.sudden_ambush.up&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/moonfire_cat,cycle_targets=1,if=variable.need_bt&buff.bt_moonfire.down\nactions.aoe_builder+=/rake,cycle_targets=1,if=buff.sudden_ambush.up&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/shred,if=variable.need_bt&buff.bt_shred.down&!variable.easy_swipe\nactions.aoe_builder+=/rake,cycle_targets=1,if=dot.rake.pmultiplier<1.6&variable.need_bt&buff.bt_rake.down\nactions.aoe_builder+=/thrash_cat,if=variable.need_bt&buff.bt_shred.down\n\nactions.builder+=/prowl,if=gcd.remains=0&energy>=35&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)*!(variable.need_bt&buff.bt_rake.up)&buff.tigers_fury.up&!buff.shadowmeld.up\nactions.builder+=/shadowmeld,if=gcd.remains=0&energy>=35&!buff.sudden_ambush.up&(dot.rake.refreshable||dot.rake.pmultiplier<1.4)*!(variable.need_bt&buff.bt_rake.up)&buff.tigers_fury.up&!buff.prowl.up\n# upgrade to stealth rakes, otherwise refresh in pandemic. Delay rake as long as possible if it would downgrade\nactions.builder+=/rake,if=((refreshable&persistent_multiplier>=dot.rake.pmultiplier||dot.rake.remains<3.5)||buff.sudden_ambush.up&persistent_multiplier>dot.rake.pmultiplier)&!(variable.need_bt&buff.bt_rake.up)\nactions.builder+=/brutal_slash,if=cooldown.brutal_slash.full_recharge_time<4&!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/moonfire_cat,if=refreshable\nactions.builder+=/thrash_cat,if=refreshable&!talent.thrashing_claws\nactions.builder+=/shred,if=buff.clearcasting.up&!(variable.need_bt&buff.bt_shred.up)\n# pool energy if we need to refresh dot in the next 1.5s [Hekili] TODO: Sim character to see how frequently this fires, determine if `wait` value should be adjusted.\nactions.builder+=/pool_resource,wait=0.2,if=variable.dot_refresh_soon&energy.deficit>70&!variable.need_bt&!buff.bs_inc.up&cooldown.tigers_fury.remains>3\nactions.builder+=/brutal_slash,if=!(variable.need_bt&buff.bt_swipe.up)\nactions.builder+=/shred,if=!(variable.need_bt&buff.bt_shred.up)\nactions.builder+=/swipe_cat,if=variable.need_bt&buff.bt_swipe.down\n# clip rake for bt if it wont downgrade its snapshot\nactions.builder+=/rake,if=variable.need_bt&buff.bt_rake.down&persistent_multiplier>=dot.rake.pmultiplier\nactions.builder+=/moonfire_cat,if=variable.need_bt&buff.bt_moonfire.down\nactions.builder+=/thrash_cat,if=variable.need_bt&buff.bt_thrash.down\n\nactions.cooldown+=/incarnation,if=fight_remains>17||boss\n# non-stat on use trinkets get used on cooldown, so long as it wont interfere with a stat on-use trinket\nactions.cooldown+=/use_item,slot=trinket1,if=trinket.1.has_use_damage&(trinket.2.cooldown.remains>20||!variable.trinket_2_buffs)\nactions.cooldown+=/use_item,slot=trinket2,if=trinket.2.has_use_damage&(trinket.1.cooldown.remains>20||!variable.trinket_1_buffs)\n# berserk with tigers fury\nactions.cooldown+=/berserk,if=buff.tigers_fury.up&(fight_remains>12||boss)\nactions.cooldown+=/berserking,if=buff.bs_inc.up\n# todo make last set of cds line up again now that we know potions.remains is the syntax\nactions.cooldown+=/potion,if=buff.bs_inc.up||boss&fight_remains<32||(!variable.lastzerk&variable.lastconvoke&cooldown.convoke_the_spirits.remains<10)\n# non trinket gear-on-uses have variable rules on whether or not they trigger the trinket shared CD. For the cases they do we will need specific APL entries. For now just use on cooldown.\nactions.cooldown+=/use_items\n# stat on-use trinkets, prefers trinket with higher priority.\nactions.cooldown+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&(buff.bs_inc.up||((buff.tigers_fury.up&cooldown.tigers_fury.remains>25)&(cooldown.convoke_the_spirits.remains<6||(variable.trinket_2_buffs&cooldown.convoke_the_spirits.remains-trinket.2.cooldown.remains>0)||!talent.convoke_the_spirits&cooldown.bs_inc.remains-trinket.2.cooldown.remains>0)))&(!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.cooldown+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&(buff.bs_inc.up||((buff.tigers_fury.up&cooldown.tigers_fury.remains>25)&(cooldown.convoke_the_spirits.remains<6||(variable.trinket_1_buffs&cooldown.convoke_the_spirits.remains-trinket.1.cooldown.remains>0)||!talent.convoke_the_spirits&cooldown.bs_inc.remains-trinket.1.cooldown.remains>0)))&(!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n## actions.cooldown+=/do_treacherous_transmitter_task,if=buff.tigers_fury.up||fight_remains<22\nactions.cooldown+=/feral_frenzy,if=combo_points<=1||buff.bs_inc.up&combo_points<=2\n# always line up convoke with berserk if you can\nactions.cooldown+=/convoke_the_spirits,if=boss&fight_remains<5||(cooldown.bs_inc.remains>45||buff.bs_inc.up||!talent.berserk_heart_of_the_lion)&(buff.tigers_fury.up&(combo_points<=4||buff.bs_inc.up&combo_points<=3)&(target.time_to_die>5-talent.ashamanes_guidance.enabled||boss))\n\n# maintain/upgrade pws, if we have 6.5+s left on pw, we will instead bite if we have rampant ferocity talented. Without rampant, we will bite a vined target with 6 or fewer targets. If we have Ravage, we use specifically Ravage at 7 or fewer targets.\nactions.finisher+=/primal_wrath,if=spell_targets.primal_wrath>1&((dot.primal_wrath.remains<6.5&!buff.bs_inc.up||dot.primal_wrath.refreshable)||(!talent.rampant_ferocity.enabled&(spell_targets.primal_wrath>1&!dot.bloodseeker_vines.ticking&!buff.ravage.up||spell_targets.primal_wrath>6+talent.ravage)))\n# rip if single target or pw isnt up. Rip with bloodtalons if talented. If tigers fury will be up before rip falls off, then delay refresh\nactions.finisher+=/rip,cycle_targets=1,if=refreshable&(!talent.primal_wrath||spell_targets=1)&(buff.bloodtalons.up||!talent.bloodtalons)&(buff.tigers_fury.up||dot.rip.remains<cooldown.tigers_fury.remains)&(remains<fight_remains||remains<4&buff.ravage.up)\nactions.finisher+=/pool_resource,for_next=1\nactions.finisher+=/ferocious_bite,max_energy=1,cycle_targets=1,if=!buff.bs_inc.up\nactions.finisher+=/ferocious_bite,cycle_targets=1,if=buff.bs_inc.up\n\n# most expensive bt cycle is Shred + Thrash + Rake, 40+40+35 for 115 energy. During incarn it is 32+32+28 for 92energy\nactions.variable+=/variable,name=effective_energy,op=set,value=energy+(40*buff.clearcasting.stack)+(3*energy.regen)+(50*(cooldown.tigers_fury.remains<3.5))\n# estimated time until we have enough energy to proc bloodtalons.\nactions.variable+=/variable,name=time_to_pool,op=set,value=((115-variable.effective_energy-(23*buff.incarnation.up))%energy.regen)\n# this returns true if we have a dot nearing pandemic range\nactions.variable+=/variable,name=dot_refresh_soon,value=(!talent.thrashing_claws&(dot.thrash_cat.remains-dot.thrash_cat.duration*0.3<=2))||(talent.lunar_inspiration&(dot.moonfire_cat.remains-dot.moonfire_cat.duration*0.3<=2))||((dot.rake.pmultiplier<1.6||buff.sudden_ambush.up)&(dot.rake.remains-dot.rake.duration*0.3<=2))\n# try to proc bt if we have 1 or 0 sacks of bloodtalons\nactions.variable+=/variable,name=need_bt,value=talent.bloodtalons&buff.bloodtalons.stack<=1\n# capped on clearcasting stacks\nactions.variable+=/variable,name=cc_capped,value=buff.clearcasting.stack=(1+talent.moment_of_clarity)\n# checks if theres exactly 1 convoke remaining in sim\nactions.variable+=/variable,name=lastconvoke,value=(cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration)>fight_remains&cooldown.convoke_the_spirits.remains<fight_remains\n# checks if theres exactly 1 berserk cast remaining in sim                 : at least 5s spare for now, TODO: check #s\nactions.variable+=/variable,name=lastzerk,value=(cooldown.bs_inc.remains+cooldown.bs_inc.duration+5)>fight_remains&cooldown.convoke_the_spirits.remains<fight_remains\n# approximates if theres exactly 1 potion cast remaining with duration to spare\nactions.variable+=/variable,name=lastpotion,value=(cooldown.potions.remains+cooldown.potions.duration+15)>fight_remains&cooldown.potions.remains+15<fight_remains\n# optional variable that sends regrowth and renewal casts. Turned off by default\nactions.variable+=/variable,name=regrowth,op=reset,value=settings.regrowth\n# optional variable that forgoes shredding in AoE. Turned off by default\nactions.variable+=/variable,name=easy_swipe,op=reset\nactions.variable+=/variable,name=proccing_bt,op=set,value=variable.need_bt\n# track moonfire snapshot\nactions.variable+=/variable,name=moonfire_snapshotted,value=buff.tigers_fury.up,op=set,if=prev.lunar_inspiration",
["version"] = 20241022,
["warnings"] = "The import for 'aoe_builder' required some automated changes.\nLine 2: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 4: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 5: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 8: Converted 'talent.doubleclawed_rake' to 'talent.doubleclawed_rake.enabled' (1x).\nLine 9: Converted 'talent.wild_slashes' to 'talent.wild_slashes.enabled' (1x).\nLine 15: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 16: Converted 'talent.doubleclawed_rake' to 'talent.doubleclawed_rake.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.fluid_form' to 'talent.fluid_form.enabled' (1x).\nLine 10: Converted 'talent.unbridled_swarm' to 'talent.unbridled_swarm.enabled' (1x).\nLine 14: Converted 'talent.raging_fury' to 'talent.raging_fury.enabled' (1x).\nLine 14: Converted 'talent.veinripper' to 'talent.veinripper.enabled' (1x).\nLine 14: Converted 'talent.bloodtalons' to 'talent.bloodtalons.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.is.imperfect_ascendancy_serum' to 'trinket.t1.is.imperfect_ascendancy_serum' (1x).\nLine 4: Converted 'trinket.1.is.ovinaxs_mercurial_egg' to 'trinket.t1.is.ovinaxs_mercurial_egg' (1x).\nLine 4: Converted 'trinket.1.is.concoction_kiss_of_death' to 'trinket.t1.is.concoction_kiss_of_death' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.is.imperfect_ascendancy_serum' to 'trinket.t2.is.imperfect_ascendancy_serum' (1x).\nLine 5: Converted 'trinket.2.is.ovinaxs_mercurial_egg' to 'trinket.t2.is.ovinaxs_mercurial_egg' (1x).\nLine 5: Converted 'trinket.2.is.concoction_kiss_of_death' to 'trinket.t2.is.concoction_kiss_of_death' (1x).\nLine 6: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 6: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%120=0||120%%trinket.t1.cooldown.duration=0)' to 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%120=0||120%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 7: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 7: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 7: Converted operations in 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_2_buffs&(trinket.t1.cooldown.duration%%120=0||120%%trinket.t1.cooldown.duration=0)' to 'talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled&variable.trinket_2_buffs&(trinket.t1.cooldown.duration%120=0||120%trinket.t1.cooldown.duration=0)'.\nLine 8: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 8: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 8: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 8: Converted operations in '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.t1.cooldown.duration=0)' to '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%trinket.t1.cooldown.duration=0||trinket.t1.cooldown.duration%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%trinket.t1.cooldown.duration=0)'.\nLine 9: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 9: Converted 'talent.ashamanes_guidance' to 'talent.ashamanes_guidance.enabled' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted operations in '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%%trinket.t2.cooldown.duration=0)' to '!(talent.convoke_the_spirits.enabled&!talent.ashamanes_guidance.enabled)&variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.bs_inc.duration=0||cooldown.bs_inc.duration%trinket.t2.cooldown.duration=0||trinket.t2.cooldown.duration%cooldown.convoke_the_spirits.duration=0||cooldown.convoke_the_spirits.duration%trinket.t2.cooldown.duration=0)'.\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 10: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_buff.agility' (1x).\nLine 10: Converted 'trinket.2.has_buff.agility' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 10: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 10: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 10: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 10: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_buff.agility' (1x).\nLine 10: Converted 'trinket.1.has_buff.agility' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 10: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 10: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(1.2+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(1.2+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(1.2+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(1.2+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\n\nThe import for 'builder' required some automated changes.\nLine 6: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\n\nThe import for 'variable' required some automated changes.\nLine 2: Converted operations in '((115-variable.effective_energy-(23*buff.incarnation.up))%energy.regen)' to '((115-variable.effective_energy-(23*buff.incarnation.up))/energy.regen)'.\nLine 3: Converted 'talent.thrashing_claws' to 'talent.thrashing_claws.enabled' (1x).\nLine 3: Converted 'talent.lunar_inspiration' to 'talent.lunar_inspiration.enabled' (1x).\nLine 4: Converted 'talent.bloodtalons' to 'talent.bloodtalons.enabled' (1x).\nLine 5: Converted 'talent.moment_of_clarity' to 'talent.moment_of_clarity.enabled' (1x).\n\nThe import for 'cooldown' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_damage' to 'trinket.t1.has_use_damage' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.has_use_damage' to 'trinket.t2.has_use_damage' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 8: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 11: Converted 'talent.berserk_heart_of_the_lion' to 'talent.berserk_heart_of_the_lion.enabled' (1x).\n\nThe import for 'finisher' required some automated changes.\nLine 1: Converted 'talent.ravage' to 'talent.ravage.enabled' (1x).\nLine 2: Converted 'talent.primal_wrath' to 'talent.primal_wrath.enabled' (1x).\nLine 2: Converted 'talent.bloodtalons' to 'talent.bloodtalons.enabled' (1x).\n\nImported 7 action lists.\n",
["author"] = "Makahiki",
["lists"] = {
["aoe_builder"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.need_bt",
["var_name"] = "proccing_bt",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled & ! ( variable.need_bt & buff.bt_thrash.up )",
["action"] = "thrash_cat",
["description"] = "maintain thrash highest prio",
},
{
["enabled"] = true,
["action"] = "brutal_slash",
["cycle_targets"] = 1,
["description"] = "avoid capping brs charges. Also send brutal slashes/ws swipe in aoe, even if we need to proc bloodtalons, during berserk.",
["criteria"] = "( cooldown.brutal_slash.full_recharge_time < 4 || time_to_die < 4 || raid_event.adds.remains < 4 || ( buff.bs_inc.up & spell_targets >= 3 - hero_tree.druid_of_the_claw ) ) & ! ( variable.need_bt & buff.bt_swipe.up & ( buff.bs_inc.down || spell_targets < 3 - hero_tree.druid_of_the_claw ) )",
},
{
["enabled"] = true,
["criteria"] = "talent.wild_slashes.enabled & ( time_to_die < 4 || raid_event.adds.remains < 4 || buff.bs_inc.up & spell_targets >= 3 - hero_tree.druid_of_the_claw ) & ! ( variable.need_bt & buff.bt_swipe.up & ( buff.bs_inc.down || spell_targets < 3 - hero_tree.druid_of_the_claw ) )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "time_to_die < 4 || ( talent.wild_slashes.enabled & spell_targets.swipe_cat > 4 & ! ( variable.need_bt & buff.bt_swipe.up ) )",
["action"] = "swipe_cat",
["description"] = "with wild slashes we swipe at 5+ targets over raking/moonfire",
},
{
["enabled"] = true,
["criteria"] = "dot.rake.refreshable || dot.rake.pmultiplier < 1.4 & ! ( variable.need_bt & buff.bt_rake.up ) & action.rake.ready & gcd.remains = 0 & ! buff.sudden_ambush.up & ! variable.cc_capped",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "dot.rake.refreshable || dot.rake.pmultiplier < 1.4 & ! ( variable.need_bt & buff.bt_rake.up ) & action.rake.ready & ! buff.sudden_ambush.up & ! buff.prowl.up & ! variable.cc_capped",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["description"] = "dcr rake > moonfire",
["criteria"] = "refreshable & talent.doubleclawed_rake.enabled & ! ( variable.need_bt & buff.bt_rake.up ) & ! variable.cc_capped",
},
{
["enabled"] = true,
["criteria"] = "talent.wild_slashes.enabled & spell_targets.swipe_cat > 2 & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
["description"] = "at 3t with wild slashes, swipe is better than moonfiring/st rake",
},
{
["enabled"] = true,
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
["description"] = "li moonfire is better than non-dcr rake in aoe",
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_moonfire.up ) & ! variable.cc_capped",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! ( variable.need_bt & buff.bt_rake.up ) & ! variable.cc_capped",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
["description"] = "fillers",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "! buff.sudden_ambush.up & ! variable.easy_swipe & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "! talent.thrashing_claws.enabled & ! ( variable.need_bt & buff.bt_thrash.up )",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["action"] = "rake",
["cycle_targets"] = 1,
["description"] = "fallback bt actions",
["criteria"] = "talent.doubleclawed_rake.enabled & buff.sudden_ambush.up & variable.need_bt & buff.bt_rake.down",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["action"] = "lunar_inspiration",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_ambush.up & variable.need_bt & buff.bt_rake.down",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_shred.down & ! variable.easy_swipe",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "dot.rake.pmultiplier < 1.6 & variable.need_bt & buff.bt_rake.down",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_shred.down",
["action"] = "thrash_cat",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.down & ! buff.prowl.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & ! talent.fluid_form.enabled",
["action"] = "cat_form",
},
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variable",
},
{
["enabled"] = true,
["criteria"] = "( energy.deficit > 35 || combo_points = 5 || combo_points >= 3 & dot.rip.refreshable & buff.bloodtalons.up ) & ( boss & fight_remains <= 15 || ( cooldown.bs_inc.remains > 20 & fight_remains > 5 ) || ( cooldown.bs_inc.ready & fight_remains > 12 || boss ) )",
["action"] = "tigers_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.shadowmeld.up || buff.prowl.up",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.regrowth & health.percent < 70 & ( buff.bs_inc.up || buff.tigers_fury.up )",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["criteria"] = "variable.regrowth & health.percent < 70",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "dot.adaptive_swarm_damage.stack < 3 & ( ! dot.adaptive_swarm_damage.ticking || dot.adaptive_swarm_damage.remains < 2 ) & ! action.adaptive_swarm.in_flight & ( spell_targets = 1 || ! talent.unbridled_swarm.enabled ) & ( dot.rip.ticking || hero_tree.druid_of_the_claw )",
["action"] = "adaptive_swarm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & dot.adaptive_swarm_damage.stack < 3 & talent.unbridled_swarm.enabled & spell_targets.swipe_cat > 1 & dot.rip.ticking",
["action"] = "adaptive_swarm",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.apex_predators_craving.up & ! ( variable.need_bt & active_bt_triggers = 2 )",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "dot.rip.ticking",
["list_name"] = "cooldown",
},
{
["enabled"] = true,
["criteria"] = "spell_targets = 1 & hero_tree.wildstalker & ! ( talent.raging_fury.enabled & talent.veinripper.enabled ) & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) & ( dot.rip.remains < 5 & buff.tigers_fury.remains > 10 & combo_points >= 3 || ( ( buff.tigers_fury.remains < 3 & combo_points = 5 ) || buff.tigers_fury.remains <= 1 ) & buff.tigers_fury.up & combo_points >= 3 & remains < cooldown.tigers_fury.remains )",
["action"] = "rip",
["description"] = "with wildstalker and not both raging fury + veinripper, low cp rips for snapshot reasons is worth",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "combo_points = 5",
["list_name"] = "finisher",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "spell_targets.swipe_cat = 1 & combo_points < 5 & ( variable.time_to_pool <= 0 || ! variable.need_bt || variable.proccing_bt )",
["list_name"] = "builder",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "spell_targets.swipe_cat >= 2 & combo_points < 5 & ( variable.time_to_pool <= 0 || ! variable.need_bt || variable.proccing_bt )",
["list_name"] = "aoe_builder",
},
{
["enabled"] = true,
["criteria"] = "buff.predatory_swiftness.up & variable.regrowth & selection_time > gcd.max",
["action"] = "regrowth",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up",
["action"] = "cat_form",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff & ! trinket.t1.is.imperfect_ascendancy_serum & ! trinket.t1.is.ovinaxs_mercurial_egg & ! trinket.t1.is.concoction_kiss_of_death",
["var_name"] = "trinket_1_buffs",
["description"] = "check if trinket slot contains a stat on use (variable is just kept in case of things like mirror not working with has_use_buff)",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff & ! trinket.t2.is.imperfect_ascendancy_serum & ! trinket.t2.is.ovinaxs_mercurial_egg & ! trinket.t2.is.concoction_kiss_of_death",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "if we are playing 2 minute convoke, we prefer 2 minute on-use over 3 minute on-use even without berserk: heart of the lion",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled & variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % 120 = 0 || 120 % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled & variable.trinket_2_buffs & ( trinket.t1.cooldown.duration % 120 = 0 || 120 % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "if we aren't playing 2 minute convoke, then we can sync 3 minute cds with berserk sans hotl",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "! ( talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled ) & variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.bs_inc.duration = 0 || cooldown.bs_inc.duration % trinket.t1.cooldown.duration = 0 || trinket.t1.cooldown.duration % cooldown.convoke_the_spirits.duration = 0 || cooldown.convoke_the_spirits.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "! ( talent.convoke_the_spirits.enabled & ! talent.ashamanes_guidance.enabled ) & variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.bs_inc.duration = 0 || cooldown.bs_inc.duration % trinket.t2.cooldown.duration = 0 || trinket.t2.cooldown.duration % cooldown.convoke_the_spirits.duration = 0 || cooldown.convoke_the_spirits.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "prioritize trinkets that line-up with cds->main-stat on uses->longer cd trinkets->shorter duration trinkets",
["value"] = "2",
["var_name"] = "trinket_priority",
["action"] = "variable",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( 1.2 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( 1.2 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
},
["builder"] = {
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & energy >= 35 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) * ! ( variable.need_bt & buff.bt_rake.up ) & buff.tigers_fury.up & ! buff.shadowmeld.up",
["action"] = "prowl",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & energy >= 35 & ! buff.sudden_ambush.up & ( dot.rake.refreshable || dot.rake.pmultiplier < 1.4 ) * ! ( variable.need_bt & buff.bt_rake.up ) & buff.tigers_fury.up & ! buff.prowl.up",
["action"] = "shadowmeld",
},
{
["enabled"] = true,
["criteria"] = "( ( refreshable & persistent_multiplier >= dot.rake.pmultiplier || dot.rake.remains < 3.5 ) || buff.sudden_ambush.up & persistent_multiplier > dot.rake.pmultiplier ) & ! ( variable.need_bt & buff.bt_rake.up )",
["action"] = "rake",
["description"] = "upgrade to stealth rakes, otherwise refresh in pandemic. Delay rake as long as possible if it would downgrade",
},
{
["enabled"] = true,
["criteria"] = "cooldown.brutal_slash.full_recharge_time < 4 & ! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ! talent.thrashing_claws.enabled",
["action"] = "thrash_cat",
},
{
["enabled"] = true,
["criteria"] = "buff.clearcasting.up & ! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "pool energy if we need to refresh dot in the next 1.5s [Hekili] TODO: Sim character to see how frequently this fires, determine if `wait` value should be adjusted.",
["criteria"] = "variable.dot_refresh_soon & energy.deficit > 70 & ! variable.need_bt & ! buff.bs_inc.up & cooldown.tigers_fury.remains > 3",
["wait"] = "0.2",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_swipe.up )",
["action"] = "brutal_slash",
},
{
["enabled"] = true,
["criteria"] = "! ( variable.need_bt & buff.bt_shred.up )",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_swipe.down",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_rake.down & persistent_multiplier >= dot.rake.pmultiplier",
["action"] = "rake",
["description"] = "clip rake for bt if it wont downgrade its snapshot",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_moonfire.down",
["action"] = "lunar_inspiration",
},
{
["enabled"] = true,
["criteria"] = "variable.need_bt & buff.bt_thrash.down",
["action"] = "thrash_cat",
},
},
["variable"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy + ( 40 * buff.clearcasting.stack ) + ( 3 * energy.regen ) + ( 50 * ( cooldown.tigers_fury.remains < 3.5 ) )",
["var_name"] = "effective_energy",
["description"] = "most expensive bt cycle is Shred + Thrash + Rake, 40+40+35 for 115 energy. During incarn it is 32+32+28 for 92energy",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( 115 - variable.effective_energy - ( 23 * buff.incarnation.up ) ) / energy.regen )",
["var_name"] = "time_to_pool",
["description"] = "estimated time until we have enough energy to proc bloodtalons.",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.thrashing_claws.enabled & ( dot.thrash_cat.remains - dot.thrash_cat.duration * 0.3 <= 2 ) ) || ( talent.lunar_inspiration.enabled & ( dot.moonfire_cat.remains - dot.moonfire_cat.duration * 0.3 <= 2 ) ) || ( ( dot.rake.pmultiplier < 1.6 || buff.sudden_ambush.up ) & ( dot.rake.remains - dot.rake.duration * 0.3 <= 2 ) )",
["var_name"] = "dot_refresh_soon",
["description"] = "this returns true if we have a dot nearing pandemic range",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.bloodtalons.enabled & buff.bloodtalons.stack <= 1",
["var_name"] = "need_bt",
["description"] = "try to proc bt if we have 1 or 0 sacks of bloodtalons",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.clearcasting.stack = ( 1 + talent.moment_of_clarity.enabled )",
["var_name"] = "cc_capped",
["description"] = "capped on clearcasting stacks",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration ) > fight_remains & cooldown.convoke_the_spirits.remains < fight_remains",
["var_name"] = "lastconvoke",
["description"] = "checks if theres exactly 1 convoke remaining in sim",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.bs_inc.remains + cooldown.bs_inc.duration + 5 ) > fight_remains & cooldown.convoke_the_spirits.remains < fight_remains",
["var_name"] = "lastzerk",
["description"] = "checks if theres exactly 1 berserk cast remaining in sim                 : at least 5s spare for now, TODO: check #s",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.potions.remains + cooldown.potions.duration + 15 ) > fight_remains & cooldown.potions.remains + 15 < fight_remains",
["var_name"] = "lastpotion",
["description"] = "approximates if theres exactly 1 potion cast remaining with duration to spare",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["value"] = "settings.regrowth",
["var_name"] = "regrowth",
["description"] = "optional variable that sends regrowth and renewal casts. Turned off by default",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "easy_swipe",
["description"] = "optional variable that forgoes shredding in AoE. Turned off by default",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.need_bt",
["var_name"] = "proccing_bt",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "moonfire_snapshotted",
["value"] = "buff.tigers_fury.up",
["description"] = "track moonfire snapshot",
["criteria"] = "prev.lunar_inspiration",
},
},
["cooldown"] = {
{
["enabled"] = true,
["criteria"] = "fight_remains > 17 || boss",
["action"] = "incarnation",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "non-stat on use trinkets get used on cooldown, so long as it wont interfere with a stat on-use trinket",
["criteria"] = "trinket.t1.has_use_damage & ( trinket.t2.cooldown.remains > 20 || ! variable.trinket_2_buffs )",
},
{
["enabled"] = true,
["criteria"] = "trinket.t2.has_use_damage & ( trinket.t1.cooldown.remains > 20 || ! variable.trinket_1_buffs )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "buff.tigers_fury.up & ( fight_remains > 12 || boss )",
["action"] = "berserk",
["description"] = "berserk with tigers fury",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up || boss & fight_remains < 32 || ( ! variable.lastzerk & variable.lastconvoke & cooldown.convoke_the_spirits.remains < 10 )",
["action"] = "potion",
["description"] = "todo make last set of cds line up again now that we know potions.remains is the syntax",
},
{
["enabled"] = true,
["description"] = "non trinket gear-on-uses have variable rules on whether or not they trigger the trinket shared CD. For the cases they do we will need specific APL entries. For now just use on cooldown.",
["action"] = "use_items",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "stat on-use trinkets, prefers trinket with higher priority.",
["criteria"] = "variable.trinket_1_buffs & ( buff.bs_inc.up || ( ( buff.tigers_fury.up & cooldown.tigers_fury.remains > 25 ) & ( cooldown.convoke_the_spirits.remains < 6 || ( variable.trinket_2_buffs & cooldown.convoke_the_spirits.remains - trinket.t2.cooldown.remains > 0 ) || ! talent.convoke_the_spirits.enabled & cooldown.bs_inc.remains - trinket.t2.cooldown.remains > 0 ) ) ) & ( ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["criteria"] = "variable.trinket_2_buffs & ( buff.bs_inc.up || ( ( buff.tigers_fury.up & cooldown.tigers_fury.remains > 25 ) & ( cooldown.convoke_the_spirits.remains < 6 || ( variable.trinket_1_buffs & cooldown.convoke_the_spirits.remains - trinket.t1.cooldown.remains > 0 ) || ! talent.convoke_the_spirits.enabled & cooldown.bs_inc.remains - trinket.t1.cooldown.remains > 0 ) ) ) & ( ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "combo_points <= 1 || buff.bs_inc.up & combo_points <= 2",
["action"] = "feral_frenzy",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 5 || ( cooldown.bs_inc.remains > 45 || buff.bs_inc.up || ! talent.berserk_heart_of_the_lion.enabled ) & ( buff.tigers_fury.up & ( combo_points <= 4 || buff.bs_inc.up & combo_points <= 3 ) & ( target.time_to_die > 5 - talent.ashamanes_guidance.enabled || boss ) )",
["action"] = "convoke_the_spirits",
["description"] = "always line up convoke with berserk if you can",
},
},
["finisher"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.primal_wrath > 1 & ( ( dot.primal_wrath.remains < 6.5 & ! buff.bs_inc.up || dot.primal_wrath.refreshable ) || ( ! talent.rampant_ferocity.enabled & ( spell_targets.primal_wrath > 1 & ! dot.bloodseeker_vines.ticking & ! buff.ravage.up || spell_targets.primal_wrath > 6 + talent.ravage.enabled ) ) )",
["action"] = "primal_wrath",
["description"] = "maintain/upgrade pws, if we have 6.5+s left on pw, we will instead bite if we have rampant ferocity talented. Without rampant, we will bite a vined target with 6 or fewer targets. If we have Ravage, we use specifically Ravage at 7 or fewer targets.",
},
{
["enabled"] = true,
["action"] = "rip",
["cycle_targets"] = 1,
["description"] = "rip if single target or pw isnt up. Rip with bloodtalons if talented. If tigers fury will be up before rip falls off, then delay refresh",
["criteria"] = "refreshable & ( ! talent.primal_wrath.enabled || spell_targets = 1 ) & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) & ( buff.tigers_fury.up || dot.rip.remains < cooldown.tigers_fury.remains ) & ( remains < fight_remains || remains < 4 & buff.ravage.up )",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
["max_energy"] = 1,
["criteria"] = "! buff.bs_inc.up",
},
{
["enabled"] = true,
["criteria"] = "buff.bs_inc.up",
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
},
},
},
["Restoration Druid"] = {
["builtIn"] = true,
["date"] = 20241110,
["spec"] = 105,
["desc"] = "2024-11-10: Syrif's healing mode support\n\n2024-09-01, 09-08: When in Cat Form, do cat things\n\n2024-07-30: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "natures_vigil",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "settings.healing_mode",
["list_name"] = "healing",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "! buff.prowl.up & ! buff.shadowmeld.up",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.rake.enabled || buff.cat_form.up",
["list_name"] = "cat",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( buff.heart_of_the_wild.up || cooldown.heart_of_the_wild.remains > 60 - 30 * talent.cenarius_guidance.enabled || ! talent.heart_of_the_wild.enabled )",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & talent.improved_sunfire.enabled",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 12",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 8",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 7 & active_enemies < 7",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.starfire > 1 || buff.heart_of_the_wild.up",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["healing"] = {
{
["enabled"] = true,
["action"] = "rejuvenation",
["caption"] = "Tank",
["description"] = "On the tank",
["criteria"] = "active_dot.rejuvenation < 1",
},
{
["enabled"] = true,
["action"] = "lifebloom",
["caption"] = "Ally",
["description"] = "On an ally",
["criteria"] = "( active_dot.lifebloom < 1 ) || ( active_dot.lifebloom < 2 & buff.lifebloom.up & talent.undergrowth.enabled )",
},
{
["enabled"] = true,
["action"] = "lifebloom",
["caption"] = "Self",
["description"] = "On yourself",
["criteria"] = "( active_dot.lifebloom < 2 & buff.lifebloom.down & talent.undergrowth.enabled )",
},
{
["enabled"] = true,
["criteria"] = "buff.efflorescence.down",
["action"] = "efflorescence",
["description"] = "Maintain Efflo",
},
{
["enabled"] = true,
["action"] = "swiftmend",
["caption"] = "TREE",
["description"] = "transform into tree",
["criteria"] = "( active_dot.regrowth + active_dot.wild_growth + active_dot.rejuvenation ) > 1 & talent.reforestation.enabled & buff.reforestation.stack = 3",
},
{
["enabled"] = true,
["criteria"] = "prev.1.swiftmend",
["action"] = "wild_growth",
["description"] = "Always wild growth after swiftmend",
},
},
["cat"] = {
{
["enabled"] = true,
["criteria"] = "buff.shadowmeld.up || buff.prowl.up || buff.sudden_ambush.up",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.convoke_the_spirits.remains < 40 || ! talent.convoke_the_spirits.enabled ) || fight_remains < 46",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "( ( refreshable || energy > 90 & remains <= 10 ) & ( combo_points = 5 & time_to_die > remains + 24 || ( remains + combo_points * 4 < time_to_die & remains + 4 + combo_points * 4 > time_to_die ) ) || ! ticking & combo_points > 2 + spell_targets.swipe_cat * 2 )",
["action"] = "rip",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 7 & spell_targets.thrash_cat > 2",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( refreshable & target.time_to_die > 5 ) & ! prev_gcd.1.cat_form & ( active_enemies = 1 || talent.improved_sunfire.enabled )",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & time_to_die > 10 & spell_targets.swipe_cat < 10",
["action"] = "rake",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50 & ( dot.rake.refreshable & spell_targets.thrash_cat > 3 & spell_targets.thrash_cat < 7 & talent.thrash.enabled )",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "( refreshable & time_to_die > 12 & ! ticking || ( prev_gcd.1.sunfire & remains < duration * 0.8 & spell_targets.sunfire = 1 ) ) & ! prev_gcd.1.cat_form & spell_targets.swipe_cat < 6",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.moonfire & remains < duration * 0.8",
["action"] = "sunfire",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1 || ( active_enemies < 8 & ! buff.cat_form.up )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! buff.cat_form.up & energy > 50",
["action"] = "cat_form",
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "combo_points > 3 & target.time_to_die < 3 || combo_points = 5 & energy >= 50",
["action"] = "ferocious_bite",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 6 & ( spell_targets.thrash_cat > 1 || talent.liveliness.enabled )",
["action"] = "thrash_cat",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 3 & combo_points < 5 & talent.improved_swipe.enabled",
["action"] = "swipe_cat",
},
{
["enabled"] = true,
["criteria"] = "refreshable & target.time_to_die > 5 & active_enemies < 7 & ! talent.improved_sunfire.enabled",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["for_next"] = 1,
["action"] = "pool_resource",
},
{
["enabled"] = true,
["criteria"] = "energy > 60 & combo_points < 5",
["action"] = "shred",
},
},
["precombat"] = {
{
["enabled"] = true,
["description"] = "Snapshot raid buffed stats before combat begins and pre-potting is done.",
["action"] = "mark_of_the_wild",
},
{
["action"] = "heart_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "cat_form",
},
{
["enabled"] = true,
["criteria"] = "talent.rake.enabled",
["action"] = "prowl",
},
},
},
["version"] = 20241110,
["warnings"] = "Imported 4 action lists.\n",
["author"] = "Makahiki",
["profile"] = "# Snapshot raid buffed stats before combat begins and pre-potting is done.\nactions.precombat+=/mark_of_the_wild\nactions.precombat+=/heart_of_the_wild\nactions.precombat+=/cat_form,if=talent.rake.enabled\nactions.precombat+=/prowl,if=talent.rake.enabled\n\nactions+=/skull_bash\nactions+=/berserking\nactions+=/natures_vigil,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/call_action_list,name=healing,if=settings.healing_mode\nactions+=/heart_of_the_wild,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/use_items,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/potion,if=!buff.prowl.up&!buff.shadowmeld.up\nactions+=/run_action_list,name=cat,strict=1,if=talent.rake.enabled||buff.cat_form.up\nactions+=/cat_form,if=talent.rake.enabled\nactions+=/convoke_the_spirits,if=(buff.heart_of_the_wild.up||cooldown.heart_of_the_wild.remains>60-30*talent.cenarius_guidance.enabled||!talent.heart_of_the_wild.enabled)\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&talent.improved_sunfire.enabled\nactions+=/moonfire,cycle_targets=1,if=refreshable&time_to_die>12\nactions+=/starsurge,if=active_enemies<8\nactions+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>7&active_enemies<7\nactions+=/starfire,if=spell_targets.starfire>1||buff.heart_of_the_wild.up\nactions+=/wrath\n\nactions.cat+=/rake,if=buff.shadowmeld.up||buff.prowl.up||buff.sudden_ambush.up\nactions.cat+=/heart_of_the_wild,if=(cooldown.convoke_the_spirits.remains<40||!talent.convoke_the_spirits.enabled)||fight_remains<46\nactions.cat+=/rip,cycle_targets=1,if=((refreshable||energy>90&remains<=10)&(combo_points=5&time_to_die>remains+24||(remains+combo_points*4<time_to_die&remains+4+combo_points*4>time_to_die))||!ticking&combo_points>2+spell_targets.swipe_cat*2)\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>7&spell_targets.thrash_cat>2\nactions.cat+=/sunfire,cycle_targets=1,if=(refreshable&target.time_to_die>5)&!prev_gcd.1.cat_form&(active_enemies=1||talent.improved_sunfire.enabled)\nactions.cat+=/rake,cycle_targets=1,if=refreshable&time_to_die>10&spell_targets.swipe_cat<10\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50&(dot.rake.refreshable&spell_targets.thrash_cat>3&spell_targets.thrash_cat<7&talent.thrash.enabled)\nactions.cat+=/moonfire,cycle_targets=1,if=(refreshable&time_to_die>12&!ticking||(prev_gcd.1.sunfire&remains<duration*0.8&spell_targets.sunfire=1))&!prev_gcd.1.cat_form&spell_targets.swipe_cat<6\nactions.cat+=/sunfire,if=prev_gcd.1.moonfire&remains<duration*0.8\nactions.cat+=/starsurge,if=active_enemies=1||(active_enemies<8&!buff.cat_form.up)\nactions.cat+=/cat_form,if=!buff.cat_form.up&energy>50\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/ferocious_bite,cycle_targets=1,if=combo_points>3&target.time_to_die<3||combo_points=5&energy>=50\nactions.cat+=/thrash_cat,cycle_targets=1,if=refreshable&target.time_to_die>6&(spell_targets.thrash_cat>1||talent.liveliness.enabled)\nactions.cat+=/swipe_cat,if=active_enemies>3&combo_points<5&talent.improved_swipe.enabled\nactions.cat+=/sunfire,cycle_targets=1,if=refreshable&target.time_to_die>5&active_enemies<7&!talent.improved_sunfire.enabled\nactions.cat+=/pool_resource,for_next=1\nactions.cat+=/shred,if=energy>60&combo_points<5\n\n# On the tank\nactions.healing+=/rejuvenation,if=active_dot.rejuvenation<1\n# On an ally\nactions.healing+=/lifebloom,if=(active_dot.lifebloom<1)||(active_dot.lifebloom<2&buff.lifebloom.up&talent.undergrowth.enabled)\n# On yourself\nactions.healing+=/lifebloom,if=(active_dot.lifebloom<2&buff.lifebloom.down&talent.undergrowth.enabled)\n# Maintain Efflo\nactions.healing+=/efflorescence,if=buff.efflorescence.down\n# transform into tree\nactions.healing+=/swiftmend,if=(active_dot.regrowth+active_dot.wild_growth+active_dot.rejuvenation)>1&talent.reforestation.enabled&buff.reforestation.stack=3\n# Always wild growth after swiftmend\nactions.healing+=/wild_growth,if=prev.1.swiftmend",
},
["Subtlety"] = {
["builtIn"] = true,
["date"] = 20241026,
["spec"] = 261,
["desc"] = "2024-10-06: SimC updates, SnD out-of-combat only if refreshable; Gear-a-Rang out of stealth\n\n2024-09-22: Efficiency updates\n\n2024-09-03, 09-11: SimC updates\n\n2024-08-15, 22: SimC updates\n\n2024-07-28: The War Within",
["lists"] = {
["fill"] = {
{
["enabled"] = true,
["action"] = "arcane_torrent",
["description"] = "This list usually contains Cooldowns with neglectable impact that causes global cooldowns",
["criteria"] = "energy.deficit >= 15 + energy.regen",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "stealth",
["enabled"] = true,
},
{
["action"] = "kick",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_dance.up || buff.stealth.up || buff.vanish.up",
["var_name"] = "stealth",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.shuriken_storm",
["var_name"] = "targets",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_dance.up || ! buff.slice_and_dice.up || buff.darkest_night.up || variable.targets >= 8 & ! talent.replicating_shadows.enabled & talent.unseen_blade.enabled",
["var_name"] = "skip_rupture",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( dot.rupture.ticking || variable.skip_rupture ) & buff.slice_and_dice.up",
["var_name"] = "maintenance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_dance.up || ( cooldown.flagellation.remains < 40 & cooldown.flagellation.remains > 20 & talent.death_perception.enabled )",
["var_name"] = "secret",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.flagellation_buff.up & buff.shadow_dance.up ) || ! talent.shadow_blades.enabled & buff.symbols_of_death.up || boss & fight_remains < 20",
["var_name"] = "racial_sync",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points <= 1 || buff.darkest_night.up & combo_points >= 7 || effective_combo_points >= 6 & talent.unseen_blade.enabled",
["var_name"] = "shd_cp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cooldowns",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "blood_fury",
["description"] = "Racials",
["criteria"] = "variable.racial_sync",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync & buff.shadow_dance.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
["criteria"] = "cooldown.flagellation.remains <= 2 || boss & fight_remains <= 15",
["description"] = "Items (Trinkets)",
},
{
["enabled"] = true,
["action"] = "imperfect_ascendancy_serum",
["use_off_gcd"] = 1,
["criteria"] = "dot.rupture.ticking & buff.flagellation_buff.up",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "mad_queens_mandate",
["criteria"] = "( ! talent.lingering_darkness.enabled || buff.lingering_darkness.up || equipped.treacherous_transmitter ) & ( ! equipped.treacherous_transmitter || cooldown.treacherous_transmitter.remains > 20 ) || boss & fight_remains <= 15",
["name"] = "mad_queens_mandate",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.shadow_blades.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready & ! buff.shadow_blades.up & cooldown.shadow_blades.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.shadow_blades.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready & ! buff.shadow_blades.up & cooldown.shadow_blades.remains > 20 ) ) || ! variable.trinket_sync_slot )",
["slots"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cooldowns for Stealth",
["criteria"] = "! variable.stealth",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Finishing Rules",
["criteria"] = "! buff.darkest_night.up & effective_combo_points >= 6 || buff.darkest_night.up & combo_points = cp_max_spend",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Combo Point Builder",
["list_name"] = "build",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Filler, Spells used if you can use nothing else.",
["criteria"] = "! variable.stealth",
["list_name"] = "fill",
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "toggle.funnel",
["var_name"] = "priority_rotation",
["description"] = "Swap to priority rotation if the variable is enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_stat.any_dps & ( ! trinket.t2.has_stat.any_dps || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_stat.any_dps & ( ! trinket.t1.has_stat.any_dps || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.is.treacherous_transmitter",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.is.treacherous_transmitter",
},
{
["action"] = "stealth",
["enabled"] = true,
},
},
["finish"] = {
{
["enabled"] = true,
["criteria"] = "variable.secret",
["action"] = "secret_technique",
},
{
["enabled"] = true,
["action"] = "rupture",
["description"] = "Maintenance Finisher",
["criteria"] = "! variable.skip_rupture & ( ! dot.rupture.ticking || refreshable ) & target.time_to_die - remains > 6",
},
{
["enabled"] = true,
["criteria"] = "! variable.skip_rupture & ! variable.priority_rotation & target.time_to_die >= ( 2 * combo_points ) & refreshable & variable.targets >= 2",
["action"] = "rupture",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "black_powder",
["description"] = "Direct Damage Finisher",
["criteria"] = "! variable.priority_rotation & variable.maintenance & variable.targets >= 2 & ! buff.flawless_form.up & ! buff.darkest_night.up",
},
{
["enabled"] = true,
["criteria"] = "debuff.fazed.up",
["action"] = "dispatch",
},
{
["action"] = "eviscerate",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["action"] = "cold_blood",
["description"] = "Cooldowns",
["criteria"] = "cooldown.secret_technique.up & buff.shadow_dance.up & combo_points >= 6 & variable.secret",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || boss & fight_remains < 30 || buff.flagellation_buff.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( buff.symbols_of_death.remains <= 3 & variable.maintenance & ( buff.flagellation_buff.up || ! talent.flagellation.enabled || cooldown.flagellation.remains >= 30 - 15 * ! talent.death_perception.enabled & cooldown.secret_technique.remains <= 8 || ! talent.death_perception.enabled ) || boss & fight_remains <= 15 )",
["action"] = "symbols_of_death",
},
{
["enabled"] = true,
["criteria"] = "variable.maintenance & variable.shd_cp & buff.shadow_dance.up & ! buff.premeditation.up",
["action"] = "shadow_blades",
},
{
["enabled"] = true,
["criteria"] = "buff.shadow_dance.remains > 2 & ! buff.thistle_tea.up",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["criteria"] = "combo_points >= 5 || boss & fight_remains <= 25",
["action"] = "flagellation",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["action"] = "shadow_dance",
["description"] = "Shadow Dance, Vanish, Shadowmeld",
["criteria"] = "variable.shd_cp & variable.maintenance & cooldown.secret_technique.remains <= 24 & ( buff.symbols_of_death.remains >= 6 || buff.flagellation_persist.remains >= 6 ) || boss & boss & fight_remains <= 10",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & ! buff.subterfuge.up & effective_combo_points <= 3",
["action"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & combo_points.deficit >= 3",
["action"] = "shadowmeld",
},
},
["build"] = {
{
["enabled"] = true,
["action"] = "shadowstrike",
["cycle_targets"] = 1,
["description"] = "Combo Point Builder",
["criteria"] = "debuff.find_weakness.remains <= 2 & variable.targets = 2 & talent.unseen_blade.enabled || ! used_for_danse & talent.danse_macabre.enabled",
},
{
["enabled"] = true,
["criteria"] = "talent.deathstalkers_mark.enabled & ! buff.premeditation.up & variable.targets >= ( 2 + 3 * buff.shadow_dance.up ) || buff.clear_the_witnesses.up & ! buff.symbols_of_death.up || buff.flawless_form.up & variable.targets >= 3 & ! variable.stealth",
["action"] = "shuriken_storm",
},
{
["enabled"] = true,
["criteria"] = "buff.lingering_darkness.up || talent.deathstalkers_mark.enabled & cooldown.shadow_blades.remains >= 32 & variable.targets >= 2 || talent.unseen_blade.enabled & buff.symbols_of_death.up & variable.targets >= 4",
["action"] = "shuriken_tornado",
},
{
["action"] = "shadowstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit >= 3",
["action"] = "goremaws_bite",
},
{
["action"] = "gloomblade",
["enabled"] = true,
},
{
["action"] = "backstab",
["enabled"] = true,
},
},
},
["version"] = 20241026,
["warnings"] = "The import for 'default' required some automated changes.\nLine 5: Converted 'talent.replicating_shadows' to 'talent.replicating_shadows.enabled' (1x).\nLine 5: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 7: Converted 'talent.death_perception' to 'talent.death_perception.enabled' (1x).\nLine 8: Converted 'talent.shadow_blades' to 'talent.shadow_blades.enabled' (1x).\nLine 9: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 17: Converted 'talent.lingering_darkness' to 'talent.lingering_darkness.enabled' (1x).\nLine 17: Converted 'trinket.treacherous_transmitter.cooldown.remains' to 'cooldown.treacherous_transmitter.remains'.\nLine 18: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 18: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 19: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 19: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 4: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 6: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 3: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 3: Converted 'talent.death_perception' to 'talent.death_perception.enabled' (1x).\nLine 3: Converted 'talent.death_perception' to 'talent.death_perception.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 1: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 1: Converted 'talent.danse_macabre' to 'talent.danse_macabre.enabled' (1x).\nLine 2: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 3: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 3: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\n\nImported 7 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/apply_poison\n# Swap to priority rotation if the variable is enabled\nactions.precombat+=/variable,name=priority_rotation,value=toggle.funnel\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_stat.any_dps&(!trinket.2.has_stat.any_dps||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_stat.any_dps&(!trinket.1.has_stat.any_dps||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.is.treacherous_transmitter\nactions.precombat+=/stealth\n\n\nactions+=/stealth\nactions+=/kick\nactions+=/variable,name=stealth,value=buff.shadow_dance.up||buff.stealth.up||buff.vanish.up\nactions+=/variable,name=targets,value=spell_targets.shuriken_storm\nactions+=/variable,name=skip_rupture,value=buff.shadow_dance.up||!buff.slice_and_dice.up||buff.darkest_night.up||variable.targets>=8&!talent.replicating_shadows&talent.unseen_blade\nactions+=/variable,name=maintenance,value=(dot.rupture.ticking||variable.skip_rupture)&buff.slice_and_dice.up\nactions+=/variable,name=secret,value=buff.shadow_dance.up||(cooldown.flagellation.remains<40&cooldown.flagellation.remains>20&talent.death_perception)\nactions+=/variable,name=racial_sync,value=(buff.flagellation_buff.up&buff.shadow_dance.up)||!talent.shadow_blades&buff.symbols_of_death.up||boss&fight_remains<20\nactions+=/variable,name=shd_cp,value=combo_points<=1||buff.darkest_night.up&combo_points>=7||effective_combo_points>=6&talent.unseen_blade\n# Cooldowns\nactions+=/call_action_list,name=cds\n# Racials\nactions+=/blood_fury,if=variable.racial_sync\nactions+=/berserking,if=variable.racial_sync\nactions+=/fireblood,if=variable.racial_sync&buff.shadow_dance.up\nactions+=/ancestral_call,if=variable.racial_sync\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.shadow_dance.up\n# Items (Trinkets)\nactions+=/use_item,name=treacherous_transmitter,if=cooldown.flagellation.remains<=2||boss&fight_remains<=15\n## actions+=/do_treacherous_transmitter_task,if=buff.shadow_dance.up||boss&fight_remains<=15\nactions+=/use_item,name=imperfect_ascendancy_serum,use_off_gcd=1,if=dot.rupture.ticking&buff.flagellation_buff.up\nactions+=/use_item,name=mad_queens_mandate,if=(!talent.lingering_darkness||buff.lingering_darkness.up||equipped.treacherous_transmitter)&(!equipped.treacherous_transmitter||trinket.treacherous_transmitter.cooldown.remains>20)||boss&fight_remains<=15\nactions+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.shadow_blades.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready&!buff.shadow_blades.up&cooldown.shadow_blades.remains>20))||!variable.trinket_sync_slot)\nactions+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.shadow_blades.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready&!buff.shadow_blades.up&cooldown.shadow_blades.remains>20))||!variable.trinket_sync_slot)\n\n# Cooldowns for Stealth\nactions+=/call_action_list,name=stealth_cds,if=!variable.stealth\n# Finishing Rules\nactions+=/call_action_list,name=finish,if=!buff.darkest_night.up&effective_combo_points>=6||buff.darkest_night.up&combo_points=cp_max_spend\n# Combo Point Builder\nactions+=/call_action_list,name=build\n# Filler, Spells used if you can use nothing else.\nactions+=/call_action_list,name=fill,if=!variable.stealth\n\n# Combo Point Builder\nactions.build+=/shadowstrike,cycle_targets=1,if=debuff.find_weakness.remains<=2&variable.targets=2&talent.unseen_blade||!used_for_danse&talent.danse_macabre\nactions.build+=/shuriken_storm,if=talent.deathstalkers_mark&!buff.premeditation.up&variable.targets>=(2+3*buff.shadow_dance.up)||buff.clear_the_witnesses.up&!buff.symbols_of_death.up||buff.flawless_form.up&variable.targets>=3&!variable.stealth\nactions.build+=/shuriken_tornado,if=buff.lingering_darkness.up||talent.deathstalkers_mark&cooldown.shadow_blades.remains>=32&variable.targets>=2||talent.unseen_blade&buff.symbols_of_death.up&variable.targets>=4\nactions.build+=/shadowstrike\nactions.build+=/goremaws_bite,if=combo_points.deficit>=3\nactions.build+=/gloomblade\nactions.build+=/backstab\n\n# Cooldowns\nactions.cds+=/cold_blood,if=cooldown.secret_technique.up&buff.shadow_dance.up&combo_points>=6&variable.secret\nactions.cds+=/potion,if=buff.bloodlust.up||boss&fight_remains<30||buff.flagellation_buff.up\nactions.cds+=/symbols_of_death,if=(buff.symbols_of_death.remains<=3&variable.maintenance&(buff.flagellation_buff.up||!talent.flagellation||cooldown.flagellation.remains>=30-15*!talent.death_perception&cooldown.secret_technique.remains<=8||!talent.death_perception)||boss&fight_remains<=15)\nactions.cds+=/shadow_blades,if=variable.maintenance&variable.shd_cp&buff.shadow_dance.up&!buff.premeditation.up\nactions.cds+=/thistle_tea,if=buff.shadow_dance.remains>2&!buff.thistle_tea.up\nactions.cds+=/flagellation,if=combo_points>=5||boss&fight_remains<=25\n\n# This list usually contains Cooldowns with neglectable impact that causes global cooldowns\nactions.fill+=/arcane_torrent,if=energy.deficit>=15+energy.regen\nactions.fill+=/arcane_pulse\nactions.fill+=/lights_judgment\nactions.fill+=/bag_of_tricks\n\nactions.finish+=/secret_technique,if=variable.secret\n# Maintenance Finisher\nactions.finish+=/rupture,if=!variable.skip_rupture&(!dot.rupture.ticking||refreshable)&target.time_to_die-remains>6\nactions.finish+=/rupture,cycle_targets=1,if=!variable.skip_rupture&!variable.priority_rotation&&target.time_to_die>=(2*combo_points)&refreshable&variable.targets>=2\n# Direct Damage Finisher\nactions.finish+=/black_powder,if=!variable.priority_rotation&variable.maintenance&variable.targets>=2&!buff.flawless_form.up&!buff.darkest_night.up\nactions.finish+=/coup_de_grace,if=debuff.fazed.up\nactions.finish+=/eviscerate\n\n# Shadow Dance, Vanish, Shadowmeld\nactions.stealth_cds+=/shadow_dance,if=variable.shd_cp&variable.maintenance&cooldown.secret_technique.remains<=24&(buff.symbols_of_death.remains>=6||buff.flagellation_persist.remains>=6)||boss&boss&fight_remains<=10\nactions.stealth_cds+=/vanish,if=energy>=40&!buff.subterfuge.up&effective_combo_points<=3\nactions.stealth_cds+=/shadowmeld,if=energy>=40&combo_points.deficit>=3",
},
["Protection Warrior"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240926,
["spec"] = 73,
["desc"] = "2024-09-26: Spell Block added\n\n2024-09-24: Mitigations and Impeding Victory Fixed\n\n2024-08-15, 09-09: SimC priority updates\n\n2024-07-24: The War Within",
["profile"] = "actions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/battle_shout\n\nactions+=/pummel\nactions+=/charge,if=time=0||movement.distance>8\nactions+=/use_items\nactions+=/avatar,if=buff.thunder_blast.down||buff.thunder_blast.stack<=2\nactions+=/spell_block,use_off_gcd=1,if=tanking&incoming_magic_damage_5s>spell_block_damage_taken&health.pct<=spell_block_health_pct&!(buff.spell_reflection_defense.up)\nactions+=/shield_wall,use_off_gcd=1,if=tanking&incoming_damage_5s>shield_wall_damage_taken&health.pct<=shield_wall_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\nactions+=/last_stand,use_off_gcd=1,if=tanking&incoming_damage_5s>last_stand_damage_taken&health.pct<=last_stand_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/rallying_cry,if=tanking&incoming_damage_5s>rallying_cry_damage_taken&health.pct<=rallying_cry_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/victory_rush,if=health.pct<victory_rush_health_pct&talent.impending_victory.disabled\nactions+=/impending_victory,if=health.pct<victory_rush_health_pct&talent.impending_victory.enabled\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/thunder_blast,if=spell_targets.thunder_blast>=2&buff.thunder_blast.stack=2\nactions+=/demolish,if=buff.colossal_might.stack>=3\nactions+=/thunderous_roar\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.remains<=10\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.thunder_clap>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_blast,if=dot.rend.remains<=1\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1\nactions.aoe+=/thunder_blast,if=buff.violent_outburst.up&spell_targets.thunderclap>=2&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&spell_targets.thunderclap>=4&buff.avatar.up&talent.unstoppable_force.enabled&talent.crashing_thunder.enabled||buff.violent_outburst.up&spell_targets.thunderclap>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&spell_targets.revenge>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&spell_targets.thunderclap<=4&talent.crashing_thunder.enabled\nactions.aoe+=/thunder_blast\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/thunder_blast,if=(buff.thunder_blast.stack=2&buff.burst_of_power.stack<=1&buff.avatar.up&talent.unstoppable_force.enabled)\nactions.generic+=/shield_slam,if=(buff.burst_of_power.stack=2&buff.thunder_blast.stack<=1||buff.violent_outburst.up)||rage<=70&talent.demolish.enabled\nactions.generic+=/execute,if=rage>=70||(rage>=40&cooldown.shield_slam.remains&talent.demolish.enabled||rage>=50&cooldown.shield_slam.remains)||buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/shield_slam\nactions.generic+=/thunder_blast,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute\nactions.generic+=/revenge\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20240926,
["warnings"] = "Imported 4 action lists.\n",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap >= 2 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap >= 4 & buff.avatar.up & talent.unstoppable_force.enabled & talent.crashing_thunder.enabled || buff.violent_outburst.up & spell_targets.thunderclap > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & spell_targets.revenge >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & spell_targets.thunderclap <= 4 & talent.crashing_thunder.enabled",
["action"] = "shield_slam",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["enabled"] = true,
["criteria"] = "( buff.thunder_blast.stack = 2 & buff.burst_of_power.stack <= 1 & buff.avatar.up & talent.unstoppable_force.enabled )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.burst_of_power.stack = 2 & buff.thunder_blast.stack <= 1 || buff.violent_outburst.up ) || rage <= 70 & talent.demolish.enabled",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 || ( rage >= 40 & cooldown.shield_slam.remains & talent.demolish.enabled || rage >= 50 & cooldown.shield_slam.remains ) || buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "revenge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time = 0 || movement.distance > 8",
["action"] = "charge",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.thunder_blast.down || buff.thunder_blast.stack <= 2",
["action"] = "avatar",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "spell_block",
["criteria"] = "tanking & incoming_magic_damage_5s > spell_block_damage_taken & health.pct <= spell_block_health_pct & ! ( buff.spell_reflection_defense.up )",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "shield_wall",
["criteria"] = "tanking & incoming_damage_5s > shield_wall_damage_taken & health.pct <= shield_wall_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
["action"] = "potion",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
["action"] = "ignore_pain",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "last_stand",
["criteria"] = "tanking & incoming_damage_5s > last_stand_damage_taken & health.pct <= last_stand_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > rallying_cry_damage_taken & health.pct <= rallying_cry_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["action"] = "rallying_cry",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.disabled",
["action"] = "victory_rush",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.enabled",
["action"] = "impending_victory",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.thunder_blast >= 2 & buff.thunder_blast.stack = 2",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack >= 3",
["action"] = "demolish",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "shield_charge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.remains <= 10",
["action"] = "shield_block",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.thunder_clap >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
},
},
["basedOn"] = "Protection Warrior",
["author"] = "SimulationCraft",
},
["Arms"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20241021,
["author"] = "SimulationCraft",
["desc"] = "2024-10-21: SimC update\n\n2024-09-03, 09-05, 09-08: SimC update\n\n2024-08-25: Updates based on Icy-Veins\n\n2024-08-15: Sim update\n\n2024-07-23: The War Within",
["lists"] = {
["slayer_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= 5 || debuff.colossus_smash.up",
["action"] = "avatar",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3 || buff.juggernaut.remains <= gcd.max * 3 || buff.sudden_death.stack = 2",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains >= gcd.max * 4 || buff.colossus_smash.remains >= gcd.max * 4",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max * 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "buff.martial_prowess.down",
["action"] = "cleave",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["colossus_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["enabled"] = true,
["criteria"] = "active_enemies = 1",
["action"] = "avatar",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "demolish",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "charges = 2",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max * 5",
["action"] = "rend",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["colossus_aoe"] = {
{
["enabled"] = true,
["criteria"] = "buff.collateral_damage.up & buff.merciless_bonegrinder.up",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled || talent.merciless_bonegrinder.enabled",
["action"] = "bladestorm",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "execute",
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
["slayer_aoe"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & buff.imminent_demise.stack < 3",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.executioners_precision.stack < 2",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.executioners_precision.stack = 2",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["colossus_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 & ! dot.ravager.remains & ( buff.lethal_blows.stack = 2 || ! set_bonus.tww1_4pc )",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage >= 40",
["action"] = "execute",
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
},
["slayer_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= 5 || debuff.colossus_smash.up",
["action"] = "avatar",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 & debuff.colossus_smash.remains > 4 || debuff.executioners_precision.stack = 2 & cooldown.colossus_smash.remains > 15 || ! talent.executioners_precision.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "rage < 85",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains < 2 || ( debuff.executioners_precision.stack = 2 & buff.lethal_blows.stack = 2 )",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up & rage < 80 & buff.martial_prowess.stack < 2",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.executioners_precision.enabled",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 8",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || boss & fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "cooldown.mortal_strike.remains > 1.5 & rage < 50",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 180 & buff.avatar.up || boss & target.time_to_die < 180 & variable.execute_phase & buff.avatar.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies > 2",
["list_name"] = "colossus_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & variable.execute_phase",
["list_name"] = "colossus_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "colossus_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled",
["list_name"] = "colossus_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies > 2",
["list_name"] = "slayer_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & variable.execute_phase",
["list_name"] = "slayer_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "slayer_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled",
["list_name"] = "slayer_st",
},
},
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1",
["var_name"] = "st_planning",
["description"] = "Variables",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies > 1",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
},
["slayer_sweep"] = {
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled || buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["trinkets"] = {
{
["enabled"] = true,
["description"] = "Trinkets",
["name"] = "treacherous_transmitter",
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.avatar.remains < 3",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
},
{
["enabled"] = true,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["action"] = "main_hand",
["slot"] = "main_hand",
},
},
["colossus_sweep"] = {
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & buff.sweeping_strikes.up",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.ready",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "action.overpower.charges = 2 & talent.dreadnaught.enabled || buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.down",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || debuff.colossus_smash.up & cooldown.avatar.remains >= 35",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness_warlords_torment.up || buff.sweeping_strikes.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "charges = 2 || buff.sweeping_strikes.up",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
},
["version"] = 20241021,
["warnings"] = "The import for 'colossus_aoe' required some automated changes.\nLine 9: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 9: Converted 'talent.merciless_bonegrinder' to 'talent.merciless_bonegrinder.enabled' (1x).\nLine 14: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\n\nThe import for 'slayer_aoe' required some automated changes.\nLine 17: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\n\nThe import for 'colossus_execute' required some automated changes.\nLine 2: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\n\nThe import for 'slayer_execute' required some automated changes.\nLine 2: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\nLine 9: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\nLine 15: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 14: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 15: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 16: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 17: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 18: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 19: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 20: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 10: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nThe import for 'slayer_sweep' required some automated changes.\nLine 11: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 13: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 18: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'colossus_sweep' required some automated changes.\nLine 9: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 20: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 21: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nImported 12 action lists.\n",
["spec"] = 71,
["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>8\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||boss&fight_remains<25\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/arcane_torrent,if=cooldown.mortal_strike.remains>1.5&rage<50\nactions+=/lights_judgment,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/bag_of_tricks,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/berserking,if=fight_remains>180&buff.avatar.up||boss&target.time_to_die<180&variable.execute_phase&buff.avatar.up||boss&fight_remains<20\nactions+=/blood_fury,if=debuff.colossus_smash.up\nactions+=/fireblood,if=debuff.colossus_smash.up\nactions+=/ancestral_call,if=debuff.colossus_smash.up\n## actions+=/invoke_external_buff,name=power_infusion,if=debuff.colossus_smash.up&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=colossus_aoe,strict=1,if=talent.demolish&active_enemies>2\nactions+=/run_action_list,name=colossus_execute,cycle_targets=1,strict=1,if=talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=colossus_sweep,strict=1,if=talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=colossus_st,strict=1,if=talent.demolish\nactions+=/run_action_list,name=slayer_aoe,strict=1,if=!talent.demolish&active_enemies>2\nactions+=/run_action_list,name=slayer_execute,cycle_targets=1,strict=1,if=!talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=slayer_sweep,strict=1,if=!talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=slayer_st,strict=1,if=!talent.demolish\n\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd\nactions.colossus_st+=/thunderous_roar\nactions.colossus_st+=/champions_spear\nactions.colossus_st+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.colossus_st+=/avatar,if=active_enemies=1\nactions.colossus_st+=/colossus_smash\nactions.colossus_st+=/warbreaker\nactions.colossus_st+=/mortal_strike\nactions.colossus_st+=/demolish\nactions.colossus_st+=/skullsplitter\nactions.colossus_st+=/overpower,if=charges=2\nactions.colossus_st+=/execute\nactions.colossus_st+=/overpower\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd*5\nactions.colossus_st+=/slam\n\nactions.colossus_execute+=/sweeping_strikes,if=active_enemies=2\nactions.colossus_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.colossus_execute+=/thunderous_roar\nactions.colossus_execute+=/champions_spear\nactions.colossus_execute+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.colossus_execute+=/avatar\nactions.colossus_execute+=/colossus_smash\nactions.colossus_execute+=/warbreaker\nactions.colossus_execute+=/demolish,if=debuff.colossus_smash.up\nactions.colossus_execute+=/mortal_strike,if=debuff.executioners_precision.stack=2&!dot.ravager.remains&(buff.lethal_blows.stack=2||!set_bonus.tww1_4pc)\nactions.colossus_execute+=/execute,if=rage>=40\nactions.colossus_execute+=/skullsplitter\nactions.colossus_execute+=/overpower\nactions.colossus_execute+=/bladestorm\nactions.colossus_execute+=/execute\nactions.colossus_execute+=/mortal_strike\n\nactions.colossus_sweep+=/sweeping_strikes\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=gcd&buff.sweeping_strikes.up\nactions.colossus_sweep+=/thunderous_roar\nactions.colossus_sweep+=/champions_spear\nactions.colossus_sweep+=/ravager,if=cooldown.colossus_smash.ready\nactions.colossus_sweep+=/avatar\nactions.colossus_sweep+=/colossus_smash\nactions.colossus_sweep+=/warbreaker\nactions.colossus_sweep+=/overpower,if=action.overpower.charges=2&talent.dreadnaught||buff.sweeping_strikes.up\nactions.colossus_sweep+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.colossus_sweep+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.colossus_sweep+=/demolish,if=buff.sweeping_strikes.up&debuff.colossus_smash.up\nactions.colossus_sweep+=/mortal_strike,if=buff.sweeping_strikes.down\nactions.colossus_sweep+=/demolish,if=buff.avatar.up||debuff.colossus_smash.up&cooldown.avatar.remains>=35\nactions.colossus_sweep+=/execute,if=buff.recklessness_warlords_torment.up||buff.sweeping_strikes.up\nactions.colossus_sweep+=/overpower,if=charges=2||buff.sweeping_strikes.up\nactions.colossus_sweep+=/execute\nactions.colossus_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=5\nactions.colossus_sweep+=/cleave,if=talent.fervor_of_battle\nactions.colossus_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.colossus_sweep+=/slam\n\nactions.colossus_aoe+=/cleave,if=buff.collateral_damage.up&buff.merciless_bonegrinder.up\nactions.colossus_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.colossus_aoe+=/thunderous_roar\nactions.colossus_aoe+=/avatar\nactions.colossus_aoe+=/ravager\nactions.colossus_aoe+=/sweeping_strikes\nactions.colossus_aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/warbreaker\nactions.colossus_aoe+=/bladestorm,if=talent.unhinged||talent.merciless_bonegrinder\nactions.colossus_aoe+=/champions_spear\nactions.colossus_aoe+=/colossus_smash\nactions.colossus_aoe+=/cleave\nactions.colossus_aoe+=/demolish,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/bladestorm,if=talent.unhinged\nactions.colossus_aoe+=/overpower\nactions.colossus_aoe+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/overpower,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/execute,if=buff.sweeping_strikes.up\nactions.colossus_aoe+=/thunder_clap\nactions.colossus_aoe+=/mortal_strike\nactions.colossus_aoe+=/execute\nactions.colossus_aoe+=/bladestorm\nactions.colossus_aoe+=/whirlwind\n\nactions.slayer_st+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_st+=/thunderous_roar\nactions.slayer_st+=/champions_spear\nactions.slayer_st+=/avatar,if=cooldown.colossus_smash.remains<=5||debuff.colossus_smash.up\nactions.slayer_st+=/colossus_smash\nactions.slayer_st+=/warbreaker\nactions.slayer_st+=/execute,if=debuff.marked_for_execution.stack=3||buff.juggernaut.remains<=gcd*3||buff.sudden_death.stack=2\nactions.slayer_st+=/bladestorm,if=cooldown.colossus_smash.remains>=gcd*4||buff.colossus_smash.remains>=gcd*4\nactions.slayer_st+=/overpower,if=buff.opportunist.up\nactions.slayer_st+=/mortal_strike\nactions.slayer_st+=/skullsplitter\nactions.slayer_st+=/overpower\nactions.slayer_st+=/rend,if=dot.rend.remains<=gcd*5\nactions.slayer_st+=/cleave,if=buff.martial_prowess.down\nactions.slayer_st+=/slam\nactions.slayer_st+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_execute+=/sweeping_strikes,if=active_enemies=2\nactions.slayer_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.slayer_execute+=/thunderous_roar\nactions.slayer_execute+=/champions_spear\nactions.slayer_execute+=/avatar,if=cooldown.colossus_smash.remains<=5||debuff.colossus_smash.up\nactions.slayer_execute+=/warbreaker\nactions.slayer_execute+=/colossus_smash\nactions.slayer_execute+=/execute,if=buff.juggernaut.remains<=gcd\nactions.slayer_execute+=/bladestorm,if=debuff.executioners_precision.stack=2&debuff.colossus_smash.remains>4||debuff.executioners_precision.stack=2&cooldown.colossus_smash.remains>15||!talent.executioners_precision\nactions.slayer_execute+=/skullsplitter,if=rage<85\nactions.slayer_execute+=/mortal_strike,if=dot.rend.remains<2||(debuff.executioners_precision.stack=2&buff.lethal_blows.stack=2)\nactions.slayer_execute+=/overpower,if=buff.opportunist.up&rage<80&buff.martial_prowess.stack<2\nactions.slayer_execute+=/execute\nactions.slayer_execute+=/overpower\nactions.slayer_execute+=/mortal_strike,if=!talent.executioners_precision\nactions.slayer_execute+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_sweep+=/thunderous_roar\nactions.slayer_sweep+=/sweeping_strikes\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_sweep+=/champions_spear\nactions.slayer_sweep+=/avatar\nactions.slayer_sweep+=/colossus_smash\nactions.slayer_sweep+=/warbreaker\nactions.slayer_sweep+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_sweep+=/execute,if=debuff.marked_for_execution.stack=3\nactions.slayer_sweep+=/bladestorm\nactions.slayer_sweep+=/overpower,if=talent.dreadnaught||buff.opportunist.up\nactions.slayer_sweep+=/mortal_strike\nactions.slayer_sweep+=/cleave,if=talent.fervor_of_battle\nactions.slayer_sweep+=/execute\nactions.slayer_sweep+=/overpower\nactions.slayer_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=5\nactions.slayer_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.slayer_sweep+=/slam\nactions.slayer_sweep+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.slayer_aoe+=/sweeping_strikes\nactions.slayer_aoe+=/thunderous_roar\nactions.slayer_aoe+=/avatar\nactions.slayer_aoe+=/champions_spear\nactions.slayer_aoe+=/warbreaker\nactions.slayer_aoe+=/colossus_smash\nactions.slayer_aoe+=/cleave\nactions.slayer_aoe+=/overpower,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/execute,if=buff.sudden_death.up&buff.imminent_demise.stack<3\nactions.slayer_aoe+=/bladestorm\nactions.slayer_aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/execute,if=buff.sweeping_strikes.up&debuff.executioners_precision.stack<2\nactions.slayer_aoe+=/mortal_strike,if=buff.sweeping_strikes.up&debuff.executioners_precision.stack=2\nactions.slayer_aoe+=/execute,if=debuff.marked_for_execution.up\nactions.slayer_aoe+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/overpower,if=talent.dreadnaught\nactions.slayer_aoe+=/thunder_clap\nactions.slayer_aoe+=/overpower\nactions.slayer_aoe+=/execute\nactions.slayer_aoe+=/mortal_strike\nactions.slayer_aoe+=/whirlwind\nactions.slayer_aoe+=/skullsplitter\nactions.slayer_aoe+=/slam\nactions.slayer_aoe+=/storm_bolt,if=buff.bladestorm.up\n\n# Trinkets\n## actions.trinkets+=/do_treacherous_transmitter_task\nactions.trinkets+=/use_item,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.avatar.remains<3\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1\nactions.variables+=/variable,name=adds_remain,value=active_enemies>1\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20",
},
["Balance"] = {
["source"] = "https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt",
["builtIn"] = true,
["date"] = 20250125,
["author"] = "SimC",
["desc"] = "2024-01-25: SimC update\n\n2024-12-22: Spymasters improvement\n\n2024-11-05: SimC update (Sunfire)\n\n2024-10-29: Fix AOE Eclipse\n\n2024-10-26: SimC update, adjustments for leveling\n\n2024-10-23: SimC update\n\n2024-10-22: 11.0.5\n\n2024-10-06, 10-11, 10-21: SimC update\n\n2024-09-28, 09-29: SimC update\n\n2024-09-01, 09-04, 09-08, 09-10, 09-15, 09-21: SimC update\n\n2024-08-11: Mark of the Wild\n\n2024-07-23: The War Within",
["lists"] = {
["default"] = {
{
["action"] = "solar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time < 2 & eclipse.lunar_in_1 & ( prev.1.wrath + prev.2.wrath + prev.3.wrath ) < 2",
["action"] = "wrath",
["description"] = "[Edited] Trigger Lunar Eclipse if we failed to precast Wrath x2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "6 / spell_haste + talent.natures_balance.enabled + talent.orbit_breaker.enabled * dot.moonfire.ticking * ( buff.orbit_breaker.stack > ( 27 - 2 * buff.solstice.up ) ) * 24",
["var_name"] = "passive_asp",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.ca_inc.remains <? cooldown.force_of_nature.remains",
["var_name"] = "ca_effective_cd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "boss & fight_remains < cooldown.ca_inc.duration + variable.ca_effective_cd",
["var_name"] = "last_ca_inc",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( boss & fight_remains < ( 15 + 5 * talent.incarnation_chosen_of_elune.enabled ) * ( 1 - talent.whirling_stars.enabled * 0.2 ) || fight_remains > 10 & ( ! hero_tree.keeper_of_the_grove || ( ( ! talent.harmony_of_the_grove.enabled || buff.harmony_of_the_grove.up ) & cooldown.convoke_the_spirits.remains < 60 & ( ! talent.new_moon.enabled || cooldown.new_moon.charges_fractional >= 2 ) ) ) & ( ! talent.whirling_stars.enabled || ! talent.convoke_the_spirits.enabled || talent.whirling_stars.enabled & cooldown.convoke_the_spirits.remains < gcd.max * 2 || cooldown.convoke_the_spirits.remains > cooldown.ca_inc.full_recharge_time ) ) & cooldown.ca_inc.ready & ! buff.ca_inc.up",
["var_name"] = "cd_condition",
},
{
["enabled"] = true,
["name"] = "aberrant_spellforge",
["action"] = "aberrant_spellforge",
},
{
["enabled"] = true,
["name"] = "spymasters_web",
["action"] = "spymasters_web",
["criteria"] = "variable.cd_condition & ( buff.spymasters_report.stack > 29 || boss & fight_remains < cooldown.ca_inc.duration ) || boss & fight_remains < 20",
},
{
["enabled"] = true,
["name"] = "imperfect_ascendancy_serum",
["action"] = "imperfect_ascendancy_serum",
["criteria"] = "dot.sunfire.remains > 4 & ( dot.moonfire.remains > 4 || talent.treants_of_the_moon.enabled & ( cooldown.force_of_nature.remains < 3 || buff.harmony_of_the_grove.up ) & variable.ca_effective_cd < 1 || boss & fight_remains < 20 || fight_remains < variable.ca_effective_cd & ( buff.harmony_of_the_grove.up || cooldown.convoke_the_spirits.ready ) ) & buff.spymasters_report.stack <= 29",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
["criteria"] = "( ( cooldown.force_of_nature.remains < 3 & ( trinket.t1.is.spymasters_web || trinket.t2.is.spymasters_web ) & buff.spymasters_report.stack >= 29 ) || ( cooldown.convoke_the_spirits.remains < 2 & cooldown.ca_inc.ready & cooldown.force_of_nature.remains < 3 & buff.spymasters_report.stack <= 29 || fight_remains < 20 || fight_remains < variable.ca_effective_cd & ( buff.harmony_of_the_grove.up || cooldown.convoke_the_spirits.ready ) ) )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.no_cd_talent || fight_remains < variable.ca_effective_cd & ( buff.harmony_of_the_grove.up || cooldown.convoke_the_spirits.ready ) || ( ( buff.spymasters_report.stack + variable.ca_effective_cd / 6 ) > 29 || boss & fight_remains < cooldown.ca_inc.duration + variable.ca_effective_cd ) & variable.ca_effective_cd > 20 || variable.on_use_trinket = 0",
["var_name"] = "generic_trinket_condition",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.is.spymasters_web & ! trinket.t1.is.imperfect_ascendancy_serum & ! trinket.t1.is.treacherous_transmitter & ( variable.on_use_trinket != 1 & trinket.t2.cooldown.remains > 20 || boss & fight_remains < ( 20 + 20 * ( trinket.t2.cooldown.remains < 25 ) ) || variable.generic_trinket_condition )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.is.spymasters_web & ! trinket.t2.is.imperfect_ascendancy_serum & ! trinket.t2.is.treacherous_transmitter & ( variable.on_use_trinket != 2 & trinket.t1.cooldown.remains > 20 || boss & fight_remains < ( 20 + 20 * ( trinket.t1.cooldown.remains < 25 ) ) || variable.generic_trinket_condition )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.no_cd_talent || boss & fight_remains < 15",
["action"] = "berserking",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.eclipse_lunar.up || buff.eclipse_solar.up",
["var_name"] = "eclipse",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.eclipse_lunar.remains <? buff.eclipse_solar.remains",
["var_name"] = "eclipse_remains",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.lunar_calling.enabled || spell_targets.starfire > 2 - ( talent.umbral_intensity.rank + talent.soul_of_the_forest.enabled > 1 )",
["var_name"] = "enter_lunar",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.balance_of_all_things_arcane.stack + buff.balance_of_all_things_nature.stack",
["var_name"] = "boat_stacks",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled || ! talent.lunar_calling.enabled & variable.eclipse_remains >= 7 & cooldown.ca_inc.remains > 20",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets > 1",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "st",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["action"] = "moonkin_form",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.celestial_alignment.enabled & ! talent.incarnation_chosen_of_elune.enabled || druid.no_cds",
["var_name"] = "no_cd_talent",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "( trinket.t1.has_proc & trinket.t1.cooldown.duration || trinket.t1.is.spymasters_web || trinket.t1.is.signet_of_the_priory ) & ! trinket.t1.is.arakara_sacbrood",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "( ( trinket.t2.has_proc & trinket.t2.cooldown.duration || trinket.t2.is.spymasters_web || trinket.t2.is.signet_of_the_priory ) * 2 & ! trinket.t2.is.arakara_sacbrood )",
["var_name"] = "on_use_trinket",
},
{
["enabled"] = true,
["criteria"] = "hero_tree.keeper_of_the_grove & ! talent.stellar_flare.enabled & action.regrowth.time_since < 10 & active_dot.regrowth = 0",
["action"] = "regrowth",
},
{
["enabled"] = true,
["criteria"] = "! prev.1.wrath",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "prev.1.wrath & ! ( prev.2.wrath || prev.3.wrath || prev.4.wrath )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! talent.stellar_flare.enabled & hero_tree.elunes_chosen",
["action"] = "starfire",
},
{
["action"] = "stellar_flare",
["enabled"] = true,
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & variable.eclipse & variable.eclipse_remains < cast_time & ! variable.cd_condition",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & variable.eclipse & variable.eclipse_remains < cast_time & ! variable.cd_condition",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit <= variable.passive_asp + 6",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 & ( ! talent.treants_of_the_moon.enabled || spell_targets - active_dot.moonfire_dmg > 6 || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up ) & ! boss",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 - ( spell_targets / 2 )",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains ) > 6 & ( ! talent.treants_of_the_moon.enabled || spell_targets - active_dot.moonfire_dmg > 6 || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up ) & boss",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & ( ! variable.eclipse || variable.eclipse_remains < cast_time )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & ( ! variable.eclipse || variable.eclipse_remains < cast_time )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains - target.unit > 7 + spell_targets ) & spell_targets < ( 11 - talent.umbral_intensity.rank - ( 2 * talent.astral_smolder.enabled ) - talent.lunar_calling.enabled )",
["action"] = "stellar_flare",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.power_of_the_dream.enabled & talent.early_spring.enabled & talent.orbital_strike.enabled ) || variable.eclipse_remains >= 3",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "cooldown.ca_inc.remains < gcd.max & ( ! talent.natures_grace.enabled || ! variable.eclipse || variable.eclipse_remains > 6 ) || variable.eclipse_remains >= 3 & cooldown.ca_inc.remains > 10 + 15 * talent.control_of_the_dream.enabled & ( fight_remains > action_cooldown + 5 || cooldown.ca_inc.remains > fight_remains )",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "variable.eclipse",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "pre_cd",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "incarnation",
},
{
["enabled"] = true,
["criteria"] = "! talent.lunar_calling.enabled & buff.eclipse_solar.remains < 7 || talent.lunar_calling.enabled",
["action"] = "warrior_of_elune",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.lunar_calling.enabled & spell_targets.starfire = 1 ) & ( buff.eclipse_solar.up & buff.eclipse_solar.remains < action.starfire.cast_time || eclipse.in_none )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up || buff.touch_the_cosmos_starfall.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up",
["action"] = "starsurge",
},
{
["action"] = "starfall",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ! buff.dreamstate.up & ! buff.umbral_embrace.up & spell_targets.starfire < 7 || spell_targets.starfire = 1 ) & ( boss & fight_remains < 5 || ( buff.ca_inc.up || cooldown.ca_inc.remains > 40 ) & ( ! hero_tree.keeper_of_the_grove || buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 15 ) )",
["action"] = "convoke_the_spirits",
},
{
["action"] = "new_moon",
["enabled"] = true,
},
{
["action"] = "half_moon",
["enabled"] = true,
},
{
["action"] = "full_moon",
["enabled"] = true,
},
{
["action"] = "wild_mushroom",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! hero_tree.keeper_of_the_grove",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled || buff.eclipse_lunar.up & spell_targets.starfire > 1",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & variable.eclipse & variable.eclipse_remains < cast_time & ! variable.cd_condition",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & variable.eclipse & variable.eclipse_remains < cast_time & ! variable.cd_condition",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "remains < 3 || refreshable & ( hero_tree.keeper_of_the_grove & cooldown.force_of_nature.ready || ! hero_tree.keeper_of_the_grove & variable.cd_condition )",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & remains < 3 & ( ! talent.treants_of_the_moon.enabled || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up )",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "pre_cd",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "celestial_alignment",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "incarnation",
},
{
["enabled"] = true,
["criteria"] = "variable.enter_lunar & ( ! variable.eclipse || variable.eclipse_remains < cast_time )",
["action"] = "wrath",
},
{
["enabled"] = true,
["criteria"] = "! variable.enter_lunar & ( ! variable.eclipse || variable.eclipse_remains < cast_time )",
["action"] = "starfire",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition & astral_power.deficit > variable.passive_asp + action.force_of_nature.energize_amount",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "cooldown.ca_inc.remains < gcd.max & ( ! talent.convoke_the_spirits.enabled || cooldown.convoke_the_spirits.remains < gcd.max * 3 || cooldown.convoke_the_spirits.remains > cooldown.ca_inc.full_recharge_time || boss & fight_remains < cooldown.convoke_the_spirits.remains + 3 ) || cooldown.ca_inc.full_recharge_time + 5 + 15 * talent.control_of_the_dream.enabled > action_cooldown & ( ! talent.convoke_the_spirits.enabled || cooldown.convoke_the_spirits.remains + 10 + 15 * talent.control_of_the_dream.enabled > action_cooldown || boss & fight_remains < cooldown.convoke_the_spirits.remains + cooldown.convoke_the_spirits.duration + 5 ) & ( fight_remains > action_cooldown + 5 || boss & fight_remains < cooldown.ca_inc.remains + 7 ) || talent.whirling_stars.enabled & talent.convoke_the_spirits.enabled & cooldown.convoke_the_spirits.remains > cooldown.force_of_nature.duration - 10 & boss & fight_remains > cooldown.convoke_the_spirits.remains + 6",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "5 + variable.passive_asp < astral_power.deficit",
["action"] = "fury_of_elune",
},
{
["enabled"] = true,
["criteria"] = "talent.starlord.enabled & buff.starlord.stack < 3",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "sunfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( ! talent.treants_of_the_moon.enabled || cooldown.force_of_nature.remains > 3 & ! buff.harmony_of_the_grove.up )",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( target.time_to_die - remains - target.unit > 7 + spell_targets )",
["action"] = "stellar_flare",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "boss & fight_remains < 5 || ( buff.ca_inc.up || cooldown.ca_inc.remains > 40 ) & ( ! hero_tree.keeper_of_the_grove || buff.harmony_of_the_grove.up || cooldown.force_of_nature.remains > 15 )",
["var_name"] = "convoke_condition",
},
{
["enabled"] = true,
["criteria"] = "cooldown.convoke_the_spirits.remains < gcd.max * 2 & variable.convoke_condition",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "variable.convoke_condition",
["action"] = "convoke_the_spirits",
},
{
["enabled"] = true,
["criteria"] = "buff.starlord.remains > 4 & variable.boat_stacks >= 3 || fight_remains < 4",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount || fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "new_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) || fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "half_moon",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit > variable.passive_asp + energize_amount & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) || fight_remains < 20 || cooldown.ca_inc.remains > 15",
["action"] = "full_moon",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_weft.up || buff.touch_the_cosmos_starsurge.up",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "buff.starweavers_warp.up || buff.touch_the_cosmos_starfall.up",
["action"] = "starfall",
},
{
["enabled"] = true,
["criteria"] = "astral_power.deficit < variable.passive_asp + action.wrath.energize_amount + ( action.starfire.energize_amount + variable.passive_asp ) * ( buff.eclipse_solar.remains < ( gcd.max * 3 ) )",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "! hero_tree.keeper_of_the_grove",
["action"] = "force_of_nature",
},
{
["enabled"] = true,
["criteria"] = "talent.lunar_calling.enabled",
["action"] = "starfire",
},
{
["action"] = "wrath",
["enabled"] = true,
},
},
["pre_cd"] = {
{
["enabled"] = true,
["name"] = "spymasters_web",
["action"] = "spymasters_web",
["criteria"] = "variable.cd_condition & ( buff.spymasters_report.stack > 29 || boss & fight_remains < cooldown.ca_inc.duration )",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_condition",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t1.is.spymasters_web & ! trinket.t1.is.imperfect_ascendancy_serum & ! trinket.t1.is.treacherous_transmitter & ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & variable.cd_condition",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! trinket.t2.is.spymasters_web & ! trinket.t2.is.imperfect_ascendancy_serum & ! trinket.t2.is.treacherous_transmitter & variable.on_use_trinket = 2 & variable.cd_condition",
["action"] = "trinket2",
["slot"] = "trinket2",
},
},
},
["version"] = 20250125,
["warnings"] = "The import for 'default' required some automated changes.\nLine 3: Converted 'talent.natures_balance' to 'talent.natures_balance.enabled' (1x).\nLine 3: Converted 'talent.orbit_breaker' to 'talent.orbit_breaker.enabled' (1x).\nLine 3: Converted operations in '6%spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*24' to '6/spell_haste+talent.natures_balance.enabled+talent.orbit_breaker.enabled*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*24'.\nLine 6: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 6: Converted 'talent.whirling_stars' to 'talent.whirling_stars.enabled' (1x).\nLine 6: Converted 'talent.harmony_of_the_grove' to 'talent.harmony_of_the_grove.enabled' (1x).\nLine 6: Converted 'talent.new_moon' to 'talent.new_moon.enabled' (1x).\nLine 6: Converted 'talent.whirling_stars' to 'talent.whirling_stars.enabled' (1x).\nLine 6: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 6: Converted 'talent.whirling_stars' to 'talent.whirling_stars.enabled' (1x).\nLine 9: Converted 'talent.treants_of_the_moon' to 'talent.treants_of_the_moon.enabled' (1x).\nLine 10: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 10: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 11: Converted operations in 'variable.no_cd_talent||fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)||((buff.spymasters_report.stack+variable.ca_effective_cd%6)>29||boss&fight_remains<cooldown.ca_inc.duration+variable.ca_effective_cd)&variable.ca_effective_cd>20||variable.on_use_trinket=0' to 'variable.no_cd_talent||fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)||((buff.spymasters_report.stack+variable.ca_effective_cd/6)>29||boss&fight_remains<cooldown.ca_inc.duration+variable.ca_effective_cd)&variable.ca_effective_cd>20||variable.on_use_trinket=0'.\nLine 12: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 12: Converted 'trinket.1.is.imperfect_ascendancy_serum' to 'trinket.t1.is.imperfect_ascendancy_serum' (1x).\nLine 12: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 13: Converted 'trinket.2.is.imperfect_ascendancy_serum' to 'trinket.t2.is.imperfect_ascendancy_serum' (1x).\nLine 13: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 19: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 19: Converted 'talent.soul_of_the_forest' to 'talent.soul_of_the_forest.enabled' (1x).\nLine 21: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 21: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.celestial_alignment' to 'talent.celestial_alignment.enabled' (1x).\nLine 3: Converted 'talent.incarnation_chosen_of_elune' to 'talent.incarnation_chosen_of_elune.enabled' (1x).\nLine 5: Converted 'trinket.1.has_proc' to 'trinket.t1.has_proc' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 5: Converted 'trinket.1.is.arakara_sacbrood' to 'trinket.t1.is.arakara_sacbrood' (1x).\nLine 6: Converted 'trinket.2.has_proc' to 'trinket.t2.has_proc' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 6: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 6: Converted 'trinket.2.is.arakara_sacbrood' to 'trinket.t2.is.arakara_sacbrood' (1x).\nLine 7: Converted 'talent.stellar_flare' to 'talent.stellar_flare.enabled' (1x).\nLine 10: Converted 'talent.stellar_flare' to 'talent.stellar_flare.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.treants_of_the_moon' to 'talent.treants_of_the_moon.enabled' (1x).\nLine 5: Converted operations in 'refreshable&(target.time_to_die-remains)>6-(spell_targets%2)' to 'refreshable&(target.time_to_die-remains)>6-(spell_targets/2)'.\nLine 6: Converted 'talent.treants_of_the_moon' to 'talent.treants_of_the_moon.enabled' (1x).\nLine 9: Converted 'talent.astral_smolder' to 'talent.astral_smolder.enabled' (1x).\nLine 9: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 10: Converted 'talent.power_of_the_dream' to 'talent.power_of_the_dream.enabled' (1x).\nLine 10: Converted 'talent.early_spring' to 'talent.early_spring.enabled' (1x).\nLine 10: Converted 'talent.orbital_strike' to 'talent.orbital_strike.enabled' (1x).\nLine 11: Converted 'talent.natures_grace' to 'talent.natures_grace.enabled' (1x).\nLine 11: Converted 'talent.control_of_the_dream' to 'talent.control_of_the_dream.enabled' (1x).\nLine 16: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 16: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 17: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\nLine 27: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 4: Converted 'talent.treants_of_the_moon' to 'talent.treants_of_the_moon.enabled' (1x).\nLine 11: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 11: Converted 'talent.control_of_the_dream' to 'talent.control_of_the_dream.enabled' (1x).\nLine 11: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 11: Converted 'talent.control_of_the_dream' to 'talent.control_of_the_dream.enabled' (1x).\nLine 11: Converted 'talent.whirling_stars' to 'talent.whirling_stars.enabled' (1x).\nLine 11: Converted 'talent.convoke_the_spirits' to 'talent.convoke_the_spirits.enabled' (1x).\nLine 13: Converted 'talent.starlord' to 'talent.starlord.enabled' (1x).\nLine 15: Converted 'talent.treants_of_the_moon' to 'talent.treants_of_the_moon.enabled' (1x).\nLine 28: Converted 'talent.lunar_calling' to 'talent.lunar_calling.enabled' (1x).\n\nThe import for 'pre_cd' required some automated changes.\nLine 4: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 4: Converted 'trinket.1.is.imperfect_ascendancy_serum' to 'trinket.t1.is.imperfect_ascendancy_serum' (1x).\nLine 4: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.2.is.imperfect_ascendancy_serum' to 'trinket.t2.is.imperfect_ascendancy_serum' (1x).\nLine 5: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\n\nImported 5 action lists.\n",
["profile"] = "actions.precombat+=/mark_of_the_wild\nactions.precombat+=/moonkin_form\nactions.precombat+=/variable,name=no_cd_talent,value=!talent.celestial_alignment&!talent.incarnation_chosen_of_elune||druid.no_cds\nactions.precombat+=/variable,name=on_use_trinket,value=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=(trinket.1.has_proc&trinket.1.cooldown.duration||trinket.1.is.spymasters_web||trinket.1.is.signet_of_the_priory)&!trinket.1.is.arakara_sacbrood\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=((trinket.2.has_proc&trinket.2.cooldown.duration||trinket.2.is.spymasters_web||trinket.2.is.signet_of_the_priory)*2&!trinket.2.is.arakara_sacbrood)\n## Regrowth to stack for Keeper of the Grove...\nactions.precombat+=/regrowth,if=hero_tree.keeper_of_the_grove&!talent.stellar_flare&action.regrowth.time_since<10&active_dot.regrowth=0\nactions.precombat+=/wrath,if=!prev.1.wrath\nactions.precombat+=/wrath,if=prev.1.wrath&!(prev.2.wrath||prev.3.wrath||prev.4.wrath)\nactions.precombat+=/starfire,if=!talent.stellar_flare&hero_tree.elunes_chosen\nactions.precombat+=/stellar_flare\n\nactions+=/solar_beam\n# [Edited] Trigger Lunar Eclipse if we failed to precast Wrath x2\nactions+=/wrath,if=time<2&eclipse.lunar_in_1&(prev.1.wrath+prev.2.wrath+prev.3.wrath)<2\nactions+=/variable,name=passive_asp,value=6%spell_haste+talent.natures_balance+talent.orbit_breaker*dot.moonfire.ticking*(buff.orbit_breaker.stack>(27-2*buff.solstice.up))*24\nactions+=/variable,name=ca_effective_cd,value=cooldown.ca_inc.remains<?cooldown.force_of_nature.remains\nactions+=/variable,name=last_ca_inc,value=boss&fight_remains<cooldown.ca_inc.duration+variable.ca_effective_cd\nactions+=/variable,name=cd_condition,value=(boss&fight_remains<(15+5*talent.incarnation_chosen_of_elune)*(1-talent.whirling_stars*0.2)||fight_remains>10&(!hero_tree.keeper_of_the_grove||((!talent.harmony_of_the_grove||buff.harmony_of_the_grove.up)&cooldown.convoke_the_spirits.remains<60&(!talent.new_moon||cooldown.new_moon.charges_fractional>=2)))&(!talent.whirling_stars||!talent.convoke_the_spirits||talent.whirling_stars&cooldown.convoke_the_spirits.remains<gcd.max*2||cooldown.convoke_the_spirits.remains>cooldown.ca_inc.full_recharge_time))&cooldown.ca_inc.ready&!buff.ca_inc.up\n## actions+=/invoke_external_buff,name=power_infusion,if=variable.cd_condition\nactions+=/use_item,name=aberrant_spellforge\n## actions+=/do_treacherous_transmitter_task,if=cooldown.ca_inc.remains>10\nactions+=/use_item,name=spymasters_web,if=variable.cd_condition&(buff.spymasters_report.stack>29||boss&fight_remains<cooldown.ca_inc.duration)||boss&fight_remains<20\nactions+=/use_item,name=imperfect_ascendancy_serum,if=dot.sunfire.remains>4&(dot.moonfire.remains>4||talent.treants_of_the_moon&(cooldown.force_of_nature.remains<3||buff.harmony_of_the_grove.up)&variable.ca_effective_cd<1||boss&fight_remains<20||fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready))&buff.spymasters_report.stack<=29\nactions+=/use_item,name=treacherous_transmitter,if=((cooldown.force_of_nature.remains<3&(trinket.1.is.spymasters_web||trinket.2.is.spymasters_web)&buff.spymasters_report.stack>=29)||(cooldown.convoke_the_spirits.remains<2&cooldown.ca_inc.ready&cooldown.force_of_nature.remains<3&buff.spymasters_report.stack<=29||fight_remains<20||fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)))\nactions+=/variable,name=generic_trinket_condition,value=variable.no_cd_talent||fight_remains<variable.ca_effective_cd&(buff.harmony_of_the_grove.up||cooldown.convoke_the_spirits.ready)||((buff.spymasters_report.stack+variable.ca_effective_cd%6)>29||boss&fight_remains<cooldown.ca_inc.duration+variable.ca_effective_cd)&variable.ca_effective_cd>20||variable.on_use_trinket=0\nactions+=/use_item,slot=trinket1,if=!trinket.1.is.spymasters_web&!trinket.1.is.imperfect_ascendancy_serum&!trinket.1.is.treacherous_transmitter&(variable.on_use_trinket!=1&trinket.2.cooldown.remains>20||boss&fight_remains<(20+20*(trinket.2.cooldown.remains<25))||variable.generic_trinket_condition)\nactions+=/use_item,slot=trinket2,if=!trinket.2.is.spymasters_web&!trinket.2.is.imperfect_ascendancy_serum&!trinket.2.is.treacherous_transmitter&(variable.on_use_trinket!=2&trinket.1.cooldown.remains>20||boss&fight_remains<(20+20*(trinket.1.cooldown.remains<25))||variable.generic_trinket_condition)\nactions+=/use_items\nactions+=/potion,if=boss&fight_remains<=30\nactions+=/berserking,if=variable.no_cd_talent||fight_remains<15actions+=/berserking,if=variable.no_cd_talent||boss&fight_remains<15\nactions+=/variable,name=eclipse,value=buff.eclipse_lunar.up||buff.eclipse_solar.up\nactions+=/variable,name=eclipse_remains,value=buff.eclipse_lunar.remains<?buff.eclipse_solar.remains\nactions+=/variable,name=enter_lunar,value=talent.lunar_calling||spell_targets.starfire>2-(talent.umbral_intensity.rank+talent.soul_of_the_forest>1)\nactions+=/variable,name=boat_stacks,value=buff.balance_of_all_things_arcane.stack+buff.balance_of_all_things_nature.stack\nactions+=/warrior_of_elune,if=talent.lunar_calling||!talent.lunar_calling&variable.eclipse_remains>=7&cooldown.ca_inc.remains>20\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets>1\nactions+=/run_action_list,name=st\n\nactions.aoe+=/wrath,if=variable.enter_lunar&variable.eclipse&variable.eclipse_remains<cast_time&!variable.cd_condition\nactions.aoe+=/starfire,if=!variable.enter_lunar&variable.eclipse&variable.eclipse_remains<cast_time&!variable.cd_condition\nactions.aoe+=/starfall,if=astral_power.deficit<=variable.passive_asp+6\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6&(!talent.treants_of_the_moon||spell_targets-active_dot.moonfire_dmg>6||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)&!boss\nactions.aoe+=/sunfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6-(spell_targets%2)\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&(target.time_to_die-remains)>6&(!talent.treants_of_the_moon||spell_targets-active_dot.moonfire_dmg>6||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)&boss\n## actions.aoe+=/wrath,if=cooldown.ca_inc.remains>cast_time+gcd.max&variable.enter_lunar&(!variable.eclipse||variable.eclipse_remains<cast_time)\n## actions.aoe+=/starfire,if=cooldown.ca_inc.remains>cast_time+gcd.max&!variable.enter_lunar&(!variable.eclipse||variable.eclipse_remains<cast_time)\nactions.aoe+=/wrath,if=variable.enter_lunar&(!variable.eclipse||variable.eclipse_remains<cast_time)\nactions.aoe+=/starfire,if=!variable.enter_lunar&(!variable.eclipse||variable.eclipse_remains<cast_time)\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-target>7+spell_targets)&spell_targets<(11-talent.umbral_intensity.rank-(2*talent.astral_smolder)-talent.lunar_calling)\nactions.aoe+=/force_of_nature,if=(talent.power_of_the_dream&talent.early_spring&talent.orbital_strike)||variable.eclipse_remains>=3\nactions.aoe+=/force_of_nature,if=cooldown.ca_inc.remains<gcd.max&(!talent.natures_grace||!variable.eclipse||variable.eclipse_remains>6)||variable.eclipse_remains>=3&cooldown.ca_inc.remains>10+15*talent.control_of_the_dream&(fight_remains>cooldown+5||cooldown.ca_inc.remains>fight_remains)\nactions.aoe+=/fury_of_elune,if=variable.eclipse\nactions.aoe+=/call_action_list,name=pre_cd\nactions.aoe+=/celestial_alignment,if=variable.cd_condition\nactions.aoe+=/incarnation,if=variable.cd_condition\nactions.aoe+=/warrior_of_elune,if=!talent.lunar_calling&buff.eclipse_solar.remains<7||talent.lunar_calling\nactions.aoe+=/starfire,if=(!talent.lunar_calling&spell_targets.starfire=1)&(buff.eclipse_solar.up&buff.eclipse_solar.remains<action.starfire.cast_time||eclipse.in_none)\nactions.aoe+=/starfall,if=buff.starweavers_warp.up||buff.touch_the_cosmos_starfall.up\nactions.aoe+=/starsurge,if=buff.starweavers_weft.up\nactions.aoe+=/starfall\nactions.aoe+=/convoke_the_spirits,if=(!buff.dreamstate.up&!buff.umbral_embrace.up&spell_targets.starfire<7||spell_targets.starfire=1)&(boss&fight_remains<5||(buff.ca_inc.up||cooldown.ca_inc.remains>40)&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>15))\nactions.aoe+=/new_moon\nactions.aoe+=/half_moon\nactions.aoe+=/full_moon\nactions.aoe+=/wild_mushroom\nactions.aoe+=/force_of_nature,if=!hero_tree.keeper_of_the_grove\nactions.aoe+=/starfire,if=talent.lunar_calling||buff.eclipse_lunar.up&spell_targets.starfire>1\nactions.aoe+=/wrath\n\nactions.st+=/wrath,if=variable.enter_lunar&variable.eclipse&variable.eclipse_remains<cast_time&!variable.cd_condition\nactions.st+=/starfire,if=!variable.enter_lunar&variable.eclipse&variable.eclipse_remains<cast_time&!variable.cd_condition\nactions.st+=/sunfire,cycle_targets=1,if=remains<3||refreshable&(hero_tree.keeper_of_the_grove&cooldown.force_of_nature.ready||!hero_tree.keeper_of_the_grove&variable.cd_condition)\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&remains<3&(!talent.treants_of_the_moon||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)\nactions.st+=/call_action_list,name=pre_cd\nactions.st+=/celestial_alignment,if=variable.cd_condition\nactions.st+=/incarnation,if=variable.cd_condition\nactions.st+=/wrath,if=variable.enter_lunar&(!variable.eclipse||variable.eclipse_remains<cast_time)\nactions.st+=/starfire,if=!variable.enter_lunar&(!variable.eclipse||variable.eclipse_remains<cast_time)\nactions.st+=/starsurge,if=variable.cd_condition&astral_power.deficit>variable.passive_asp+action.force_of_nature.energize_amount\nactions.st+=/force_of_nature,if=cooldown.ca_inc.remains<gcd.max&(!talent.convoke_the_spirits||cooldown.convoke_the_spirits.remains<gcd.max*3||cooldown.convoke_the_spirits.remains>cooldown.ca_inc.full_recharge_time||boss&fight_remains<cooldown.convoke_the_spirits.remains+3)||cooldown.ca_inc.full_recharge_time+5+15*talent.control_of_the_dream>cooldown&(!talent.convoke_the_spirits||cooldown.convoke_the_spirits.remains+10+15*talent.control_of_the_dream>cooldown||boss&fight_remains<cooldown.convoke_the_spirits.remains+cooldown.convoke_the_spirits.duration+5)&(fight_remains>cooldown+5||boss&fight_remains<cooldown.ca_inc.remains+7)||talent.whirling_stars&talent.convoke_the_spirits&cooldown.convoke_the_spirits.remains>cooldown.force_of_nature.duration-10&boss&fight_remains>cooldown.convoke_the_spirits.remains+6\nactions.st+=/fury_of_elune,if=5+variable.passive_asp<astral_power.deficit\nactions.st+=/starsurge,if=talent.starlord&buff.starlord.stack<3\nactions.st+=/sunfire,cycle_targets=1,if=refreshable\nactions.st+=/moonfire,cycle_targets=1,if=refreshable&(!talent.treants_of_the_moon||cooldown.force_of_nature.remains>3&!buff.harmony_of_the_grove.up)\nactions.st+=/stellar_flare,cycle_targets=1,if=refreshable&(target.time_to_die-remains-target>7+spell_targets)\nactions.st+=/variable,name=convoke_condition,value=boss&fight_remains<5||(buff.ca_inc.up||cooldown.ca_inc.remains>40)&(!hero_tree.keeper_of_the_grove||buff.harmony_of_the_grove.up||cooldown.force_of_nature.remains>15)\nactions.st+=/starsurge,if=cooldown.convoke_the_spirits.remains<gcd.max*2&variable.convoke_condition\nactions.st+=/convoke_the_spirits,if=variable.convoke_condition\nactions.st+=/starsurge,if=buff.starlord.remains>4&variable.boat_stacks>=3||fight_remains<4\nactions.st+=/new_moon,if=astral_power.deficit>variable.passive_asp+energize_amount||fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/half_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)||fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/full_moon,if=astral_power.deficit>variable.passive_asp+energize_amount&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)||fight_remains<20||cooldown.ca_inc.remains>15\nactions.st+=/starsurge,if=buff.starweavers_weft.up||buff.touch_the_cosmos_starsurge.up\nactions.st+=/starfall,if=buff.starweavers_warp.up||buff.touch_the_cosmos_starfall.up\nactions.st+=/starsurge,if=astral_power.deficit<variable.passive_asp+action.wrath.energize_amount+(action.starfire.energize_amount+variable.passive_asp)*(buff.eclipse_solar.remains<(gcd.max*3))\nactions.st+=/force_of_nature,if=!hero_tree.keeper_of_the_grove\nactions.st+=/starfire,if=talent.lunar_calling\nactions.st+=/wrath\n\nactions.pre_cd+=/use_item,name=spymasters_web,if=variable.cd_condition&(buff.spymasters_report.stack>29||boss&fight_remains<cooldown.ca_inc.duration)\n## actions.pre_cd+=/do_treacherous_transmitter_task,if=variable.cd_condition||buff.harmony_of_the_grove.up&(buff.spymasters_report.stack>29||!trinket.1.is.spymasters_web||!trinket.2.is.spymasters_web)\nactions.pre_cd+=/berserking,if=variable.cd_condition\nactions.pre_cd+=/potion,if=variable.cd_condition\nactions.pre_cd+=/use_item,slot=trinket1,if=!trinket.1.is.spymasters_web&!trinket.1.is.imperfect_ascendancy_serum&!trinket.1.is.treacherous_transmitter&(variable.on_use_trinket=1||variable.on_use_trinket=3)&variable.cd_condition\nactions.pre_cd+=/use_item,slot=trinket2,if=!trinket.2.is.spymasters_web&!trinket.2.is.imperfect_ascendancy_serum&!trinket.2.is.treacherous_transmitter&variable.on_use_trinket=2&variable.cd_condition",
["spec"] = 102,
},
["Guardian"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20241011,
["author"] = "SimC",
["desc"] = "2024-10-11: Fix Ironfur tanking check\n\n2024-09-21: Revert/fix\n\n2024-09-15: Bear Form only if no form is active\n\n2024-08-24, 08-25: SimC update\n\n2024-07-23: The War Within",
["lists"] = {
["mitigation"] = {
{
["enabled"] = true,
["criteria"] = "tanking & ! variable.if_build & incoming_damage_5s > ironfur_damage_threshold & buff.ironfur.remains < 3 * haste & buff.ironfur.stack < 5",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "regrowth",
},
{
["enabled"] = true,
["criteria"] = "health.pct < 65",
["action"] = "renewal",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 65",
["action"] = "frenzied_regeneration",
},
{
["enabled"] = true,
["criteria"] = "tanking & health.pct < 75 & incoming_damage_5s > 0.1 * health.max",
["action"] = "barkskin",
},
{
["enabled"] = true,
["criteria"] = "buff.survival_instincts.down & buff.barkskin.down & health.pct < 60 & incoming_damage_5s > 0.25 * health.max",
["action"] = "survival_instincts",
},
},
["precombat"] = {
{
["action"] = "mark_of_the_wild",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "if_build",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "talent.thorns_of_iron.enabled & talent.reinforced_fur.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "ripweaving",
["value"] = "1",
["value_else"] = "0",
["criteria"] = "talent.primal_fury.enabled & talent.fluid_form.enabled & talent.wildpower_surge.enabled",
},
{
["enabled"] = true,
["criteria"] = "talent.heart_of_the_wild.enabled & ! talent.rip.enabled",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "time = 0 || ! talent.fluid_form.enabled",
["action"] = "bear_form",
},
},
["default"] = {
{
["action"] = "skull_bash",
["enabled"] = true,
},
{
["action"] = "soothe",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "potion",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "mitigation",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "bear",
},
},
["bear"] = {
{
["enabled"] = true,
["criteria"] = "buff.ravage.up & active_enemies > 1",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( talent.heart_of_the_wild.enabled & ! talent.rip.enabled ) || talent.heart_of_the_wild.enabled & buff.feline_potential_counter.stack = 6 & active_enemies < 3",
["action"] = "heart_of_the_wild",
},
{
["enabled"] = true,
["criteria"] = "buff.bear_form.up & ( ( ( ! ticking & target.time_to_die > 12 ) || ( refreshable & target.time_to_die > 12 ) ) & active_enemies < 7 & talent.fury_of_nature.enabled ) || ( ( ( ! ticking & target.time_to_die > 12 ) || ( refreshable & target.time_to_die > 12 ) ) & active_enemies < 4 & ! talent.fury_of_nature.enabled )",
["action"] = "moonfire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable || ( dot.thrash_bear.stack < 5 & talent.flashing_claws.rank = 2 || dot.thrash_bear.stack < 4 & talent.flashing_claws.rank = 1 || dot.thrash_bear.stack < 3 & ! talent.flashing_claws.enabled )",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "tanking & cooldown.rage_of_the_sleeper.remains > 8",
["action"] = "bristling_fur",
},
{
["enabled"] = true,
["criteria"] = "buff.bear_form.up",
["action"] = "barkskin",
},
{
["action"] = "lunar_beam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.wildpower_surge.enabled & buff.cat_form.up & buff.feline_potential.up ) || ! talent.wildpower_surge.enabled",
["action"] = "convoke_the_spirits",
},
{
["action"] = "berserk",
["enabled"] = true,
},
{
["action"] = "incarnation",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( ( buff.incarnation_guardian_of_ursoc.down & cooldown.incarnation_guardian_of_ursoc.remains > 60 ) || buff.berserk_bear.down ) & rage > 40 & ( ! talent.convoke_the_spirits.enabled ) || ( buff.incarnation_guardian_of_ursoc.up || buff.berserk_bear.up ) & rage > 40 & ( ! talent.convoke_the_spirits.enabled ) || ( talent.convoke_the_spirits.enabled ) & rage > 40 )",
["action"] = "rage_of_the_sleeper",
},
{
["enabled"] = true,
["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.ravage.up & active_enemies < 2",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & variable.if_build = 1 & active_enemies > 1",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5 & talent.lunar_calling.enabled",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "! debuff.tooth_and_claw.up & ! buff.ironfur.up & rage > 50 & tanking & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up || rage > 90 & variable.if_build = 0 || ! debuff.tooth_and_claw.up & ! buff.ironfur.up & rage > 50 & tanking & variable.if_build = 0 & ! buff.rage_of_the_sleeper.up",
["action"] = "ironfur",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! buff.ravage.up & ( ( rage > 40 & variable.if_build = 1 & cooldown.rage_of_the_sleeper.remains > 3 & talent.rage_of_the_sleeper.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & cooldown.rage_of_the_sleeper.remains > 3 & talent.rage_of_the_sleeper.enabled || rage > 90 & variable.if_build = 1 & ! talent.fount_of_strength.enabled || rage > 110 & variable.if_build = 1 & talent.fount_of_strength.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & buff.rage_of_the_sleeper.up & talent.rage_of_the_sleeper.enabled ) )",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "! buff.ravage.up & ( ( rage > 40 & variable.if_build = 1 & ! talent.rage_of_the_sleeper.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & ! talent.rage_of_the_sleeper.enabled || ( buff.incarnation.up || buff.berserk_bear.up ) & rage > 20 & variable.if_build = 1 & ! talent.rage_of_the_sleeper.enabled ) )",
["action"] = "ironfur",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up & buff.feline_potential.up & active_enemies < 3 & ( buff.incarnation.up || buff.berserk_bear.up ) & ! dot.rip.refreshable )",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "( buff.cat_form.up & buff.feline_potential.up & active_enemies < 3 & ( ! buff.incarnation.up || ! buff.berserk_bear.up ) ) || ( buff.cat_form.up & buff.feline_potential.up & active_enemies < 3 & ( buff.incarnation.up || buff.berserk_bear.up ) & refreshable )",
["action"] = "rip",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 1 & buff.vicious_cycle_maul.stack = 3 & active_enemies > 1 & ! talent.ravage.enabled",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "buff.gore.up & active_enemies < 11 || buff.incarnation_guardian_of_ursoc.up & buff.feline_potential_counter.stack < 6 & talent.wildpower_surge.enabled",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 0 & ( active_enemies > 1 || ( buff.tooth_and_claw.up ) & active_enemies > 1 || buff.vicious_cycle_maul.stack = 3 & active_enemies > 1 )",
["action"] = "raze",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & buff.feline_potential_counter.stack = 6 & ! buff.cat_form.up & ! dot.rake.refreshable & active_enemies < 3 & talent.fluid_form.enabled",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & buff.feline_potential_counter.stack = 6 & ! buff.cat_form.up & active_enemies < 3 & talent.fluid_form.enabled",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & talent.fluid_form.enabled",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 1 & ( ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies <= 5 & ! talent.raze.enabled ) || ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies = 1 & talent.raze.enabled ) || ( ( buff.tooth_and_claw.stack > 1 || buff.tooth_and_claw.remains < 1 + gcd.max ) & active_enemies <= 5 & ! talent.raze.enabled ) )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "variable.if_build = 0 & ( ( buff.tooth_and_claw.up & active_enemies <= 5 & ! talent.raze.enabled ) || ( buff.tooth_and_claw.up & active_enemies = 1 & talent.raze.enabled ) )",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 5 & ! talent.raze.enabled & variable.if_build = 0 ) || ( active_enemies = 1 & talent.raze.enabled & variable.if_build = 0 ) || buff.vicious_cycle_maul.stack = 3 & active_enemies <= 5 & ! talent.raze.enabled",
["action"] = "maul",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 5",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["criteria"] = "( buff.incarnation.up & active_enemies <= 4 ) || ( buff.incarnation.up & talent.soul_of_the_forest.enabled & active_enemies <= 5 ) || ( ( rage < 88 ) & active_enemies < 11 ) || ( ( rage < 83 ) & active_enemies < 11 & talent.soul_of_the_forest.enabled )",
["action"] = "mangle",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "thrash_bear",
},
{
["enabled"] = true,
["action"] = "pulverize",
["cycle_targets"] = 1,
},
{
["action"] = "thrash_bear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.galactic_guardian.up & buff.bear_form.up & talent.boundless_moonlight.enabled",
["action"] = "moonfire",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & rage < 40 & active_enemies < 3 & ! talent.lunar_insight.enabled & talent.fluid_form.enabled & energy > 70 & refreshable & variable.ripweaving = 1",
["action"] = "rake",
},
{
["enabled"] = true,
["criteria"] = "cooldown.rage_of_the_sleeper.remains <= 52 & rage < 40 & active_enemies < 3 & ! talent.lunar_insight.enabled & talent.fluid_form.enabled & energy > 70 & ! buff.rage_of_the_sleeper.up & variable.ripweaving = 1",
["action"] = "shred",
},
{
["enabled"] = true,
["criteria"] = "buff.cat_form.up & ! dot.rip.ticking & active_enemies < 3 & variable.ripweaving = 1",
["action"] = "rip",
},
{
["enabled"] = true,
["criteria"] = "dot.rip.ticking & combo_points > 4 & active_enemies < 3 & variable.ripweaving = 1",
["action"] = "ferocious_bite",
},
{
["enabled"] = true,
["criteria"] = "talent.starsurge.enabled & rage < 20",
["action"] = "starsurge",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 4 ) || ! talent.lunar_insight.enabled || talent.lunar_insight.enabled & active_enemies < 2",
["action"] = "swipe_bear",
},
{
["enabled"] = true,
["criteria"] = "( talent.lunar_insight.enabled & active_enemies > 1 ) & buff.bear_form.up",
["action"] = "moonfire",
},
},
},
["version"] = 20241011,
["warnings"] = "Imported 4 action lists.\n",
["spec"] = 104,
["basedOn"] = "Guardian",
["profile"] = "actions.precombat+=/mark_of_the_wild\nactions.precombat+=/variable,name=if_build,value=1,value_else=0,if=talent.thorns_of_iron.enabled&talent.reinforced_fur.enabled\nactions.precombat+=/variable,name=ripweaving,value=1,value_else=0,if=talent.primal_fury.enabled&talent.fluid_form.enabled&talent.wildpower_surge.enabled\nactions.precombat+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!talent.rip.enabled\nactions.precombat+=/bear_form,if=time=0||!talent.fluid_form.enabled\n\nactions+=/skull_bash\nactions+=/soothe\nactions+=/use_item,slot=trinket1\nactions+=/use_item,slot=trinket2\nactions+=/potion,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions+=/call_action_list,name=mitigation\nactions+=/run_action_list,name=bear\n\nactions.bear+=/maul,if=buff.ravage.up&active_enemies>1\nactions.bear+=/heart_of_the_wild,if=(talent.heart_of_the_wild.enabled&!talent.rip.enabled)||talent.heart_of_the_wild.enabled&buff.feline_potential_counter.stack=6&active_enemies<3\nactions.bear+=/moonfire,cycle_targets=1,if=buff.bear_form.up&(((!ticking&target.time_to_die>12)||(refreshable&target.time_to_die>12))&active_enemies<7&talent.fury_of_nature.enabled)||(((!ticking&target.time_to_die>12)||(refreshable&target.time_to_die>12))&active_enemies<4&!talent.fury_of_nature.enabled)\nactions.bear+=/thrash_bear,if=refreshable||(dot.thrash_bear.stack<5&talent.flashing_claws.rank=2||dot.thrash_bear.stack<4&talent.flashing_claws.rank=1||dot.thrash_bear.stack<3&!talent.flashing_claws.enabled)\nactions.bear+=/bristling_fur,if=tanking&cooldown.rage_of_the_sleeper.remains>8\nactions.bear+=/barkskin,if=buff.bear_form.up\nactions.bear+=/lunar_beam\nactions.bear+=/convoke_the_spirits,if=(talent.wildpower_surge.enabled&buff.cat_form.up&buff.feline_potential.up)||!talent.wildpower_surge.enabled\nactions.bear+=/berserk_bear\nactions.bear+=/incarnation\nactions.bear+=/rage_of_the_sleeper,if=(((buff.incarnation_guardian_of_ursoc.down&cooldown.incarnation_guardian_of_ursoc.remains>60)||buff.berserk_bear.down)&rage>40&(!talent.convoke_the_spirits.enabled)||(buff.incarnation_guardian_of_ursoc.up||buff.berserk_bear.up)&rage>40&(!talent.convoke_the_spirits.enabled)||(talent.convoke_the_spirits.enabled)&rage>40)\nactions.bear+=/berserking,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions.bear+=/maul,if=buff.ravage.up&active_enemies<2\nactions.bear+=/raze,if=(buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&variable.if_build=1&active_enemies>1\nactions.bear+=/thrash_bear,if=active_enemies>=5&talent.lunar_calling.enabled\nactions.bear+=/ironfur,cycle_targets=1,if=!debuff.tooth_and_claw.up&!buff.ironfur.up&rage>50&tanking&variable.if_build=0&!buff.rage_of_the_sleeper.up||rage>90&variable.if_build=0||!debuff.tooth_and_claw.up&!buff.ironfur.up&rage>50&tanking&variable.if_build=0&!buff.rage_of_the_sleeper.up\nactions.bear+=/ironfur,if=!buff.ravage.up&((rage>40&variable.if_build=1&cooldown.rage_of_the_sleeper.remains>3&talent.rage_of_the_sleeper.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&cooldown.rage_of_the_sleeper.remains>3&talent.rage_of_the_sleeper.enabled||rage>90&variable.if_build=1&!talent.fount_of_strength.enabled||rage>110&variable.if_build=1&talent.fount_of_strength.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&buff.rage_of_the_sleeper.up&talent.rage_of_the_sleeper.enabled))\nactions.bear+=/ironfur,if=!buff.ravage.up&((rage>40&variable.if_build=1&!talent.rage_of_the_sleeper.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&!talent.rage_of_the_sleeper.enabled||(buff.incarnation.up||buff.berserk_bear.up)&rage>20&variable.if_build=1&!talent.rage_of_the_sleeper.enabled))\nactions.bear+=/ferocious_bite,if=(buff.cat_form.up&buff.feline_potential.up&active_enemies<3&(buff.incarnation.up||buff.berserk_bear.up)&!dot.rip.refreshable)\nactions.bear+=/rip,if=(buff.cat_form.up&buff.feline_potential.up&active_enemies<3&(!buff.incarnation.up||!buff.berserk_bear.up))||(buff.cat_form.up&buff.feline_potential.up&active_enemies<3&(buff.incarnation.up||buff.berserk_bear.up)&refreshable)\nactions.bear+=/raze,if=variable.if_build=1&buff.vicious_cycle_maul.stack=3&active_enemies>1&!talent.ravage.enabled\nactions.bear+=/mangle,if=buff.gore.up&active_enemies<11||buff.incarnation_guardian_of_ursoc.up&buff.feline_potential_counter.stack<6&talent.wildpower_surge.enabled\nactions.bear+=/raze,if=variable.if_build=0&(active_enemies>1||(buff.tooth_and_claw.up)&active_enemies>1||buff.vicious_cycle_maul.stack=3&active_enemies>1)\nactions.bear+=/shred,if=cooldown.rage_of_the_sleeper.remains<=52&buff.feline_potential_counter.stack=6&!buff.cat_form.up&!dot.rake.refreshable&active_enemies<3&talent.fluid_form.enabled\nactions.bear+=/rake,if=cooldown.rage_of_the_sleeper.remains<=52&buff.feline_potential_counter.stack=6&!buff.cat_form.up&active_enemies<3&talent.fluid_form.enabled\nactions.bear+=/mangle,if=buff.cat_form.up&talent.fluid_form.enabled\nactions.bear+=/maul,if=variable.if_build=1&(((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&active_enemies<=5&!talent.raze.enabled)||((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&active_enemies=1&talent.raze.enabled)||((buff.tooth_and_claw.stack>1||buff.tooth_and_claw.remains<1+gcd)&active_enemies<=5&!talent.raze.enabled))\nactions.bear+=/maul,if=variable.if_build=0&((buff.tooth_and_claw.up&active_enemies<=5&!talent.raze.enabled)||(buff.tooth_and_claw.up&active_enemies=1&talent.raze.enabled))\nactions.bear+=/maul,if=(active_enemies<=5&!talent.raze.enabled&variable.if_build=0)||(active_enemies=1&talent.raze.enabled&variable.if_build=0)||buff.vicious_cycle_maul.stack=3&active_enemies<=5&!talent.raze.enabled\nactions.bear+=/thrash_bear,if=active_enemies>=5\nactions.bear+=/mangle,if=(buff.incarnation.up&active_enemies<=4)||(buff.incarnation.up&talent.soul_of_the_forest.enabled&active_enemies<=5)||((rage<88)&active_enemies<11)||((rage<83)&active_enemies<11&talent.soul_of_the_forest.enabled)\nactions.bear+=/thrash_bear,if=active_enemies>1\nactions.bear+=/pulverize,cycle_targets=1\nactions.bear+=/thrash_bear\nactions.bear+=/moonfire,if=buff.galactic_guardian.up&buff.bear_form.up&talent.boundless_moonlight.enabled\nactions.bear+=/rake,if=cooldown.rage_of_the_sleeper.remains<=52&rage<40&active_enemies<3&!talent.lunar_insight.enabled&talent.fluid_form.enabled&energy>70&refreshable&variable.ripweaving=1\nactions.bear+=/shred,if=cooldown.rage_of_the_sleeper.remains<=52&rage<40&active_enemies<3&!talent.lunar_insight.enabled&talent.fluid_form.enabled&energy>70&!buff.rage_of_the_sleeper.up&variable.ripweaving=1\nactions.bear+=/rip,if=buff.cat_form.up&!dot.rip.ticking&active_enemies<3&variable.ripweaving=1\nactions.bear+=/ferocious_bite,if=dot.rip.ticking&combo_points>4&active_enemies<3&variable.ripweaving=1\nactions.bear+=/starsurge,if=talent.starsurge.enabled&rage<20\nactions.bear+=/swipe_bear,if=(talent.lunar_insight.enabled&active_enemies>4)||!talent.lunar_insight.enabled||talent.lunar_insight.enabled&active_enemies<2\nactions.bear+=/moonfire,if=(talent.lunar_insight.enabled&active_enemies>1)&buff.bear_form.up\n\nactions.mitigation=ironfur,if=tanking&!variable.if_build&incoming_damage_5s>ironfur_damage_threshold&buff.ironfur.remains<3*haste&buff.ironfur.stack<5\nactions.mitigation+=/regrowth,if=health.pct<65\nactions.mitigation+=/renewal,if=health.pct<65\nactions.mitigation+=/frenzied_regeneration,if=tanking&health.pct<65\nactions.mitigation+=/barkskin,if=tanking&health.pct<75&incoming_damage_5s>0.1*health.max\nactions.mitigation+=/survival_instincts,if=buff.survival_instincts.down&buff.barkskin.down&health.pct<60&incoming_damage_5s>0.25*health.max",
},
["Arcane"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240508,
["spec"] = 62,
["desc"] = "2024-05-08: SimC update.\n\n2023-12-14:  Prune T29 logic that is blocking.\n\n2023-12-10:  Latest SimC changes.\n\n2023-11-10:  Incremental SimC update.\n\n2023-11-05:  Patch 10.2.\n\n2023-08-26:  Minor priority update.\n\n2023-07-18:  Minor update to Arcane Orb, Arcane Barrage, TotM.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Check debuff.sated.up for Temporal Warp.\n\n2023-06-24:  Beacon/trinket logic updated; don't Evocation pre-pull if Arcane Surge isn't ready (or toggled off).\n\n2023-05-26:  Tweak to Arcane Blasts at high haste.\n\n2023-05-21:  Re-enable Evocation out of boss fights.\n\n2023-05-20:  Even more adjustments to timed priority entries.\n\n2023-05-15:  Relax some line cooldowns to help ensure transition into Arcane Surge.\n\n2023-05-13:  Minor update.\n\n2023-05-12:  Added T30 priority from SimC.\n\n2023-05-02:  Update for 10.1.",
["lists"] = {
["rotation"] = {
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack < 3 & ( buff.bloodlust.down || mana.pct > 70 )",
["action"] = "arcane_orb",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & cooldown.arcane_surge.remains > 45 & fight_remains > 15",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & equipped.neltharions_call_to_chaos & fight_remains >= 12",
["action"] = "nether_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack < 3 & target.health.pct < 35 & talent.arcane_bombardment.enabled",
["action"] = "presence_of_mind",
},
{
["enabled"] = true,
["criteria"] = "talent.time_anomaly.enabled & buff.arcane_surge.up & buff.arcane_surge.remains <= 6",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.presence_of_mind.up & target.health.pct < 35 & talent.arcane_bombardment.enabled & buff.arcane_charge.stack < 3",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "buff.clearcasting.react & buff.clearcasting.stack = buff.clearcasting.max_stack",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( buff.temporal_warp.up || mana.pct < 10 || ! talent.shifting_power.enabled ) & buff.arcane_surge.down & fight_remains >= 12",
["action"] = "nether_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & mana.pct < 50 & ! talent.evocation.enabled & fight_remains > 20",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & mana.pct < 70 & variable.conserve_mana & buff.bloodlust.up & cooldown.touch_of_the_magi.remains > 5 & fight_remains > 20",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "buff.clearcasting.react & buff.concentration.up & buff.arcane_charge.stack = buff.arcane_charge.max_stack",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.nether_precision.up",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & mana.pct < 60 & variable.conserve_mana & cooldown.touch_of_the_magi.remains > 10 & cooldown.evocation.remains > 40 & fight_remains > 20",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "buff.clearcasting.react & buff.nether_precision.down & ! variable.opener",
["interrupt_global"] = "1",
},
{
["action"] = "arcane_blast",
["enabled"] = true,
},
{
["action"] = "arcane_barrage",
["enabled"] = true,
},
},
["cooldown_phase"] = {
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.arcane_barrage",
["action"] = "touch_of_the_magi",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & ! talent.radiant_spark.enabled",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.radiant_spark.ready || ( active_enemies >= 2 & debuff.radiant_spark_vulnerability.down ) ) & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
["action"] = "arcane_orb",
},
{
["enabled"] = true,
["criteria"] = "cooldown.radiant_spark.ready & ( buff.arcane_charge.stack < 2 || ( buff.arcane_charge.stack < buff.arcane_charge.max_stack & cooldown.arcane_orb.remains >= gcd.max ) )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.clearcasting.react & buff.clearcasting.stack > 0 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) ) & set_bonus.tier31_4pc",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "variable.opener & cooldown.arcane_surge.ready & mana >= variable.opener_min_mana & buff.siphon_storm.remains > 17 & ! set_bonus.tier30_4pc",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.clearcasting.react & buff.clearcasting.stack >= 2 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) ) & ! set_bonus.tier30_4pc",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "talent.arcane_harmony.enabled & buff.arcane_harmony.stack < 15 & ( ( variable.opener & buff.bloodlust.up ) || buff.clearcasting.react & cooldown.radiant_spark.remains < 5 ) & cooldown.arcane_surge.remains < 30",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["chain"] = "1",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "cooldown.radiant_spark.ready & buff.clearcasting.react & ( talent.nether_precision.enabled & ( buff.nether_precision.down || buff.nether_precision.remains < gcd.max * 3 ) ) & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) )",
["interrupt_global"] = "1",
},
{
["action"] = "radiant_spark",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "talent.arcane_echo.enabled",
["line_cd"] = "30",
},
{
["action"] = "arcane_surge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge || prev_gcd.1.nether_tempest || prev_gcd.1.radiant_spark || ( active_enemies >= ( 4 - ( 2 * talent.orb_barrage.enabled ) ) & debuff.radiant_spark_vulnerability.stack = 4 & talent.arcing_cleave.enabled )",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "debuff.radiant_spark_vulnerability.stack > 0 & ( debuff.radiant_spark_vulnerability.stack < 4 || ( variable.blast_below_gcd & debuff.radiant_spark_vulnerability.stack = 4 ) )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "debuff.touch_of_the_magi.remains <= gcd.max",
["action"] = "presence_of_mind",
},
{
["enabled"] = true,
["criteria"] = "buff.presence_of_mind.up",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["chain"] = "1",
["interrupt_if"] = "!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["criteria"] = "( ( buff.nether_precision.down & buff.clearcasting.react ) || ( buff.clearcasting.stack > 2 & set_bonus.tier31_4pc & debuff.touch_of_the_magi.up ) ) & ( debuff.radiant_spark_vulnerability.down || ( debuff.radiant_spark_vulnerability.stack = 4 & prev_gcd.1.arcane_blast ) )",
["interrupt_global"] = "1",
},
{
["action"] = "arcane_blast",
["enabled"] = true,
},
},
["aoe_spark_phase"] = {
{
["enabled"] = true,
["buff_name"] = "presence_of_mind",
["criteria"] = "prev_gcd.1.arcane_blast & cooldown.arcane_surge.remains > 75",
["action"] = "cancel_buff",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.arcane_barrage",
["action"] = "touch_of_the_magi",
},
{
["action"] = "radiant_spark",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "arcane_orb",
["criteria"] = "buff.arcane_charge.stack < 3",
["line_cd"] = "1",
},
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "talent.arcane_echo.enabled",
["line_cd"] = "15",
},
{
["action"] = "arcane_surge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.arcane_surge.remains < 75 & debuff.radiant_spark_vulnerability.stack = 4 & ! talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "( debuff.radiant_spark_vulnerability.stack = 2 & cooldown.arcane_surge.remains > 75 ) || ( debuff.radiant_spark_vulnerability.stack = 1 & cooldown.arcane_surge.remains < 75 ) & ! talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["description"] = "Optimize orb barrage procs during spark at the cost of vulnerabilities, except at 5 or fewer targets where you arcane blast on the 3rd spark stack if its up and you have charges",
["criteria"] = "( debuff.radiant_spark_vulnerability.stack = 1 || debuff.radiant_spark_vulnerability.stack = 2 || ( debuff.radiant_spark_vulnerability.stack = 3 & active_enemies > 5 ) || debuff.radiant_spark_vulnerability.stack = 4 ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
{
["action"] = "presence_of_mind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ( debuff.radiant_spark_vulnerability.stack = 2 || debuff.radiant_spark_vulnerability.stack = 3 ) & ! talent.orb_barrage.enabled ) || ( debuff.radiant_spark_vulnerability.remains & talent.orb_barrage.enabled )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "( debuff.radiant_spark_vulnerability.stack = 4 & buff.arcane_surge.up ) || ( debuff.radiant_spark_vulnerability.stack = 3 & buff.arcane_surge.down ) & ! talent.orb_barrage.enabled",
["action"] = "arcane_barrage",
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["action"] = "arcane_familiar",
["enabled"] = true,
},
{
["action"] = "conjure_mana_gem",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["value"] = "3",
["var_name"] = "aoe_target_count",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "75000 - ( 75000 * ! talent.arcane_harmony.enabled )",
["var_name"] = "opener_min_mana",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "equipped.gladiators_badge || equipped.irideus_fragment || equipped.spoils_of_neltharus || equipped.timebreaching_talon || equipped.ashes_of_the_embersoul || equipped.nymues_unraveling_spindle",
["var_name"] = "steroid_trinket_equipped",
["description"] = "Variable indicates use of a trinket that boosts stats during burst",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( equipped.ashes_of_the_embersoul & equipped.timebreaching_talon ) || ( equipped.irideus_fragment & equipped.timebreaching_talon ) )",
["var_name"] = "talon_double_on_use",
["description"] = "Variable indicates double on use trinket setups",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( equipped.ashes_of_the_embersoul & equipped.nymues_unraveling_spindle ) || ( equipped.irideus_fragment & equipped.nymues_unraveling_spindle ) || ( equipped.balefire_branch & equipped.nymues_unraveling_spindle ) || ( equipped.mirror_of_fractured_tomorrows & equipped.nymues_unraveling_spindle ) )",
["var_name"] = "nymues_double_on_use",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( equipped.irideus_fragment & equipped.ashes_of_the_embersoul )",
["var_name"] = "ashes_double_on_use",
},
{
["action"] = "mirror_image",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Edited to avoid wasting Evocation between small pulls if Arcane Surge isn't even ready.  This also accounts for toggles.",
["criteria"] = "! talent.siphon_storm.enabled || cooldown.arcane_surge.remains > 15",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.siphon_storm.enabled",
["action"] = "evocation",
},
},
["aoe_touch_phase"] = {
{
["enabled"] = true,
["criteria"] = "buff.arcane_artillery.up",
["action"] = "arcane_missiles",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 4 & buff.arcane_charge.stack = 3 ) || buff.arcane_charge.stack = buff.arcane_charge.max_stack",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack < 2",
["action"] = "arcane_orb",
},
{
["action"] = "arcane_explosion",
["enabled"] = true,
},
},
["aoe_rotation"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.evocation.enabled || cooldown.evocation.remains > 12 ) & ( ! talent.arcane_surge.enabled || cooldown.arcane_surge.remains > 12 ) & ( ! talent.touch_of_the_magi.enabled || cooldown.touch_of_the_magi.remains > 12 ) & buff.arcane_surge.down & ( ( ! talent.charged_orb.enabled & cooldown.arcane_orb.remains > 12 ) || ( action.arcane_orb.charges = 0 || cooldown.arcane_orb.remains > 12 ) )",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_surge.down & ( active_enemies > 6 || ! talent.orb_barrage.enabled )",
["action"] = "nether_tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_artillery.up & ( cooldown.touch_of_the_magi.remains + 5 ) > buff.arcane_artillery.remains",
["action"] = "arcane_missiles",
},
{
["enabled"] = true,
["criteria"] = "( active_enemies <= 4 || buff.clearcasting.up ) & buff.arcane_charge.stack = 3",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = 0 & cooldown.touch_of_the_magi.remains > 18",
["action"] = "arcane_orb",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack || mana.pct < 10",
["action"] = "arcane_barrage",
},
{
["action"] = "arcane_explosion",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Executed every time the actor is available.",
["action"] = "counterspell",
},
{
["enabled"] = true,
["criteria"] = "cooldown.arcane_surge.ready",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "This is a backup measure in case you fail to pre-evocate with Siphon Storm.",
["criteria"] = "talent.siphon_storm.enabled & time < 10 & cooldown.arcane_surge.remains < 5",
["action"] = "evocation",
},
{
["enabled"] = true,
["criteria"] = "talent.temporal_warp.enabled & debuff.sated.up & ( cooldown.arcane_surge.ready || boss & fight_remains <= 40 || ( buff.arcane_surge.up & boss & fight_remains <= ( cooldown.arcane_surge.remains + 14 ) ) )",
["action"] = "time_warp",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down & active_enemies >= 2",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["description"] = "Zerking gets used after surge outside of double lust, but after touch with double lust",
["criteria"] = "( prev_gcd.1.arcane_surge & ! ( buff.temporal_warp.up & buff.bloodlust.up ) ) || ( buff.arcane_surge.up & debuff.touch_of_the_magi.up )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["name"] = "irideus_fragment",
["action"] = "irideus_fragment",
["criteria"] = "cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest || fight_remains <= 20",
["description"] = "Use trinkets in single target after surge without t30, after touch with t30, and before Surge in AOE, except 20-second trinkets which are used with spark without t30.  Non-steroid trinkets are used whenever you don't have cooldowns active and double steroid trinkets are used in order of power level in sims with max ilevel.",
},
{
["enabled"] = true,
["criteria"] = "( prev_gcd.1.arcane_surge & ! equipped.belorrelos_the_suncaller & ( ! variable.ashes_double_on_use || ! variable.opener ) ) || fight_remains <= 20 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest ) || ( equipped.belorrelos_the_suncaller & ( buff.arcane_surge.remains > 12 || ( prev_gcd.1.arcane_surge & variable.opener ) ) & cooldown.evocation.remains > 60 )",
["name"] = "ashes_of_the_embersoul",
["action"] = "ashes_of_the_embersoul",
},
{
["enabled"] = true,
["criteria"] = "( ( ! variable.opener & cooldown.arcane_surge.remains <= ( gcd.max * 4 ) & cooldown.radiant_spark.ready ) || ( variable.opener & ( mana.pct <= 10 || buff.siphon_storm.remains < 19 ) ) & ( ! variable.nymues_double_on_use || ! variable.opener ) ) || fight_remains <= 24 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest ) || ( ( equipped.belorrelos_the_suncaller ) & cooldown.touch_of_the_magi.remains < ( gcd.max * 6 ) )",
["name"] = "nymues_unraveling_spindle",
["action"] = "nymues_unraveling_spindle",
},
{
["enabled"] = true,
["criteria"] = "( ( cooldown.arcane_surge.remains <= ( gcd.max * 4 ) & cooldown.radiant_spark.remains ) & ( ! variable.talon_double_on_use || ! variable.opener ) ) || fight_remains <= 20 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest )",
["name"] = "timebreaching_talon",
["action"] = "timebreaching_talon",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.arcane_surge || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest ) || boss & fight_remains <= 15",
["action"] = "use_items",
},
{
["enabled"] = true,
["criteria"] = "( buff.siphon_storm.up & buff.siphon_storm.remains < 19 & ( cooldown.arcane_surge.remains < 12 || buff.arcane_surge.up ) & ( debuff.touch_of_the_magi.remains > 8 || cooldown.touch_of_the_magi.remains < 8 ) ) || fight_remains <= 15 || ( ( active_enemies >= variable.aoe_target_count ) & cooldown.arcane_surge.ready & prev_gcd.1.nether_tempest )",
["name"] = "voidmenders_shadowgem",
["action"] = "voidmenders_shadowgem",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down || equipped.nymues_unraveling_spindle",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || ( buff.siphon_storm.down & buff.arcane_surge.remains < 10 )",
["name"] = "beacon_to_the_beyond",
["action"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "iceblood_deathsnare",
["action"] = "iceblood_deathsnare",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "desperate_invokers_codex",
["action"] = "desperate_invokers_codex",
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 65 & ( ! variable.steroid_trinket_equipped || buff.siphon_storm.down )",
["name"] = "conjured_chillglobe",
["action"] = "conjured_chillglobe",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "darkmoon_deck_rime",
["action"] = "darkmoon_deck_rime",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "darkmoon_deck_dance",
["action"] = "darkmoon_deck_dance",
},
{
["enabled"] = true,
["criteria"] = "! variable.steroid_trinket_equipped || buff.siphon_storm.down",
["name"] = "darkmoon_deck_inferno",
["action"] = "darkmoon_deck_inferno",
},
{
["enabled"] = true,
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["action"] = "iridal_the_earths_master",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains",
["name"] = "iridal_the_earths_master",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "action.arcane_blast.cast_time < gcd.max",
["var_name"] = "blast_below_gcd",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 2",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["action"] = "evocation",
["interrupt_if"] = "mana.pct>=95&!talent.siphon_storm||(mana.pct>fight_remains*4)&!(fight_remains>10&cooldown.arcane_surge.remains<1)",
["description"] = "Cancel Evo if we have enough mana and don't have Siphon Storm talented or if the fight duration is running out",
["criteria"] = "buff.arcane_surge.down & debuff.touch_of_the_magi.down & ( ( mana.pct < 10 & cooldown.touch_of_the_magi.remains < 20 ) || cooldown.touch_of_the_magi.remains < 15 )",
},
{
["enabled"] = true,
["description"] = "Make a new gem if the encounter is long enough and use it after surge to recoup mana quickly",
["criteria"] = "debuff.touch_of_the_magi.down & buff.arcane_surge.down & cooldown.arcane_surge.remains < 30 & cooldown.arcane_surge.true_remains < fight_remains & ! mana_gem_charges",
["action"] = "conjure_mana_gem",
},
{
["enabled"] = true,
["criteria"] = "debuff.touch_of_the_magi.down & buff.arcane_surge.down & cooldown.arcane_surge.remains < 30 & cooldown.arcane_surge.remains < fight_remains & ! mana_gem_charges",
["action"] = "conjure_mana_gem",
},
{
["enabled"] = true,
["criteria"] = "talent.cascading_power.enabled & buff.clearcasting.stack < 2 & buff.arcane_surge.up",
["action"] = "mana_gem",
},
{
["enabled"] = true,
["criteria"] = "! talent.cascading_power.enabled & prev_gcd.1.arcane_surge",
["action"] = "mana_gem",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.arcane_surge.remains <= ( gcd.max * ( 1 + ( talent.nether_tempest.enabled & talent.arcane_echo.enabled ) ) ) || ( buff.arcane_surge.remains > ( 3 * ( set_bonus.tier30_2pc & ! set_bonus.tier30_4pc ) ) ) || buff.arcane_overload.up ) & cooldown.evocation.remains > 45 & ( ( cooldown.touch_of_the_magi.remains < gcd.max * 4 ) || cooldown.touch_of_the_magi.remains > 20 ) & active_enemies < variable.aoe_target_count || ( cooldown.arcane_surge.remains > 30 & ( cooldown.radiant_spark.ready || dot.radiant_spark.remains || debuff.radiant_spark_vulnerability.up ) & ( cooldown.touch_of_the_magi.remains <= ( gcd.max * 3 ) || debuff.touch_of_the_magi.up ) & active_enemies < variable.aoe_target_count )",
["var_name"] = "cooldown_phase_ready",
["description"] = "Enter cooldown phase when cds are available or coming off cooldown otherwise default to rotation priority",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "variable.cooldown_phase_ready",
["list_name"] = "cooldown_phase",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.radiant_spark.enabled & variable.aoe_spark_phase",
["list_name"] = "aoe_spark_phase",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "debuff.touch_of_the_magi.up & active_enemies >= variable.aoe_target_count",
["list_name"] = "aoe_touch_phase",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= variable.aoe_target_count",
["list_name"] = "aoe_rotation",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "rotation",
},
},
["spark_phase"] = {
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "! ticking & variable.opener & buff.bloodlust.up",
["line_cd"] = "45",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.bloodlust.up & buff.clearcasting.react & buff.clearcasting.stack > 0 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) ) & set_bonus.tier31_4pc",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "variable.opener & cooldown.arcane_surge.ready & buff.bloodlust.up & mana >= variable.opener_min_mana & buff.siphon_storm.remains > 15",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "variable.opener & buff.bloodlust.up & buff.clearcasting.react & buff.clearcasting.stack >= 2 & cooldown.radiant_spark.remains < 5 & buff.nether_precision.down & ( ! buff.arcane_artillery.up || buff.arcane_artillery.remains <= ( gcd.max * 6 ) )",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["action"] = "arcane_missiles",
["criteria"] = "talent.arcane_harmony.enabled & buff.arcane_harmony.stack < 15 & ( ( variable.opener & buff.bloodlust.up ) || buff.clearcasting.react & cooldown.radiant_spark.remains < 5 ) & cooldown.arcane_surge.remains < 30",
["interrupt_if"] = "!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["action"] = "radiant_spark",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "nether_tempest",
["criteria"] = "( ! variable.surge_last_spark_stack & prev_gcd.4.radiant_spark & cooldown.arcane_surge.remains <= execute_time ) || prev_gcd.5.radiant_spark",
["line_cd"] = "15",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.nether_tempest.enabled & ( ( prev_gcd.4.radiant_spark & ! variable.surge_last_spark_stack ) || prev_gcd.5.radiant_spark ) ) || prev_gcd.1.nether_tempest",
["action"] = "arcane_surge",
},
{
["enabled"] = true,
["criteria"] = "cast_time >= gcd.max & execute_time < debuff.radiant_spark_vulnerability.remains & ( ! talent.arcane_bombardment.enabled || target.health.pct >= 35 ) & ( talent.nether_tempest.enabled & prev_gcd.6.radiant_spark || ! talent.nether_tempest.enabled & prev_gcd.5.radiant_spark ) & ! ( action.arcane_surge.executing & action.arcane_surge.execute_remains < 0.5 & ! variable.surge_last_spark_stack )",
["action"] = "arcane_blast",
},
{
["enabled"] = true,
["criteria"] = "debuff.radiant_spark_vulnerability.stack = 4",
["action"] = "arcane_barrage",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "prev_gcd.1.arcane_barrage & ( action.arcane_barrage.in_flight_remains <= 0.2 || gcd.remains <= 0.2 )",
["action"] = "touch_of_the_magi",
},
{
["action"] = "arcane_blast",
["enabled"] = true,
},
{
["action"] = "arcane_barrage",
["enabled"] = true,
},
},
},
["version"] = 20240508,
["warnings"] = "The import for 'aoe_rotation' required some automated changes.\nLine 1: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\nLine 1: Converted 'talent.arcane_surge' to 'talent.arcane_surge.enabled' (1x).\nLine 1: Converted 'talent.touch_of_the_magi' to 'talent.touch_of_the_magi.enabled' (1x).\nLine 1: Converted 'talent.charged_orb' to 'talent.charged_orb.enabled' (1x).\nLine 2: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\n\nThe import for 'cooldown_phase' required some automated changes.\nLine 2: Converted 'talent.radiant_spark' to 'talent.radiant_spark.enabled' (1x).\nLine 8: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\nLine 9: Converted 'talent.nether_precision' to 'talent.nether_precision.enabled' (1x).\nLine 11: Converted 'talent.arcane_echo' to 'talent.arcane_echo.enabled' (1x).\nLine 13: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 13: Converted 'talent.arcing_cleave' to 'talent.arcing_cleave.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'talent.siphon_storm' to 'talent.siphon_storm.enabled' (1x).\nLine 4: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 32: Converted 'talent.cascading_power' to 'talent.cascading_power.enabled' (1x).\nLine 33: Converted 'talent.cascading_power' to 'talent.cascading_power.enabled' (1x).\nLine 34: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\nLine 34: Converted 'talent.arcane_echo' to 'talent.arcane_echo.enabled' (1x).\nLine 36: Converted 'talent.radiant_spark' to 'talent.radiant_spark.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 5: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\nLine 11: Converted 'talent.siphon_storm' to 'talent.siphon_storm.enabled' (1x).\nLine 12: Converted 'talent.siphon_storm' to 'talent.siphon_storm.enabled' (1x).\n\nThe import for 'spark_phase' required some automated changes.\nLine 5: Converted 'talent.arcane_harmony' to 'talent.arcane_harmony.enabled' (1x).\nLine 8: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\nLine 9: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 9: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\nLine 9: Converted 'talent.nether_tempest' to 'talent.nether_tempest.enabled' (1x).\n\nThe import for 'rotation' required some automated changes.\nLine 4: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 5: Converted 'talent.time_anomaly' to 'talent.time_anomaly.enabled' (1x).\nLine 6: Converted 'talent.arcane_bombardment' to 'talent.arcane_bombardment.enabled' (1x).\nLine 8: Converted 'talent.shifting_power' to 'talent.shifting_power.enabled' (1x).\nLine 9: Converted 'talent.evocation' to 'talent.evocation.enabled' (1x).\n\nThe import for 'aoe_spark_phase' required some automated changes.\nLine 5: Converted 'talent.arcane_echo' to 'talent.arcane_echo.enabled' (1x).\nLine 7: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 8: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 9: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 11: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 11: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\nLine 12: Converted 'talent.orb_barrage' to 'talent.orb_barrage.enabled' (1x).\n\nImported 8 action lists.\n",
["profile"] = "actions.precombat+=/arcane_intellect\nactions.precombat+=/arcane_familiar\nactions.precombat+=/conjure_mana_gem\nactions.precombat+=/variable,name=aoe_target_count,op=reset,value=3\n## actions.precombat+=/variable,name=conserve_mana,op=set,value=0\nactions.precombat+=/variable,name=opener_min_mana,op=set,value=75000-(75000*!talent.arcane_harmony)\n# Variable indicates use of a trinket that boosts stats during burst\nactions.precombat+=/variable,name=steroid_trinket_equipped,op=set,value=equipped.gladiators_badge||equipped.irideus_fragment||equipped.spoils_of_neltharus||equipped.timebreaching_talon||equipped.ashes_of_the_embersoul||equipped.nymues_unraveling_spindle\n# Variable indicates double on use trinket setups\nactions.precombat+=/variable,name=talon_double_on_use,op=set,value=((equipped.ashes_of_the_embersoul&equipped.timebreaching_talon)||(equipped.irideus_fragment&equipped.timebreaching_talon))\nactions.precombat+=/variable,name=nymues_double_on_use,op=set,value=((equipped.ashes_of_the_embersoul&equipped.nymues_unraveling_spindle)||(equipped.irideus_fragment&equipped.nymues_unraveling_spindle)||(equipped.balefire_branch&equipped.nymues_unraveling_spindle)||(equipped.mirror_of_fractured_tomorrows&equipped.nymues_unraveling_spindle))\nactions.precombat+=/variable,name=ashes_double_on_use,op=set,value=(equipped.irideus_fragment&equipped.ashes_of_the_embersoul)\nactions.precombat+=/mirror_image\n# Edited to avoid wasting Evocation between small pulls if Arcane Surge isn't even ready.  This also accounts for toggles.\nactions.precombat+=/arcane_blast,if=!talent.siphon_storm||cooldown.arcane_surge.remains>15\nactions.precombat+=/evocation,if=talent.siphon_storm\n\n# Executed every time the actor is available.\nactions=counterspell\nactions+=/potion,if=cooldown.arcane_surge.ready\n# This is a backup measure in case you fail to pre-evocate with Siphon Storm.\nactions+=/evocation,if=talent.siphon_storm&time<10&cooldown.arcane_surge.remains<5\nactions+=/time_warp,if=talent.temporal_warp&debuff.sated.up&(cooldown.arcane_surge.ready||boss&fight_remains<=40||(buff.arcane_surge.up&boss&fight_remains<=(cooldown.arcane_surge.remains+14)))\nactions+=/lights_judgment,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down&active_enemies>=2\nactions+=/bag_of_tricks,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down\n# Zerking gets used after surge outside of double lust, but after touch with double lust\nactions+=/berserking,if=(prev_gcd.1.arcane_surge&!(buff.temporal_warp.up&buff.bloodlust.up))||(buff.arcane_surge.up&debuff.touch_of_the_magi.up)\nactions+=/blood_fury,if=prev_gcd.1.arcane_surge\nactions+=/fireblood,if=prev_gcd.1.arcane_surge\nactions+=/ancestral_call,if=prev_gcd.1.arcane_surge\n### PI/Summer after Radiant Spark when cooldowns are coming up, Autumn after Touch of the Magi cd starts\n## actions+=/invoke_external_buff,name=power_infusion,if=((!talent.radiant_spark&prev_gcd.1.arcane_surge)||(talent.radiant_spark&prev_gcd.1.radiant_spark&cooldown.arcane_surge.remains<=(gcd.max*3)))\n## actions+=/invoke_external_buff,name=blessing_of_summer,if=(!talent.radiant_spark&prev_gcd.1.arcane_surge)||(talent.radiant_spark&prev_gcd.1.radiant_spark&cooldown.arcane_surge.remains<=(gcd.max*3))\n## actions+=/invoke_external_buff,name=blessing_of_autumn,if=cooldown.touch_of_the_magi.remains>5\n# Use trinkets in single target after surge without t30, after touch with t30, and before Surge in AOE, except 20-second trinkets which are used with spark without t30.  Non-steroid trinkets are used whenever you don't have cooldowns active and double steroid trinkets are used in order of power level in sims with max ilevel.\nactions+=/use_item,name=irideus_fragment,if=cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest||fight_remains<=20\nactions+=/use_item,name=ashes_of_the_embersoul,if=(prev_gcd.1.arcane_surge&!equipped.belorrelos_the_suncaller&(!variable.ashes_double_on_use||!variable.opener))||fight_remains<=20||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)||(equipped.belorrelos_the_suncaller&(buff.arcane_surge.remains>12||(prev_gcd.1.arcane_surge&variable.opener))&cooldown.evocation.remains>60)\nactions+=/use_item,name=nymues_unraveling_spindle,if=((!variable.opener&cooldown.arcane_surge.remains<=(gcd.max*4)&cooldown.radiant_spark.ready)||(variable.opener&(mana.pct<=10||buff.siphon_storm.remains<19))&(!variable.nymues_double_on_use||!variable.opener))||fight_remains<=24||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)||((equipped.belorrelos_the_suncaller)&cooldown.touch_of_the_magi.remains<(gcd.max*6))\nactions+=/use_item,name=timebreaching_talon,if=((cooldown.arcane_surge.remains<=(gcd.max*4)&cooldown.radiant_spark.remains)&(!variable.talon_double_on_use||!variable.opener))||fight_remains<=20||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)\nactions+=/use_items,if=prev_gcd.1.arcane_surge||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)||boss&fight_remains<=15\nactions+=/use_item,name=voidmenders_shadowgem,if=(buff.siphon_storm.up&buff.siphon_storm.remains<19&(cooldown.arcane_surge.remains<12||buff.arcane_surge.up)&(debuff.touch_of_the_magi.remains>8||cooldown.touch_of_the_magi.remains<8))||fight_remains<=15||((active_enemies>=variable.aoe_target_count)&cooldown.arcane_surge.ready&prev_gcd.1.nether_tempest)\n## actions+=/use_item,name=tinker_breath_of_neltharion,if=cooldown.arcane_surge.remains&buff.arcane_surge.down&debuff.touch_of_the_magi.down\nactions+=/use_item,name=belorrelos_the_suncaller,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down||equipped.nymues_unraveling_spindle\nactions+=/use_item,name=beacon_to_the_beyond,if=!variable.steroid_trinket_equipped||(buff.siphon_storm.down&buff.arcane_surge.remains<10)\nactions+=/use_item,name=iceblood_deathsnare,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=desperate_invokers_codex,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=conjured_chillglobe,if=mana.pct>65&(!variable.steroid_trinket_equipped||buff.siphon_storm.down)\nactions+=/use_item,name=darkmoon_deck_rime,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=darkmoon_deck_dance,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=darkmoon_deck_inferno,if=!variable.steroid_trinket_equipped||buff.siphon_storm.down\nactions+=/use_item,name=dreambinder_loom_of_the_great_cycle\nactions+=/use_item,name=iridal_the_earths_master,use_off_gcd=1,if=gcd.remains\n## actions+=/variable,name=aoe_spark_phase,op=set,value=1,if=active_enemies>=variable.aoe_target_count&(action.arcane_orb.charges>0||buff.arcane_charge.stack>=3)&cooldown.radiant_spark.ready&cooldown.touch_of_the_magi.remains<=(gcd.max*2)\n## actions+=/variable,name=aoe_spark_phase,op=set,value=0,if=variable.aoe_spark_phase&debuff.radiant_spark_vulnerability.down&dot.radiant_spark.remains<7&cooldown.radiant_spark.remains\n## actions+=/variable,name=spark_phase,op=set,value=1,if=buff.arcane_charge.stack>3&active_enemies<variable.aoe_target_count&cooldown.radiant_spark.ready&cooldown.touch_of_the_magi.remains<=(gcd.max*(7-(3*equipped.balefire_branch)))&(cooldown.arcane_surge.remains<=(gcd.max*5)||cooldown.arcane_surge.remains>40)\n## actions+=/variable,name=spark_phase,op=set,value=0,if=variable.spark_phase&debuff.radiant_spark_vulnerability.down&dot.radiant_spark.remains<7&cooldown.radiant_spark.remains\n## actions+=/variable,name=opener,op=set,if=debuff.touch_of_the_magi.up&variable.opener,value=0\nactions+=/variable,name=blast_below_gcd,op=set,value=action.arcane_blast.cast_time<gcd.max\nactions+=/arcane_barrage,if=boss&fight_remains<2\n# Cancel Evo if we have enough mana and don't have Siphon Storm talented or if the fight duration is running out\nactions+=/evocation,if=buff.arcane_surge.down&debuff.touch_of_the_magi.down&((mana.pct<10&cooldown.touch_of_the_magi.remains<20)||cooldown.touch_of_the_magi.remains<15),interrupt_if=mana.pct>=95&!talent.siphon_storm||(mana.pct>fight_remains*4)&!(fight_remains>10&cooldown.arcane_surge.remains<1)\n# Make a new gem if the encounter is long enough and use it after surge to recoup mana quickly\nactions+=/conjure_mana_gem,if=debuff.touch_of_the_magi.down&buff.arcane_surge.down&cooldown.arcane_surge.remains<30&cooldown.arcane_surge.true_remains<fight_remains&!mana_gem_charges\nactions+=/conjure_mana_gem,if=debuff.touch_of_the_magi.down&buff.arcane_surge.down&cooldown.arcane_surge.remains<30&cooldown.arcane_surge.remains<fight_remains&!mana_gem_charges\nactions+=/use_mana_gem,if=talent.cascading_power&buff.clearcasting.stack<2&buff.arcane_surge.up\nactions+=/use_mana_gem,if=!talent.cascading_power&prev_gcd.1.arcane_surge\n## TODO: Revisit strict flag on these entries.\n# Merged two cooldown_phase entries to reduce CPU consumption.\n# Enter cooldown phase when cds are available or coming off cooldown otherwise default to rotation priority\nactions+=/variable,name=cooldown_phase_ready,value=(cooldown.arcane_surge.remains<=(gcd.max*(1+(talent.nether_tempest&talent.arcane_echo)))||(buff.arcane_surge.remains>(3*(set_bonus.tier30_2pc&!set_bonus.tier30_4pc)))||buff.arcane_overload.up)&cooldown.evocation.remains>45&((cooldown.touch_of_the_magi.remains<gcd.max*4)||cooldown.touch_of_the_magi.remains>20)&active_enemies<variable.aoe_target_count||(cooldown.arcane_surge.remains>30&(cooldown.radiant_spark.ready||dot.radiant_spark.remains||debuff.radiant_spark_vulnerability.up)&(cooldown.touch_of_the_magi.remains<=(gcd.max*3)||debuff.touch_of_the_magi.up)&active_enemies<variable.aoe_target_count)\nactions+=/call_action_list,name=cooldown_phase,if=variable.cooldown_phase_ready\nactions+=/call_action_list,name=aoe_spark_phase,strict=1,if=talent.radiant_spark&variable.aoe_spark_phase\nactions+=/call_action_list,name=aoe_touch_phase,strict=1,if=debuff.touch_of_the_magi.up&active_enemies>=variable.aoe_target_count\nactions+=/call_action_list,name=aoe_rotation,strict=1,if=active_enemies>=variable.aoe_target_count\nactions+=/call_action_list,name=rotation\n\nactions.aoe_rotation+=/shifting_power,if=(!talent.evocation||cooldown.evocation.remains>12)&(!talent.arcane_surge||cooldown.arcane_surge.remains>12)&(!talent.touch_of_the_magi||cooldown.touch_of_the_magi.remains>12)&buff.arcane_surge.down&((!talent.charged_orb&cooldown.arcane_orb.remains>12)||(action.arcane_orb.charges=0||cooldown.arcane_orb.remains>12))\nactions.aoe_rotation+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_surge.down&(active_enemies>6||!talent.orb_barrage)\nactions.aoe_rotation+=/arcane_missiles,if=buff.arcane_artillery.up&(cooldown.touch_of_the_magi.remains+5)>buff.arcane_artillery.remains\nactions.aoe_rotation+=/arcane_barrage,if=(active_enemies<=4||buff.clearcasting.up)&buff.arcane_charge.stack=3\nactions.aoe_rotation+=/arcane_orb,if=buff.arcane_charge.stack=0&cooldown.touch_of_the_magi.remains>18\nactions.aoe_rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack||mana.pct<10\nactions.aoe_rotation+=/arcane_explosion\n\nactions.aoe_spark_phase=cancel_buff,name=presence_of_mind,if=prev_gcd.1.arcane_blast&cooldown.arcane_surge.remains>75\nactions.aoe_spark_phase+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage\nactions.aoe_spark_phase+=/radiant_spark\nactions.aoe_spark_phase+=/arcane_orb,if=buff.arcane_charge.stack<3,line_cd=1\nactions.aoe_spark_phase+=/nether_tempest,if=talent.arcane_echo,line_cd=15\nactions.aoe_spark_phase+=/arcane_surge\n### Waits are used to simulate players allowing radiant spark to increment in stacks\n## actions.aoe_spark_phase+=/wait,sec=0.05,if=cooldown.arcane_surge.remains>75&prev_gcd.1.arcane_blast&!talent.presence_of_mind,line_cd=15\n## actions.aoe_spark_phase+=/wait,sec=0.05,if=prev_gcd.1.arcane_surge,line_cd=15\n## actions.aoe_spark_phase+=/wait,sec=0.05,if=cooldown.arcane_surge.remains<75&debuff.radiant_spark_vulnerability.stack=3&!talent.presence_of_mind,line_cd=15\nactions.aoe_spark_phase+=/arcane_barrage,if=cooldown.arcane_surge.remains<75&debuff.radiant_spark_vulnerability.stack=4&!talent.orb_barrage\nactions.aoe_spark_phase+=/arcane_barrage,if=(debuff.radiant_spark_vulnerability.stack=2&cooldown.arcane_surge.remains>75)||(debuff.radiant_spark_vulnerability.stack=1&cooldown.arcane_surge.remains<75)&!talent.orb_barrage\n# Optimize orb barrage procs during spark at the cost of vulnerabilities, except at 5 or fewer targets where you arcane blast on the 3rd spark stack if its up and you have charges\nactions.aoe_spark_phase+=/arcane_barrage,if=(debuff.radiant_spark_vulnerability.stack=1||debuff.radiant_spark_vulnerability.stack=2||(debuff.radiant_spark_vulnerability.stack=3&active_enemies>5)||debuff.radiant_spark_vulnerability.stack=4)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.orb_barrage\nactions.aoe_spark_phase+=/presence_of_mind\nactions.aoe_spark_phase+=/arcane_blast,if=((debuff.radiant_spark_vulnerability.stack=2||debuff.radiant_spark_vulnerability.stack=3)&!talent.orb_barrage)||(debuff.radiant_spark_vulnerability.remains&talent.orb_barrage)\nactions.aoe_spark_phase+=/arcane_barrage,if=(debuff.radiant_spark_vulnerability.stack=4&buff.arcane_surge.up)||(debuff.radiant_spark_vulnerability.stack=3&buff.arcane_surge.down)&!talent.orb_barrage\n\n## actions.aoe_touch_phase+=/variable,name=conserve_mana,op=set,if=debuff.touch_of_the_magi.remains>9,value=1-variable.conserve_mana\nactions.aoe_touch_phase+=/arcane_missiles,if=buff.arcane_artillery.up\nactions.aoe_touch_phase+=/arcane_barrage,if=(active_enemies<=4&buff.arcane_charge.stack=3)||buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.aoe_touch_phase+=/arcane_orb,if=buff.arcane_charge.stack<2\nactions.aoe_touch_phase+=/arcane_explosion\n\nactions.cooldown_phase+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage\n## actions.cooldown_phase+=/variable,name=conserve_mana,op=set,if=cooldown.radiant_spark.ready,value=(cooldown.arcane_surge.remains<10)\nactions.cooldown_phase+=/shifting_power,if=buff.arcane_surge.down&!talent.radiant_spark\nactions.cooldown_phase+=/arcane_orb,if=(cooldown.radiant_spark.ready||(active_enemies>=2&debuff.radiant_spark_vulnerability.down))&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.cooldown_phase+=/arcane_blast,if=cooldown.radiant_spark.ready&(buff.arcane_charge.stack<2||(buff.arcane_charge.stack<buff.arcane_charge.max_stack&cooldown.arcane_orb.remains>=gcd.max))\nactions.cooldown_phase+=/arcane_missiles,if=variable.opener&buff.clearcasting.react&buff.clearcasting.stack>0&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6))&set_bonus.tier31_4pc,chain=1,interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.cooldown_phase+=/arcane_blast,if=variable.opener&cooldown.arcane_surge.ready&mana>=variable.opener_min_mana&buff.siphon_storm.remains>17&!set_bonus.tier30_4pc\nactions.cooldown_phase+=/arcane_missiles,if=variable.opener&buff.clearcasting.react&buff.clearcasting.stack>=2&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6))&!set_bonus.tier30_4pc,chain=1,interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.cooldown_phase+=/arcane_missiles,if=talent.arcane_harmony&buff.arcane_harmony.stack<15&((variable.opener&buff.bloodlust.up)||buff.clearcasting.react&cooldown.radiant_spark.remains<5)&cooldown.arcane_surge.remains<30,chain=1,interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.cooldown_phase+=/arcane_missiles,if=cooldown.radiant_spark.ready&buff.clearcasting.react&(talent.nether_precision&(buff.nether_precision.down||buff.nether_precision.remains<gcd.max*3))&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6)),interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1,chain=1\nactions.cooldown_phase+=/radiant_spark\nactions.cooldown_phase+=/nether_tempest,if=talent.arcane_echo,line_cd=30\nactions.cooldown_phase+=/arcane_surge\n## actions.cooldown_phase+=/wait,sec=0.05,if=prev_gcd.1.arcane_surge,line_cd=15\nactions.cooldown_phase+=/arcane_barrage,if=prev_gcd.1.arcane_surge||prev_gcd.1.nether_tempest||prev_gcd.1.radiant_spark||(active_enemies>=(4-(2*talent.orb_barrage))&debuff.radiant_spark_vulnerability.stack=4&talent.arcing_cleave)\nactions.cooldown_phase+=/arcane_blast,if=debuff.radiant_spark_vulnerability.stack>0&(debuff.radiant_spark_vulnerability.stack<4||(variable.blast_below_gcd&debuff.radiant_spark_vulnerability.stack=4))\nactions.cooldown_phase+=/presence_of_mind,if=debuff.touch_of_the_magi.remains<=gcd.max\nactions.cooldown_phase+=/arcane_blast,if=buff.presence_of_mind.up\nactions.cooldown_phase+=/arcane_missiles,if=((buff.nether_precision.down&buff.clearcasting.react)||(buff.clearcasting.stack>2&set_bonus.tier31_4pc&debuff.touch_of_the_magi.up))&(debuff.radiant_spark_vulnerability.down||(debuff.radiant_spark_vulnerability.stack=4&prev_gcd.1.arcane_blast)),interrupt_if=!gcd.remains&mana.pct>30&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1,chain=1\nactions.cooldown_phase+=/arcane_blast\n\nactions.rotation+=/arcane_orb,if=buff.arcane_charge.stack<3&(buff.bloodlust.down||mana.pct>70)\n## actions.rotation+=/variable,name=conserve_mana,op=set,if=cooldown.arcane_surge.remains>30,value=(cooldown.touch_of_the_magi.remains>10)\n## actions.rotation+=/variable,name=conserve_mana,op=set,if=cooldown.arcane_surge.remains<30,value=0\nactions.rotation+=/shifting_power,if=buff.arcane_surge.down&cooldown.arcane_surge.remains>45&fight_remains>15\nactions.rotation+=/nether_tempest,if=(refreshable||!ticking)&equipped.neltharions_call_to_chaos&fight_remains>=12\nactions.rotation+=/presence_of_mind,if=buff.arcane_charge.stack<3&target.health.pct<35&talent.arcane_bombardment\nactions.rotation+=/arcane_blast,if=talent.time_anomaly&buff.arcane_surge.up&buff.arcane_surge.remains<=6\nactions.rotation+=/arcane_blast,if=buff.presence_of_mind.up&target.health.pct<35&talent.arcane_bombardment&buff.arcane_charge.stack<3\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.stack=buff.clearcasting.max_stack,interrupt_if=!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.rotation+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(buff.temporal_warp.up||mana.pct<10||!talent.shifting_power)&buff.arcane_surge.down&fight_remains>=12\nactions.rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&mana.pct<50&!talent.evocation&fight_remains>20\nactions.rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&mana.pct<70&variable.conserve_mana&buff.bloodlust.up&cooldown.touch_of_the_magi.remains>5&fight_remains>20\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.concentration.up&buff.arcane_charge.stack=buff.arcane_charge.max_stack,interrupt_if=!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.rotation+=/arcane_blast,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.nether_precision.up\nactions.rotation+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&mana.pct<60&variable.conserve_mana&cooldown.touch_of_the_magi.remains>10&cooldown.evocation.remains>40&fight_remains>20\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.nether_precision.down&!variable.opener,interrupt_if=!gcd.remains&buff.nether_precision.up&mana.pct>30&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.rotation+=/arcane_blast\nactions.rotation+=/arcane_barrage\n\nactions.spark_phase+=/nether_tempest,if=!ticking&variable.opener&buff.bloodlust.up,line_cd=45\nactions.spark_phase+=/arcane_missiles,if=variable.opener&buff.bloodlust.up&buff.clearcasting.react&buff.clearcasting.stack>0&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6))&set_bonus.tier31_4pc,chain=1,interrupt_if=!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.spark_phase+=/arcane_blast,if=variable.opener&cooldown.arcane_surge.ready&buff.bloodlust.up&mana>=variable.opener_min_mana&buff.siphon_storm.remains>15\nactions.spark_phase+=/arcane_missiles,if=variable.opener&buff.bloodlust.up&buff.clearcasting.react&buff.clearcasting.stack>=2&cooldown.radiant_spark.remains<5&buff.nether_precision.down&(!buff.arcane_artillery.up||buff.arcane_artillery.remains<=(gcd.max*6)),chain=1,interrupt_if=!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.spark_phase+=/arcane_missiles,if=talent.arcane_harmony&buff.arcane_harmony.stack<15&((variable.opener&buff.bloodlust.up)||buff.clearcasting.react&cooldown.radiant_spark.remains<5)&cooldown.arcane_surge.remains<30,chain=1,interrupt_if=!gcd.remains&buff.nether_precision.up&!buff.arcane_artillery.up,interrupt_immediate=1,interrupt_global=1\nactions.spark_phase+=/radiant_spark\nactions.spark_phase+=/nether_tempest,if=(!variable.surge_last_spark_stack&prev_gcd.4.radiant_spark&cooldown.arcane_surge.remains<=execute_time)||prev_gcd.5.radiant_spark,line_cd=15\nactions.spark_phase+=/arcane_surge,if=(!talent.nether_tempest&((prev_gcd.4.radiant_spark&!variable.surge_last_spark_stack)||prev_gcd.5.radiant_spark))||prev_gcd.1.nether_tempest\nactions.spark_phase+=/arcane_blast,if=cast_time>=gcd&execute_time<debuff.radiant_spark_vulnerability.remains&(!talent.arcane_bombardment||target.health.pct>=35)&(talent.nether_tempest&prev_gcd.6.radiant_spark||!talent.nether_tempest&prev_gcd.5.radiant_spark)&!(action.arcane_surge.executing&action.arcane_surge.execute_remains<0.5&!variable.surge_last_spark_stack)\n### Waits are used to simulate players allowing radiant spark to increment in stacks\n## actions.spark_phase+=/wait,sec=0.05,if=action.arcane_blast.execute_remains<gcd.remains&(talent.nether_tempest&prev_gcd.6.radiant_spark)||(!talent.nether_tempest&prev_gcd.5.radiant_spark),line_cd=15\nactions.spark_phase+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=4\nactions.spark_phase+=/touch_of_the_magi,use_off_gcd=1,if=prev_gcd.1.arcane_barrage&(action.arcane_barrage.in_flight_remains<=0.2||gcd.remains<=0.2)\nactions.spark_phase+=/arcane_blast\nactions.spark_phase+=/arcane_barrage",
["author"] = "SimulationCraft",
},
["Frost Mage"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240515,
["author"] = "SimC",
["desc"] = "2024-05-15: Soften opening Flurry cast.\n\n2024-05-08: SimC update.\n\n2024-03-12: Minor sim update.\n\n2024-01-05: Tweak Shifting Power.\n\n2023-12-10: Fix Time Warp/Sated aura.\n\n2023-12-01: Sim update.\n\n2023-11-13: Sim update.\n\n2023-11-10:  Incremental SimC update.\n\n2023-11-07:  Patch 10.2 update.\n\n2023-08-07:  Align Time Warp with Icy Veins.\n\n2023-07-22:  SimC update for new 'freezable' expression; tweak Shifting Power in AOE.\n\n2023-07-14:  Don't Shifting Power in ST if nothing is really on CD.\n\n2023-07-11:  Patch 10.1.5 update.\n\n2023-07-02:  Use debuff.sated.up for Temporal Warp.\n\n2023-05-12:  Update Spoils trinket.\n\n2023-05-08:  Updates from SimC; limited_ice_lance now factors in Slick Ice as well.\n\n2023-05-02:  Update for 10.1.\n\n2023-03-28:  Add experimental option for the \"less Ice Lance\" build.",
["lists"] = {
["default"] = {
{
["action"] = "counterspell",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "active_enemies >= 7 & ! set_bonus.tier30_2pc || active_enemies >= 3 & talent.ice_caller.enabled",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "active_enemies = 2",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "st",
},
},
["movement"] = {
{
["enabled"] = true,
["criteria"] = "movement.distance > 10",
["action"] = "blink",
},
{
["enabled"] = true,
["criteria"] = "buff.ice_floes.down",
["action"] = "ice_floes",
},
{
["action"] = "ice_nova",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 30 & active_enemies >= 2",
["action"] = "arcane_explosion",
},
{
["action"] = "fire_blast",
["enabled"] = true,
},
{
["action"] = "ice_lance",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "arcane_intellect",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled || active_enemies >= 3",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 2",
["action"] = "frostbolt",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & ( prev_gcd.1.comet_storm || prev_gcd.1.frozen_orb & ! talent.comet_storm.enabled )",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike || ! freezable",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike || ! freezable",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "! prev_gcd.1.glacial_spike & ( ! talent.coldest_snap.enabled || cooldown.cone_of_cold.ready & cooldown.frozen_orb.remains > 25 || cooldown.cone_of_cold.remains > 20 )",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "freezable & debuff.frozen.down & ( ! talent.glacial_spike.enabled & ! talent.snowstorm.enabled || prev_gcd.1.glacial_spike || cooldown.cone_of_cold.ready & buff.snowstorm.stack = buff.snowstorm.max_stack )",
["action"] = "freeze",
},
{
["enabled"] = true,
["criteria"] = "freezable & ! prev_off_gcd.freeze & ( prev_gcd.1.glacial_spike || cooldown.cone_of_cold.ready & buff.snowstorm.stack = buff.snowstorm.max_stack & gcd.max < 1 )",
["action"] = "ice_nova",
},
{
["enabled"] = true,
["criteria"] = "freezable & ! prev_off_gcd.freeze & ( prev_gcd.1.glacial_spike & ! remaining_winters_chill || cooldown.cone_of_cold.ready & buff.snowstorm.stack = buff.snowstorm.max_stack & gcd.max < 1 )",
["action"] = "frost_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.snowstorm.stack = buff.snowstorm.max_stack",
["action"] = "cone_of_cold",
},
{
["action"] = "shifting_power",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5 & cooldown.blizzard.remains > gcd.max",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "! freezable & cooldown_react & ! debuff.winters_chill.remains & ( prev_gcd.1.glacial_spike || charges_fractional > 1.8 )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & ! debuff.winters_chill.remains & ( buff.brain_freeze.react || ! buff.fingers_of_frost.react )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react || debuff.frozen.remains > travel_time || remaining_winters_chill",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4 & ( ! talent.snowstorm.enabled & ! talent.glacial_spike.enabled || ! freezable )",
["action"] = "ice_nova",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 7",
["action"] = "dragons_breath",
},
{
["enabled"] = true,
["criteria"] = "mana.pct > 30 & active_enemies >= 7",
["action"] = "arcane_explosion",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "talent.temporal_warp.enabled & debuff.sated.up & buff.bloodlust.down & ( prev_off_gcd.icy_veins || ( buff.icy_veins.up & fight_remains <= 110 || buff.icy_veins.up & fight_remains >= 280 ) || boss & fight_remains < 40 )",
["action"] = "time_warp",
},
{
["enabled"] = true,
["criteria"] = "buff.spoils_of_neltharus_mastery.up || buff.spoils_of_neltharus_haste.up & buff.bloodlust.down & buff.temporal_warp.down & time > 0 || buff.spoils_of_neltharus_vers.up & ( buff.bloodlust.up || buff.temporal_warp.up )",
["name"] = "spoils_of_neltharus",
["action"] = "spoils_of_neltharus",
},
{
["enabled"] = true,
["criteria"] = "prev_off_gcd.icy_veins || boss & fight_remains < 60",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( equipped.nymues_unraveling_spindle & prev_gcd.1.nymues_unraveling_spindle ) || fight_remains > 2",
["name"] = "dreambinder_loom_of_the_great_cycle",
["action"] = "dreambinder_loom_of_the_great_cycle",
},
{
["enabled"] = true,
["criteria"] = "time > 5 & ! prev_gcd.1.flurry",
["name"] = "belorrelos_the_suncaller",
["action"] = "belorrelos_the_suncaller",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.ray_of_frost.enabled & active_enemies <= 2 & buff.icy_veins.up & prev_gcd.1.glacial_spike || remaining_winters_chill = 1 & cooldown.ray_of_frost.up & time > 1 & active_enemies <= 2 || cooldown.cone_of_cold.up & prev_gcd.1.comet_storm & active_enemies >= 3 ) || boss & fight_remains < 20",
["name"] = "balefire_branch",
["action"] = "balefire_branch",
},
{
["enabled"] = true,
["criteria"] = "time < 0.5 * gcd.max & active_enemies <= 2",
["action"] = "flurry",
["line_cd"] = "gcd.max",
},
{
["action"] = "icy_veins",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! equipped.balefire_branch || time > 5",
["action"] = "use_items",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
},
["st"] = {
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.flurry || prev_gcd.1.cone_of_cold",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & remaining_winters_chill = 0 & debuff.winters_chill.down & ( ( prev_gcd.1.frostbolt & buff.icicles.react >= 3 || prev_gcd.1.frostbolt & buff.brain_freeze.react ) || prev_gcd.1.glacial_spike || talent.glacial_spike.enabled & buff.icicles.react = 4 & ! buff.fingers_of_frost.react )",
["action"] = "flurry",
},
{
["enabled"] = true,
["criteria"] = "talent.glacial_spike.enabled & debuff.winters_chill.down & buff.icicles.react = 4 & buff.fingers_of_frost.react",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "remaining_winters_chill = 1",
["action"] = "ray_of_frost",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5 & ( action.flurry.cooldown_react || remaining_winters_chill )",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react < 2 & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains )",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & cooldown.comet_storm.remains > 10 & cooldown.frozen_orb.remains > 10 & remaining_winters_chill = 0 & active_enemies >= 3",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled & talent.freezing_rain.enabled & ( ! talent.splintering_cold.enabled & ! talent.ray_of_frost.enabled || buff.freezing_rain.up || active_enemies >= 3 )",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "cooldown.frozen_orb.true_remains > 10 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.true_remains > 10 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.true_remains > 10 ) || boss & fight_remains < 20",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react & ! prev_gcd.1.glacial_spike || remaining_winters_chill",
["action"] = "ice_lance",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4",
["action"] = "ice_nova",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
["cleave"] = {
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.flurry || prev_gcd.1.cone_of_cold",
["action"] = "comet_storm",
},
{
["enabled"] = true,
["criteria"] = "cooldown_react & ( ( prev_gcd.1.frostbolt & buff.icicles.react >= 3 ) || prev_gcd.1.glacial_spike || ( buff.icicles.react >= 3 & buff.icicles.react < 5 & charges_fractional = 2 ) )",
["action"] = "flurry",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.glacial_spike.enabled & debuff.winters_chill.down & buff.icicles.react = 4 & buff.fingers_of_frost.react",
["action"] = "ice_lance",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "remaining_winters_chill = 1",
["action"] = "ray_of_frost",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5 & ( action.flurry.cooldown_react || remaining_winters_chill )",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react < 2 & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.remains )",
["action"] = "frozen_orb",
},
{
["enabled"] = true,
["criteria"] = "talent.coldest_snap.enabled & cooldown.comet_storm.remains > 10 & cooldown.frozen_orb.remains > 10 & remaining_winters_chill = 0 & active_enemies >= 3",
["action"] = "cone_of_cold",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.ice_caller.enabled & talent.freezing_rain.enabled & ( ! talent.splintering_cold.enabled & ! talent.ray_of_frost.enabled || buff.freezing_rain.up || active_enemies >= 3 )",
["action"] = "blizzard",
},
{
["enabled"] = true,
["criteria"] = "cooldown.frozen_orb.true_remains > 10 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.true_remains > 10 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.true_remains > 10 ) || cooldown.frozen_orb.true_remains > 0 & ( ! talent.comet_storm.enabled || cooldown.comet_storm.true_remains > 0 ) & ( ! talent.ray_of_frost.enabled || cooldown.ray_of_frost.true_remains > 0 ) & cooldown.icy_veins.remains < 20",
["action"] = "shifting_power",
},
{
["enabled"] = true,
["criteria"] = "buff.icicles.react = 5",
["action"] = "glacial_spike",
},
{
["enabled"] = true,
["criteria"] = "buff.fingers_of_frost.react & ! prev_gcd.1.glacial_spike || remaining_winters_chill",
["action"] = "ice_lance",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 4",
["action"] = "ice_nova",
},
{
["action"] = "frostbolt",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "movement",
},
},
},
["version"] = 20240515,
["warnings"] = "The import for 'default' required some automated changes.\nLine 3: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 1: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 4: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 5: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 5: Converted 'talent.snowstorm' to 'talent.snowstorm.enabled' (1x).\nLine 14: Converted 'talent.snowstorm' to 'talent.snowstorm.enabled' (1x).\nLine 14: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.temporal_warp' to 'talent.temporal_warp.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nThe import for 'st' required some automated changes.\nLine 2: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 3: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 7: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 8: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\nLine 8: Converted 'talent.freezing_rain' to 'talent.freezing_rain.enabled' (1x).\nLine 8: Converted 'talent.splintering_cold' to 'talent.splintering_cold.enabled' (1x).\nLine 8: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 3: Converted 'talent.glacial_spike' to 'talent.glacial_spike.enabled' (1x).\nLine 6: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 7: Converted 'talent.coldest_snap' to 'talent.coldest_snap.enabled' (1x).\nLine 8: Converted 'talent.ice_caller' to 'talent.ice_caller.enabled' (1x).\nLine 8: Converted 'talent.freezing_rain' to 'talent.freezing_rain.enabled' (1x).\nLine 8: Converted 'talent.splintering_cold' to 'talent.splintering_cold.enabled' (1x).\nLine 8: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\nLine 9: Converted 'talent.comet_storm' to 'talent.comet_storm.enabled' (1x).\nLine 9: Converted 'talent.ray_of_frost' to 'talent.ray_of_frost.enabled' (1x).\n\nImported 7 action lists.\n",
["spec"] = 64,
["profile"] = "actions.precombat+=/arcane_intellect\nactions.precombat+=/blizzard,if=active_enemies>=2&talent.ice_caller||active_enemies>=3\nactions.precombat+=/frostbolt,if=active_enemies<=2\n\nactions=counterspell\nactions+=/call_action_list,name=cds\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>=7&!set_bonus.tier30_2pc||active_enemies>=3&talent.ice_caller\nactions+=/run_action_list,name=cleave,if=active_enemies=2\nactions+=/run_action_list,name=st\n\nactions.aoe+=/cone_of_cold,if=talent.coldest_snap&(prev_gcd.1.comet_storm||prev_gcd.1.frozen_orb&!talent.comet_storm)\nactions.aoe+=/frozen_orb,if=!prev_gcd.1.glacial_spike||!freezable\nactions.aoe+=/blizzard,if=!prev_gcd.1.glacial_spike||!freezable\nactions.aoe+=/comet_storm,if=!prev_gcd.1.glacial_spike&(!talent.coldest_snap||cooldown.cone_of_cold.ready&cooldown.frozen_orb.remains>25||cooldown.cone_of_cold.remains>20)\nactions.aoe+=/freeze,if=freezable&debuff.frozen.down&(!talent.glacial_spike&!talent.snowstorm||prev_gcd.1.glacial_spike||cooldown.cone_of_cold.ready&buff.snowstorm.stack=buff.snowstorm.max_stack)\nactions.aoe+=/ice_nova,if=freezable&!prev_off_gcd.freeze&(prev_gcd.1.glacial_spike||cooldown.cone_of_cold.ready&buff.snowstorm.stack=buff.snowstorm.max_stack&gcd.max<1)\nactions.aoe+=/frost_nova,if=freezable&!prev_off_gcd.freeze&(prev_gcd.1.glacial_spike&!remaining_winters_chill||cooldown.cone_of_cold.ready&buff.snowstorm.stack=buff.snowstorm.max_stack&gcd.max<1)\nactions.aoe+=/cone_of_cold,if=buff.snowstorm.stack=buff.snowstorm.max_stack\nactions.aoe+=/shifting_power\nactions.aoe+=/glacial_spike,if=buff.icicles.react=5&cooldown.blizzard.remains>gcd.max\nactions.aoe+=/flurry,if=!freezable&cooldown_react&!debuff.winters_chill.remains&(prev_gcd.1.glacial_spike||charges_fractional>1.8)\nactions.aoe+=/flurry,if=cooldown_react&!debuff.winters_chill.remains&(buff.brain_freeze.react||!buff.fingers_of_frost.react)\nactions.aoe+=/ice_lance,if=buff.fingers_of_frost.react||debuff.frozen.remains>travel_time||remaining_winters_chill\nactions.aoe+=/ice_nova,if=active_enemies>=4&(!talent.snowstorm&!talent.glacial_spike||!freezable)\nactions.aoe+=/dragons_breath,if=active_enemies>=7\nactions.aoe+=/arcane_explosion,if=mana.pct>30&active_enemies>=7\nactions.aoe+=/frostbolt\nactions.aoe+=/call_action_list,name=movement\n\nactions.cds+=/time_warp,if=talent.temporal_warp&debuff.sated.up&buff.bloodlust.down&(prev_off_gcd.icy_veins||(buff.icy_veins.up&fight_remains<=110||buff.icy_veins.up&fight_remains>=280)||boss&fight_remains<40)\nactions.cds+=/use_item,name=spoils_of_neltharus,if=buff.spoils_of_neltharus_mastery.up||buff.spoils_of_neltharus_haste.up&buff.bloodlust.down&buff.temporal_warp.down&time>0||buff.spoils_of_neltharus_vers.up&(buff.bloodlust.up||buff.temporal_warp.up)\nactions.cds+=/potion,if=prev_off_gcd.icy_veins||boss&fight_remains<60\nactions.cds+=/use_item,name=dreambinder_loom_of_the_great_cycle,if=(equipped.nymues_unraveling_spindle&prev_gcd.1.nymues_unraveling_spindle)||fight_remains>2\nactions.cds+=/use_item,name=belorrelos_the_suncaller,if=time>5&!prev_gcd.1.flurry\nactions.cds+=/use_item,name=balefire_branch,if=(!talent.ray_of_frost&active_enemies<=2&buff.icy_veins.up&prev_gcd.1.glacial_spike||remaining_winters_chill=1&cooldown.ray_of_frost.up&time>1&active_enemies<=2||cooldown.cone_of_cold.up&prev_gcd.1.comet_storm&active_enemies>=3)||boss&fight_remains<20\nactions.cds+=/flurry,line_cd=gcd.max,if=time<0.5*gcd.max&active_enemies<=2\nactions.cds+=/icy_veins\nactions.cds+=/use_items,if=!equipped.balefire_branch||time>5\n## External buffs are not invoked by the addon, as the player can't choose to trigger them personally.\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=buff.power_infusion.down\n## actions.cds+=/invoke_external_buff,name=blessing_of_summer,if=buff.blessing_of_summer.down\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/lights_judgment\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n\nactions.cleave+=/comet_storm,if=prev_gcd.1.flurry||prev_gcd.1.cone_of_cold\nactions.cleave+=/flurry,cycle_targets=1,if=cooldown_react&((prev_gcd.1.frostbolt&buff.icicles.react>=3)||prev_gcd.1.glacial_spike||(buff.icicles.react>=3&buff.icicles.react<5&charges_fractional=2))\nactions.cleave+=/ice_lance,cycle_targets=1,if=talent.glacial_spike&debuff.winters_chill.down&buff.icicles.react=4&buff.fingers_of_frost.react\nactions.cleave+=/ray_of_frost,cycle_targets=1,if=remaining_winters_chill=1\nactions.cleave+=/glacial_spike,if=buff.icicles.react=5&(action.flurry.cooldown_react||remaining_winters_chill)\nactions.cleave+=/frozen_orb,if=buff.fingers_of_frost.react<2&(!talent.ray_of_frost||cooldown.ray_of_frost.remains)\nactions.cleave+=/cone_of_cold,if=talent.coldest_snap&cooldown.comet_storm.remains>10&cooldown.frozen_orb.remains>10&remaining_winters_chill=0&active_enemies>=3\nactions.cleave+=/blizzard,if=active_enemies>=2&talent.ice_caller&talent.freezing_rain&(!talent.splintering_cold&!talent.ray_of_frost||buff.freezing_rain.up||active_enemies>=3)\nactions.cleave+=/shifting_power,if=cooldown.frozen_orb.true_remains>10&(!talent.comet_storm||cooldown.comet_storm.true_remains>10)&(!talent.ray_of_frost||cooldown.ray_of_frost.true_remains>10)||cooldown.frozen_orb.true_remains>0&(!talent.comet_storm||cooldown.comet_storm.true_remains>0)&(!talent.ray_of_frost||cooldown.ray_of_frost.true_remains>0)&cooldown.icy_veins.remains<20\nactions.cleave+=/glacial_spike,if=buff.icicles.react=5\nactions.cleave+=/ice_lance,cycle_targets=1,if=buff.fingers_of_frost.react&!prev_gcd.1.glacial_spike||remaining_winters_chill\nactions.cleave+=/ice_nova,if=active_enemies>=4\nactions.cleave+=/frostbolt\nactions.cleave+=/call_action_list,name=movement\n\nactions.movement+=/any_blink,if=movement.distance>10\nactions.movement+=/ice_floes,if=buff.ice_floes.down\nactions.movement+=/ice_nova\nactions.movement+=/arcane_explosion,if=mana.pct>30&active_enemies>=2\nactions.movement+=/fire_blast\nactions.movement+=/ice_lance\n\nactions.st+=/comet_storm,if=prev_gcd.1.flurry||prev_gcd.1.cone_of_cold\nactions.st+=/flurry,if=cooldown_react&remaining_winters_chill=0&debuff.winters_chill.down&((prev_gcd.1.frostbolt&buff.icicles.react>=3||prev_gcd.1.frostbolt&buff.brain_freeze.react)||prev_gcd.1.glacial_spike||talent.glacial_spike&buff.icicles.react=4&!buff.fingers_of_frost.react)\nactions.st+=/ice_lance,if=talent.glacial_spike&debuff.winters_chill.down&buff.icicles.react=4&buff.fingers_of_frost.react\nactions.st+=/ray_of_frost,if=remaining_winters_chill=1\nactions.st+=/glacial_spike,if=buff.icicles.react=5&(action.flurry.cooldown_react||remaining_winters_chill)\nactions.st+=/frozen_orb,if=buff.fingers_of_frost.react<2&(!talent.ray_of_frost||cooldown.ray_of_frost.remains)\nactions.st+=/cone_of_cold,if=talent.coldest_snap&cooldown.comet_storm.remains>10&cooldown.frozen_orb.remains>10&remaining_winters_chill=0&active_enemies>=3\nactions.st+=/blizzard,if=active_enemies>=2&talent.ice_caller&talent.freezing_rain&(!talent.splintering_cold&!talent.ray_of_frost||buff.freezing_rain.up||active_enemies>=3)\nactions.st+=/shifting_power,if=cooldown.frozen_orb.true_remains>10&(!talent.comet_storm||cooldown.comet_storm.true_remains>10)&(!talent.ray_of_frost||cooldown.ray_of_frost.true_remains>10)||boss&fight_remains<20\nactions.st+=/glacial_spike,if=buff.icicles.react=5\nactions.st+=/ice_lance,if=buff.fingers_of_frost.react&!prev_gcd.1.glacial_spike||remaining_winters_chill\nactions.st+=/ice_nova,if=active_enemies>=4\nactions.st+=/frostbolt\nactions.st+=/call_action_list,name=movement",
},
["Outlaw"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20241025,
["author"] = "SimC",
["desc"] = "2024-10-23: 11.0.5\n\n2024-09-08, 09-10, 09-15: SimC update\n\n2024-09-03: Poisons\n\n2024-08-25, 09-01: SimC rtb_reroll tweak\n\n2024-08-22: Respect LD Opener setting\n\n2024-08-15: Major revisions from SimC\n\n2024-08-09: Update finisher conditions from SimC\n\n2024-08-06: Respect Vanish CD when considering BtE with Crackshot\n\n2024-07-28: The War Within",
["lists"] = {
["build"] = {
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "High priority Ambush for Hidden Opportunity builds",
["criteria"] = "talent.hidden_opportunity.enabled & buff.audacity.up",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available",
["criteria"] = "talent.fan_the_hammer.enabled & talent.audacity.enabled & talent.hidden_opportunity.enabled & buff.opportunity.up & ! buff.audacity.up",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( buff.opportunity.stack >= buff.opportunity.max_stack || buff.opportunity.remains < 2 )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( combo_points.deficit >= ( 1 + ( talent.quick_draw.enabled + buff.broadside.up ) * ( talent.fan_the_hammer.rank + 1 ) ) || combo_points <= talent.ruthlessness.enabled )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw",
["criteria"] = "! talent.fan_the_hammer.enabled & buff.opportunity.up & ( energy.base_deficit > energy.regen * 1.5 || combo_points.deficit <= 1 + buff.broadside.up || talent.quick_draw.enabled || talent.audacity.enabled & ! buff.audacity.up )",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds",
["for_next"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
{
["action"] = "sinister_strike",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "rtb_buffs_will_lose = ( rtb_buffs_will_lose_buff.buried_treasure + rtb_buffs_will_lose_buff.grand_melee & spell_targets.blade_flurry < 2 )",
["var_name"] = "rtb_reroll",
["description"] = "Variables that define the reroll rules for Roll the Bones  Default rule: reroll if the only buff that will be rolled away is Buried Treasure, or Grand Melee in single target without upcoming adds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["value"] = "rtb_buffs_will_lose <= buff.loaded_dice.up || buff.loaded_dice.up & rtb_buffs_will_lose < 3 & ( ! rtb_buffs_will_lose_buff.broadside || buff.broadside.remains < 11 ) & ( ! rtb_buffs_will_lose_buff.ruthless_precision || buff.ruthless_precision.remains < 11 ) & ( ! rtb_buffs_will_lose_buff.true_bearing || buff.true_bearing.remains < 11 )",
["description"] = "If Loaded Dice is talented, then keep any 1 buff from Roll the Bones but roll it into 2 buffs when Loaded Dice is active. Also reroll 2 buffs with loaded dice up if broadside, ruthless precision and true bearing are all missing and loaded dice is up",
["criteria"] = "talent.loaded_dice.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.rtb_reroll & rtb_buffs_longer = 0 || rtb_buffs_normal = 0 & rtb_buffs_longer >= 1 & buff.loaded_dice.up & ( rtb_buffs < 6 & rtb_buffs_max_remains < 39 || talent.supercharger.enabled )",
["var_name"] = "rtb_reroll",
["description"] = "If all active Roll the Bones buffs are ahead of its container buff and have under 40s remaining or with supercharger talented, then reroll again with Loaded Dice active in an attempt to get even more buffs",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "rtb_reroll",
["description"] = "Non supercharger builds should avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global",
["criteria"] = "! talent.supercharger.enabled & ! ( raid_event.adds.remains > 12 || raid_event.adds.up & ( raid_event.adds.in - raid_event.adds.remains ) < 6 || target.time_to_die > 12 ) || fight_remains < 12 & boss",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.hidden_opportunity.enabled || combo_points.deficit >= 2 + talent.improved_ambush.enabled + buff.broadside.up ) & energy >= 50",
["var_name"] = "ambush_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points >= cp_max_spend - 1 - ( stealthed.all & talent.crackshot.enabled || ( talent.hand_of_fate.enabled || talent.flawless_form.enabled ) & talent.hidden_opportunity.enabled & ( buff.audacity.up || buff.opportunity.up ) )",
["var_name"] = "finish_condition",
["description"] = "Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot. With the hero trees, Hidden Opportunity builds also finish at -2 if Audacity or Opportunity is active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.blade_flurry < 2 & raid_event.adds.in > 20 || buff.blade_flurry.remains > gcd.max",
["var_name"] = "blade_flurry_sync",
["description"] = "With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "High priority stealth list, will fall through if no conditions are met",
["strict"] = 1,
["criteria"] = "stealthed.all",
["list_name"] = "stealth",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.finish_condition",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.base_deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "imperfect_ascendancy_serum",
["action"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "stealth",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["precombat_seconds"] = "2",
["description"] = "Builds with Keep it Rolling prepull Adrenaline Rush before Roll the Bones to consume Loaded Dice immediately instead of on the next pandemic roll",
["criteria"] = "talent.improved_adrenaline_rush.enabled & buff.adrenaline_rush.down & talent.keep_it_rolling.enabled & talent.loaded_dice.enabled",
},
{
["enabled"] = true,
["criteria"] = "buff.roll_the_bones.down",
["action"] = "roll_the_bones",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["criteria"] = "talent.improved_adrenaline_rush.enabled & buff.adrenaline_rush.down",
["action"] = "adrenaline_rush",
["precombat_seconds"] = "1",
},
},
["cds"] = {
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["description"] = "Use Adrenaline Rush if it is not active and the finisher condition is not met, with Improved Adrenaline Rush you can also refresh it with 2cp or less if Loaded Dice is not already up  Adrenaline rush if buff is missing unless you can finish or with 2 or less cp if loaded dice is missing",
["criteria"] = "! buff.adrenaline_rush.up & ( ! variable.finish_condition || ! talent.improved_adrenaline_rush.enabled ) || talent.improved_adrenaline_rush.enabled & combo_points <= 2 & ! buff.loaded_dice.up",
},
{
["enabled"] = true,
["action"] = "sprint",
["description"] = "Sprint to further benefit from Scroll of Momentum trinket",
["criteria"] = "( trinket.t1.is.scroll_of_momentum || trinket.t2.is.scroll_of_momentum ) & buff.full_momentum.up",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "Maintain Blade Flurry on 2+ targets",
["criteria"] = "spell_targets >= 2 & buff.blade_flurry.remains < gcd.max",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given",
["criteria"] = "talent.deft_maneuvers.enabled & ! variable.finish_condition & ( spell_targets >= 3 & combo_points.deficit = spell_targets + buff.broadside.up || spell_targets >= 5 )",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["description"] = "Use Roll the Bones if reroll conditions are met, or with no buffs",
["criteria"] = "variable.rtb_reroll || rtb_buffs = 0",
},
{
["enabled"] = true,
["action"] = "keep_it_rolling",
["description"] = "Use Keep it Rolling with any 4 buffs. If Broadside is not active, then wait until just before the lowest buff expires in an attempt to obtain it from Count the Odds.",
["criteria"] = "rtb_buffs >= 4 & ( rtb_buffs_min_remains < 2 || buff.broadside.up )",
},
{
["enabled"] = true,
["criteria"] = "combo_points < cp_max_spend",
["action"] = "ghostly_strike",
},
{
["enabled"] = true,
["name"] = "manic_grieftorch",
["action"] = "manic_grieftorch",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || fight_remains <= 5",
["description"] = "Trinkets that should not be used during stealth and have higher priority than entering stealth",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["criteria"] = "! stealthed.all & buff.between_the_eyes.up || boss & fight_remains <= 5",
["name"] = "beacon_to_the_beyond",
},
{
["enabled"] = true,
["action"] = "imperfect_ascendancy_serum",
["criteria"] = "! stealthed.all || boss & fight_remains <= 22",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "mad_queens_mandate",
["criteria"] = "! stealthed.all || boss & fight_remains <= 5",
["name"] = "mad_queens_mandate",
},
{
["enabled"] = true,
["action"] = "killing_spree",
["description"] = "Killing Spree has higher priority than stealth cooldowns",
["criteria"] = "variable.finish_condition & ! stealthed.all",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Crackshot builds use stealth cooldowns if not already in stealth",
["criteria"] = "! stealthed.all",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["criteria"] = "! buff.thistle_tea.up & ( energy.base_deficit >= 150 || fight_remains < charges * 6 )",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["action"] = "blade_rush",
["description"] = "Use Blade Rush at minimal energy outside of stealth",
["criteria"] = "energy.base_time_to_max > 4 & ! stealthed.all",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || boss & fight_remains < 30 || buff.adrenaline_rush.up",
["action"] = "potion",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "buff.between_the_eyes.up || trinket.t1.has_stat.any_dps || boss & fight_remains <= 20",
["slots"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "buff.between_the_eyes.up || trinket.t2.has_stat.any_dps || boss & fight_remains <= 20",
["slots"] = "trinket2",
},
},
["stealth"] = {
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "cold_blood",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Ensure Crackshot BtE is not skipped because of low energy",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld",
["criteria"] = "variable.finish_condition & talent.crackshot.enabled & ( ! buff.shadowmeld.up || stealthed.rogue )",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "dispatch",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active",
["criteria"] = "talent.crackshot.enabled & talent.fan_the_hammer.rank >= 2 & buff.opportunity.stack >= 6 & ( buff.broadside.up & combo_points <= 1 || buff.greenskins_wickers.up )",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds with Underhanded Upper Hand and Subterfuge must use Vanish while Adrenaline Rush is active and either BTE on CD with RP up, adrenaline rush about to expire, supercharger buff up, vanish capped on charges or about to cap or fight about to end",
["criteria"] = "talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & talent.crackshot.enabled & buff.adrenaline_rush.up & variable.finish_condition & ( ! cooldown.between_the_eyes.ready & buff.ruthless_precision.up || buff.adrenaline_rush.remains < 3 || buff.supercharge.up || cooldown.vanish.full_recharge_time < 15 || boss & fight_remains < 8 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds with Underhanded Upper Hand and Subterfuge but without crackshot use vanish only with Adrenaline Rush active",
["criteria"] = "talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & ! talent.crackshot.enabled & buff.adrenaline_rush.up & ( variable.ambush_condition || ! talent.hidden_opportunity.enabled ) & ( ! cooldown.between_the_eyes.ready & buff.ruthless_precision.up || buff.ruthless_precision.down || buff.adrenaline_rush.remains < 3 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds without Underhanded Upper Hand but with Crackshot must still use Vanish into Between the Eyes on cooldown",
["criteria"] = "! talent.underhanded_upper_hand.enabled & talent.crackshot.enabled & variable.finish_condition",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds without Underhanded Upper Hand and Crackshot but still Hidden Opportunity use Vanish into Ambush when Audacity is not active and under max Opportunity stacks",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & talent.hidden_opportunity.enabled & ! buff.audacity.up & buff.opportunity.stack < buff.opportunity.max_stack & variable.ambush_condition",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds without Underhanded Upper Hand, Crackshot, and Hidden Opportunity but with Fatebound use Vanish at five stacks of either Fatebound coin in order to proc the Lucky Coin if it's not already active, and otherwise continue to Vanish into a Dispatch to proc Double Jeopardy on a biased coin",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & talent.fateful_ending.enabled & ( ! buff.fatebound_lucky_coin.up & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 ) || buff.fatebound_lucky_coin.up & ! cooldown.between_the_eyes.ready )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds with none of the above can use Vanish to maintain Take 'em By Surprise",
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & ! talent.fateful_ending.enabled & talent.take_em_by_surprise.enabled & ! buff.take_em_by_surprise.up",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition & ! cooldown.vanish.ready",
["action"] = "shadowmeld",
},
},
["finish"] = {
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins, and avoid overriding Greenskins",
["criteria"] = "! talent.crackshot.enabled & ( buff.between_the_eyes.remains < 4 || talent.improved_between_the_eyes.enabled || talent.greenskins_wickers.enabled ) & ! buff.greenskins_wickers.up",
},
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "Crackshot builds use Between the Eyes outside of Stealth to refresh the Between the Eyes crit buff or on cd with the Ruthless Precision buff",
["criteria"] = "talent.crackshot.enabled & ( buff.ruthless_precision.up || buff.between_the_eyes.remains < 4 )",
},
{
["action"] = "cold_blood",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
},
},
["version"] = 20241025,
["warnings"] = "The import for 'finish' required some automated changes.\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 1: Converted 'talent.improved_between_the_eyes' to 'talent.improved_between_the_eyes.enabled' (1x).\nLine 1: Converted 'talent.greenskins_wickers' to 'talent.greenskins_wickers.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 3: Converted 'rtb_buffs.will_lose.buried_treasure' to 'rtb_buffs_will_lose_buff.buried_treasure' (1x).\nLine 3: Converted 'rtb_buffs.will_lose.grand_melee' to 'rtb_buffs_will_lose_buff.grand_melee' (1x).\nLine 4: Converted 'talent.loaded_dice' to 'talent.loaded_dice.enabled' (1x).\nLine 4: Converted 'rtb_buffs.will_lose.broadside' to 'rtb_buffs_will_lose_buff.broadside' (1x).\nLine 4: Converted 'rtb_buffs.will_lose.ruthless_precision' to 'rtb_buffs_will_lose_buff.ruthless_precision' (1x).\nLine 4: Converted 'rtb_buffs.will_lose.true_bearing' to 'rtb_buffs_will_lose_buff.true_bearing' (1x).\nLine 5: Converted 'talent.supercharger' to 'talent.supercharger.enabled' (1x).\nLine 6: Converted 'talent.supercharger' to 'talent.supercharger.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 7: Converted 'talent.improved_ambush' to 'talent.improved_ambush.enabled' (1x).\nLine 8: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 8: Converted 'talent.hand_of_fate' to 'talent.hand_of_fate.enabled' (1x).\nLine 8: Converted 'talent.flawless_form' to 'talent.flawless_form.enabled' (1x).\nLine 8: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 4: Converted 'talent.keep_it_rolling' to 'talent.keep_it_rolling.enabled' (1x).\nLine 4: Converted 'talent.loaded_dice' to 'talent.loaded_dice.enabled' (1x).\nLine 6: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\n\nThe import for 'stealth' required some automated changes.\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 1: Converted 'talent.improved_adrenaline_rush' to 'talent.improved_adrenaline_rush.enabled' (1x).\nLine 2: Converted 'trinket.1.is.scroll_of_momentum' to 'trinket.t1.is.scroll_of_momentum' (1x).\nLine 2: Converted 'trinket.2.is.scroll_of_momentum' to 'trinket.t2.is.scroll_of_momentum' (1x).\nLine 4: Converted 'talent.deft_maneuvers' to 'talent.deft_maneuvers.enabled' (1x).\nLine 21: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 22: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\n\nThe import for 'stealth_cds' required some automated changes.\nLine 1: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 1: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 1: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 2: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 2: Converted 'talent.subterfuge' to 'talent.subterfuge.enabled' (1x).\nLine 2: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 2: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 3: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 4: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 4: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 5: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 5: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 5: Converted 'talent.fateful_ending' to 'talent.fateful_ending.enabled' (1x).\nLine 6: Converted 'talent.underhanded_upper_hand' to 'talent.underhanded_upper_hand.enabled' (1x).\nLine 6: Converted 'talent.crackshot' to 'talent.crackshot.enabled' (1x).\nLine 6: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 6: Converted 'talent.fateful_ending' to 'talent.fateful_ending.enabled' (1x).\nLine 6: Converted 'talent.take_em_by_surprise' to 'talent.take_em_by_surprise.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 1: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 2: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 2: Converted 'talent.audacity' to 'talent.audacity.enabled' (1x).\nLine 2: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\nLine 3: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 4: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 4: Converted 'talent.quick_draw' to 'talent.quick_draw.enabled' (1x).\nLine 4: Converted 'talent.ruthlessness' to 'talent.ruthlessness.enabled' (1x).\nLine 5: Converted 'talent.fan_the_hammer' to 'talent.fan_the_hammer.enabled' (1x).\nLine 7: Converted 'talent.hidden_opportunity' to 'talent.hidden_opportunity.enabled' (1x).\n\nImported 7 action lists.\n",
["spec"] = 260,
["basedOn"] = "Outlaw",
["profile"] = "actions.precombat+=/apply_poison\nactions.precombat+=/use_item,name=imperfect_ascendancy_serum\nactions.precombat+=/stealth,precombat_seconds=2\n# Builds with Keep it Rolling prepull Adrenaline Rush before Roll the Bones to consume Loaded Dice immediately instead of on the next pandemic roll\nactions.precombat+=/adrenaline_rush,precombat_seconds=2,if=talent.improved_adrenaline_rush&buff.adrenaline_rush.down&talent.keep_it_rolling&talent.loaded_dice\nactions.precombat+=/roll_the_bones,precombat_seconds=2,if=buff.roll_the_bones.down\nactions.precombat+=/adrenaline_rush,precombat_seconds=1,if=talent.improved_adrenaline_rush&buff.adrenaline_rush.down\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Variables that define the reroll rules for Roll the Bones  Default rule: reroll if the only buff that will be rolled away is Buried Treasure, or Grand Melee in single target without upcoming adds\nactions+=/variable,name=rtb_reroll,value=rtb_buffs.will_lose=(rtb_buffs.will_lose.buried_treasure+rtb_buffs.will_lose.grand_melee&spell_targets.blade_flurry<2)\n# If Loaded Dice is talented, then keep any 1 buff from Roll the Bones but roll it into 2 buffs when Loaded Dice is active. Also reroll 2 buffs with loaded dice up if broadside, ruthless precision and true bearing are all missing and loaded dice is up\nactions+=/variable,name=rtb_reroll,if=talent.loaded_dice,value=rtb_buffs.will_lose<=buff.loaded_dice.up||buff.loaded_dice.up&rtb_buffs.will_lose<3&(!rtb_buffs.will_lose.broadside||buff.broadside.remains<11)&(!rtb_buffs.will_lose.ruthless_precision||buff.ruthless_precision.remains<11)&(!rtb_buffs.will_lose.true_bearing||buff.true_bearing.remains<11)\n# If all active Roll the Bones buffs are ahead of its container buff and have under 40s remaining or with supercharger talented, then reroll again with Loaded Dice active in an attempt to get even more buffs\nactions+=/variable,name=rtb_reroll,value=variable.rtb_reroll&rtb_buffs.longer=0||rtb_buffs.normal=0&rtb_buffs.longer>=1&buff.loaded_dice.up&(rtb_buffs<6&rtb_buffs.max_remains<39||talent.supercharger)\n# Non supercharger builds should avoid rerolls when we will not have time remaining on the fight or add wave to recoup the opportunity cost of the global\nactions+=/variable,name=rtb_reroll,op=reset,if=!talent.supercharger&!(raid_event.adds.remains>12||raid_event.adds.up&(raid_event.adds.in-raid_event.adds.remains)<6||target.time_to_die>12)||fight_remains<12&boss\nactions+=/variable,name=ambush_condition,value=(talent.hidden_opportunity||combo_points.deficit>=2+talent.improved_ambush+buff.broadside.up)&energy>=50\n# Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot. With the hero trees, Hidden Opportunity builds also finish at -2 if Audacity or Opportunity is active\nactions+=/variable,name=finish_condition,value=combo_points>=cp_max_spend-1-(stealthed.all&talent.crackshot||(talent.hand_of_fate||talent.flawless_form)&talent.hidden_opportunity&(buff.audacity.up||buff.opportunity.up))\n# With multiple targets, this variable is checked to decide whether some CDs should be synced with Blade Flurry\nactions+=/variable,name=blade_flurry_sync,value=spell_targets.blade_flurry<2&raid_event.adds.in>20||buff.blade_flurry.remains>gcd\nactions+=/call_action_list,name=cds\n# High priority stealth list, will fall through if no conditions are met\nactions+=/call_action_list,name=stealth,strict=1,if=stealthed.all\nactions+=/call_action_list,name=finish,strict=1,if=variable.finish_condition\nactions+=/call_action_list,name=build\nactions+=/arcane_torrent,if=energy.base_deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n## Builders\n# High priority Ambush for Hidden Opportunity builds\nactions.build+=/ambush,if=talent.hidden_opportunity&buff.audacity.up\n# With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&talent.audacity&talent.hidden_opportunity&buff.opportunity.up&!buff.audacity.up\n# With Fan the Hammer, consume Opportunity as a higher priority if at max stacks or if it will expire\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(buff.opportunity.stack>=buff.opportunity.max_stack||buff.opportunity.remains<2)\n# With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(combo_points.deficit>=(1+(talent.quick_draw+buff.broadside.up)*(talent.fan_the_hammer.rank+1))||combo_points<=talent.ruthlessness)\n# If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw\nactions.build+=/pistol_shot,if=!talent.fan_the_hammer&buff.opportunity.up&(energy.base_deficit>energy.regen*1.5||combo_points.deficit<=1+buff.broadside.up||talent.quick_draw.enabled||talent.audacity.enabled&!buff.audacity.up)\n# Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds\nactions.build+=/pool_resource,for_next=1\nactions.build+=/ambush,if=talent.hidden_opportunity\nactions.build+=/sinister_strike\n\n## Cooldowns\n# Use Adrenaline Rush if it is not active and the finisher condition is not met, with Improved Adrenaline Rush you can also refresh it with 2cp or less if Loaded Dice is not already up  Adrenaline rush if buff is missing unless you can finish or with 2 or less cp if loaded dice is missing\nactions.cds+=/adrenaline_rush,if=!buff.adrenaline_rush.up&(!variable.finish_condition||!talent.improved_adrenaline_rush)||talent.improved_adrenaline_rush&combo_points<=2&!buff.loaded_dice.up\n# Sprint to further benefit from Scroll of Momentum trinket\nactions.cds+=/sprint,if=(trinket.1.is.scroll_of_momentum||trinket.2.is.scroll_of_momentum)&buff.full_momentum.up\n# Maintain Blade Flurry on 2+ targets\nactions.cds+=/blade_flurry,if=spell_targets>=2&buff.blade_flurry.remains<gcd\n# With Deft Maneuvers, use Blade Flurry on cooldown at 5+ targets, or at 3-4 targets if missing combo points equal to the amount given\nactions.cds+=/blade_flurry,if=talent.deft_maneuvers&!variable.finish_condition&(spell_targets>=3&combo_points.deficit=spell_targets+buff.broadside.up||spell_targets>=5)\n# Use Roll the Bones if reroll conditions are met, or with no buffs\nactions.cds+=/roll_the_bones,if=variable.rtb_reroll||rtb_buffs=0\n# Use Keep it Rolling with any 4 buffs. If Broadside is not active, then wait until just before the lowest buff expires in an attempt to obtain it from Count the Odds.\nactions.cds+=/keep_it_rolling,if=rtb_buffs>=4&(rtb_buffs.min_remains<2||buff.broadside.up)\nactions.cds+=/ghostly_strike,if=combo_points<cp_max_spend\n# Trinkets that should not be used during stealth and have higher priority than entering stealth\nactions.cds+=/use_item,name=manic_grieftorch,if=!stealthed.all&buff.between_the_eyes.up||fight_remains<=5\nactions.cds+=/use_item,name=beacon_to_the_beyond,if=!stealthed.all&buff.between_the_eyes.up||boss&fight_remains<=5\nactions.cds+=/use_item,name=imperfect_ascendancy_serum,if=!stealthed.all||boss&fight_remains<=22\nactions.cds+=/use_item,name=mad_queens_mandate,if=!stealthed.all||boss&fight_remains<=5\n# Killing Spree has higher priority than stealth cooldowns\nactions.cds+=/killing_spree,if=variable.finish_condition&!stealthed.all\n# Crackshot builds use stealth cooldowns if not already in stealth\nactions.cds+=/call_action_list,name=stealth_cds,if=!stealthed.all\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&(energy.base_deficit>=150||fight_remains<charges*6)\n# Use Blade Rush at minimal energy outside of stealth\nactions.cds+=/blade_rush,if=energy.base_time_to_max>4&!stealthed.all\nactions.cds+=/potion,if=buff.bloodlust.up||boss&fight_remains<30||buff.adrenaline_rush.up\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\nactions.cds+=/use_items,slots=trinket1,if=buff.between_the_eyes.up||trinket.1.has_stat.any_dps||boss&fight_remains<=20\nactions.cds+=/use_items,slots=trinket2,if=buff.between_the_eyes.up||trinket.2.has_stat.any_dps||boss&fight_remains<=20\n\n## Finishers\n# Use Between the Eyes to keep the crit buff up, but on cooldown if Improved/Greenskins, and avoid overriding Greenskins\nactions.finish+=/between_the_eyes,if=!talent.crackshot&(buff.between_the_eyes.remains<4||talent.improved_between_the_eyes||talent.greenskins_wickers)&!buff.greenskins_wickers.up\n# Crackshot builds use Between the Eyes outside of Stealth to refresh the Between the Eyes crit buff or on cd with the Ruthless Precision buff\nactions.finish+=/between_the_eyes,if=talent.crackshot&(buff.ruthless_precision.up||buff.between_the_eyes.remains<4)\nactions.finish+=/cold_blood\nactions.finish+=/coup_de_grace\nactions.finish+=/dispatch\n\n## Stealth\nactions.stealth+=/cold_blood,if=variable.finish_condition\n# Ensure Crackshot BtE is not skipped because of low energy\nactions.stealth+=/pool_resource,for_next=1\n# High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld\nactions.stealth+=/between_the_eyes,if=variable.finish_condition&talent.crackshot&(!buff.shadowmeld.up||stealthed.rogue)\nactions.stealth+=/dispatch,if=variable.finish_condition\n# 2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and low CPs, or with Greenskins active\nactions.stealth+=/pistol_shot,if=talent.crackshot&talent.fan_the_hammer.rank>=2&buff.opportunity.stack>=6&(buff.broadside.up&combo_points<=1||buff.greenskins_wickers.up)\nactions.stealth+=/ambush,if=talent.hidden_opportunity\n\n## Stealth Cooldowns\n# Builds with Underhanded Upper Hand and Subterfuge must use Vanish while Adrenaline Rush is active and either BTE on CD with RP up, adrenaline rush about to expire, supercharger buff up, vanish capped on charges or about to cap or fight about to end\nactions.stealth_cds+=/vanish,if=talent.underhanded_upper_hand&talent.subterfuge&talent.crackshot&buff.adrenaline_rush.up&variable.finish_condition&(!cooldown.between_the_eyes.ready&buff.ruthless_precision.up||buff.adrenaline_rush.remains<3||buff.supercharge.up||cooldown.vanish.full_recharge_time<15||boss&fight_remains<8)\n# Builds with Underhanded Upper Hand and Subterfuge but without crackshot use vanish only with Adrenaline Rush active\nactions.stealth_cds+=/vanish,if=talent.underhanded_upper_hand&talent.subterfuge&!talent.crackshot&buff.adrenaline_rush.up&(variable.ambush_condition||!talent.hidden_opportunity)&(!cooldown.between_the_eyes.ready&buff.ruthless_precision.up||buff.ruthless_precision.down||buff.adrenaline_rush.remains<3)\n# Builds without Underhanded Upper Hand but with Crackshot must still use Vanish into Between the Eyes on cooldown\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&talent.crackshot&variable.finish_condition\n# Builds without Underhanded Upper Hand and Crackshot but still Hidden Opportunity use Vanish into Ambush when Audacity is not active and under max Opportunity stacks\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&talent.hidden_opportunity&!buff.audacity.up&buff.opportunity.stack<buff.opportunity.max_stack&variable.ambush_condition\n# Builds without Underhanded Upper Hand, Crackshot, and Hidden Opportunity but with Fatebound use Vanish at five stacks of either Fatebound coin in order to proc the Lucky Coin if it's not already active, and otherwise continue to Vanish into a Dispatch to proc Double Jeopardy on a biased coin\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&talent.fateful_ending&(!buff.fatebound_lucky_coin.up&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)||buff.fatebound_lucky_coin.up&!cooldown.between_the_eyes.ready)\n# Builds with none of the above can use Vanish to maintain Take 'em By Surprise\nactions.stealth_cds+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&!talent.fateful_ending&talent.take_em_by_surprise&!buff.take_em_by_surprise.up\nactions.stealth_cds+=/shadowmeld,if=variable.finish_condition&!cooldown.vanish.ready",
},
["Holy Priest"] = {
["builtIn"] = true,
["date"] = 20240411,
["spec"] = 257,
["desc"] = "2023-05-03:  Updated from SimC.\n\n2023-04-05:  Updated from SimC.",
["lists"] = {
["divine_favor_chastise_active"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "smite",
["cycle_targets"] = 1,
["criteria"] = "spell_targets.holy_nova >= 2",
["description"] = "We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["divine_image"] = {
{
["enabled"] = true,
["criteria"] = "buff.answered_prayers.down & ! ( cooldown.holy_word_sanctify.up || cooldown.holy_word_serenity.up || cooldown.holy_word_chastise.up )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["action"] = "holy_word_sanctify",
["description"] = "line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting",
["line_cd"] = "9",
},
{
["enabled"] = true,
["action"] = "holy_word_serenity",
["line_cd"] = "9",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["divine_favor_filler"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["description"] = "We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word",
["criteria"] = "( cooldown.apotheosis.remains < cooldown.divine_word.remains ) || ( cooldown.holy_word_chastise.duration_expected <= cooldown.divine_word.remains )",
["action"] = "holy_word_chastise",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["divine_favor_chastise_prep"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "empyreal_exec_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "apotheosis_exec_time: Store how long Apotheosis will take to execute",
["criteria"] = "talent.apotheosis.enabled",
["var_name"] = "apotheosis_exec_time",
["action"] = "variable",
["value_else"] = "0",
["value"] = "action.apotheosis.execute_time",
},
{
["enabled"] = true,
["description"] = "Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).",
["criteria"] = "( cooldown.holy_word_chastise.remains > cooldown.divine_word.remains ) & ( cooldown.divine_word.remains <= ( variable.empyreal_exec_time + variable.apotheosis_exec_time ) )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze",
["criteria"] = "cooldown.holy_word_chastise.up & ( ! talent.empyreal_blaze.enabled || buff.empyreal_blaze.up )",
["action"] = "divine_word",
},
{
["enabled"] = true,
["description"] = "Holy word chastise to trigger divine favor: chastise",
["criteria"] = "buff.divine_word.up",
["action"] = "holy_word_chastise",
},
},
["cooldowns"] = {
{
["action"] = "mindbender",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Sync PI with divine favor: chastise if we took divine word",
["criteria"] = "( ! talent.divine_word.enabled || ( cooldown.divine_word.up & cooldown.holy_word_chastise.up ) )",
["action"] = "power_infusion",
},
{
["enabled"] = true,
["description"] = "Only potion in sync with power infusion",
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "hold trinkets to use with PI",
["criteria"] = "buff.power_infusion.up",
["action"] = "use_items",
},
},
["generic"] = {
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["description"] = "Hold Apotheosis if chastise will be up soon",
["criteria"] = "cooldown.holy_word_chastise.remains > ( gcd.max * 3 )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["action"] = "holy_fire",
["cycle_targets"] = 1,
["criteria"] = "( talent.empyreal_blaze.enabled || talent.harmonious_apparatus.enabled || ! ticking || refreshable ) & ! ( buff.empyreal_blaze.up & ( cooldown.divine_word.up || buff.divine_word.up ) & cooldown.holy_word_chastise.up )",
["description"] = "Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word",
},
{
["enabled"] = true,
["description"] = "Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.",
["criteria"] = "( refreshable || ! ticking ) & ( target.time_to_die >= dot.shadow_word_pain.duration ) & ! buff.divine_favor_chastise.up & ! buff.apotheosis.up",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Prepare to enter divine favor: chastise",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_chastise_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Enter Divine Favor rotation with divine favor: chastise buff up",
["strict"] = 1,
["criteria"] = "buff.divine_favor_chastise.up",
["list_name"] = "divine_favor_chastise_active",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine favor fillers rotation with buff down",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_filler",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine image rotation with divine image talented",
["strict"] = 1,
["criteria"] = "talent.divine_image.enabled",
["list_name"] = "divine_image",
},
{
["enabled"] = true,
["description"] = "Otherwise generic rotation",
["action"] = "run_action_list",
["list_name"] = "generic",
},
},
},
["version"] = 20240411,
["warnings"] = "The import for 'cooldowns' required some automated changes.\nLine 2: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 1: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 1: Converted 'talent.harmonious_apparatus' to 'talent.harmonious_apparatus.enabled' (1x).\nLine 3: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 3: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 5: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 5: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 6: Converted 'talent.divine_image' to 'talent.divine_image.enabled' (1x).\n\nThe import for 'divine_favor_chastise_prep' required some automated changes.\nLine 2: Converted 'talent.apotheosis' to 'talent.apotheosis.enabled' (1x).\nLine 4: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\n\nImported 8 action lists.\n",
["profile"] = "actions.precombat+=/power_word_fortitude\n\n# Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word\nactions+=/holy_fire,cycle_targets=1,if=(talent.empyreal_blaze||talent.harmonious_apparatus||!ticking||refreshable)&!(buff.empyreal_blaze.up&(cooldown.divine_word.up||buff.divine_word.up)&cooldown.holy_word_chastise.up)\n# Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.\nactions+=/shadow_word_pain,if=(refreshable||!ticking)&(target.time_to_die>=dot.shadow_word_pain.duration)&!buff.divine_favor_chastise.up&!buff.apotheosis.up\n# Prepare to enter divine favor: chastise\nactions+=/call_action_list,name=divine_favor_chastise_prep,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Enter Divine Favor rotation with divine favor: chastise buff up\nactions+=/run_action_list,name=divine_favor_chastise_active,strict=1,if=buff.divine_favor_chastise.up\n# Run divine favor fillers rotation with buff down\nactions+=/run_action_list,name=divine_favor_filler,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Run divine image rotation with divine image talented\nactions+=/run_action_list,name=divine_image,strict=1,if=talent.divine_image\n# Otherwise generic rotation\nactions+=/run_action_list,name=generic\n\nactions.divine_favor_chastise_prep+=/variable,name=empyreal_exec_time,op=set,value=0\n# apotheosis_exec_time: Store how long Apotheosis will take to execute\nactions.divine_favor_chastise_prep+=/variable,name=apotheosis_exec_time,op=setif,condition=talent.apotheosis,value=action.apotheosis.execute_time,value_else=0\n# Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).\nactions.divine_favor_chastise_prep+=/apotheosis,if=(cooldown.holy_word_chastise.remains>cooldown.divine_word.remains)&(cooldown.divine_word.remains<=(variable.empyreal_exec_time+variable.apotheosis_exec_time))\n# Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze\nactions.divine_favor_chastise_prep+=/divine_word,if=cooldown.holy_word_chastise.up&(!talent.empyreal_blaze||buff.empyreal_blaze.up)\n# Holy word chastise to trigger divine favor: chastise\nactions.divine_favor_chastise_prep+=/holy_word_chastise,if=buff.divine_word.up\n\nactions.divine_favor_chastise_active+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_chastise_active+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_chastise_active+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_chastise_active+=/mindgames\nactions.divine_favor_chastise_active+=/shadow_word_death,if=target.health.pct<20\nactions.divine_favor_chastise_active+=/holy_word_chastise\n# We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage\nactions.divine_favor_chastise_active+=/smite,cycle_targets=1,if=spell_targets.holy_nova>=2\nactions.divine_favor_chastise_active+=/smite\n\nactions.divine_favor_filler+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_filler+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_filler+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_filler+=/mindgames\nactions.divine_favor_filler+=/shadow_word_death,if=target.health.pct<20\n# We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word\nactions.divine_favor_filler+=/holy_word_chastise,if=(cooldown.apotheosis.remains<cooldown.divine_word.remains)||(cooldown.holy_word_chastise.duration_expected<=cooldown.divine_word.remains)\nactions.divine_favor_filler+=/smite\n\nactions.divine_image+=/apotheosis,if=buff.answered_prayers.down&!(cooldown.holy_word_sanctify.up||cooldown.holy_word_serenity.up||cooldown.holy_word_chastise.up)\n# line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting\nactions.divine_image+=/holy_word_sanctify,line_cd=9\nactions.divine_image+=/holy_word_serenity,line_cd=9\nactions.divine_image+=/holy_word_chastise\nactions.divine_image+=/halo,if=spell_targets.halo>=2\nactions.divine_image+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_image+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_image+=/mindgames\nactions.divine_image+=/shadow_word_death,if=target.health.pct<20\nactions.divine_image+=/smite\n\nactions.generic+=/holy_word_chastise\n# Hold Apotheosis if chastise will be up soon\nactions.generic+=/apotheosis,if=cooldown.holy_word_chastise.remains>(gcd.max*3)\nactions.generic+=/halo,if=spell_targets.halo>=2\nactions.generic+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.generic+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.generic+=/mindgames\nactions.generic+=/shadow_word_death,if=target.health.pct<20\nactions.generic+=/smite\n\nactions.cooldowns+=/shadowfiend\n# Sync PI with divine favor: chastise if we took divine word\nactions.cooldowns+=/power_infusion,if=(!talent.divine_word||(cooldown.divine_word.up&cooldown.holy_word_chastise.up))\n# Only potion in sync with power infusion\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# hold trinkets to use with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up",
["author"] = "Kapulani",
},
["Fury"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20241022.1,
["author"] = "SimC",
["desc"] = "2024-10-22: 11.0.5 update; enable pre-Hero talents\n\n2024-10-21: SimC update\n\n2024-10-06: Fix trinket/variables order\n\n2024-09-03, 09-05, 09-10, 09-22: SimC update\n\n2024-08-25: Update using Icy-Veins\n\n2024-08-15: Sim update\n\n2024-07-30: Sim update\n\n2024-07-23: The War Within",
["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/variable,name=treacherous_transmitter_precombat_cast,value=2\nactions.precombat+=/use_item,name=treacherous_transmitter\nactions.precombat+=/recklessness,if=!equipped.fyralath_the_dreamrender\nactions.precombat+=/avatar,if=!talent.titans_torment\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0||trinket.1.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0||trinket.2.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/heroic_leap,if=movement.distance>25\nactions+=/potion\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/lights_judgment,if=variable.on_gcd_racials\nactions+=/bag_of_tricks,if=variable.on_gcd_racials\nactions+=/berserking,if=buff.recklessness.up\nactions+=/blood_fury\nactions+=/fireblood\nactions+=/ancestral_call\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.avatar.remains>15&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=slayer_ra_st,strict=1,if=talent.slayers_dominance&talent.reckless_abandon&active_enemies=1\nactions+=/run_action_list,name=slayer_am_st,strict=1,if=talent.slayers_dominance&talent.anger_management&active_enemies=1\nactions+=/run_action_list,name=slayer_ra_mt,strict=1,if=talent.slayers_dominance&talent.reckless_abandon&active_enemies>1\nactions+=/run_action_list,name=slayer_am_mt,strict=1,if=talent.slayers_dominance&talent.anger_management&active_enemies>1\nactions+=/run_action_list,name=thane_ra_st,strict=1,if=talent.lightning_strikes&talent.reckless_abandon&active_enemies=1\nactions+=/run_action_list,name=thane_am_st,strict=1,if=(talent.lightning_strikes&talent.anger_management||!talent.slayers_dominance&!talent.lightning_strikes||!talent.reckless_abandon&!talent.reckless_abandon)&active_enemies=1\nactions+=/run_action_list,name=thane_ra_mt,strict=1,if=talent.lightning_strikes&talent.reckless_abandon&active_enemies>1\nactions+=/run_action_list,name=thane_am_mt,strict=1,if=(talent.lightning_strikes&talent.anger_management||!talent.slayers_dominance&!talent.lightning_strikes||!talent.reckless_abandon&!talent.reckless_abandon)&active_enemies>1\n\nactions.slayer_am_st+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.slayer_am_st+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.slayer_am_st+=/thunderous_roar,if=buff.enrage.up\nactions.slayer_am_st+=/champions_spear,if=(buff.enrage.up&talent.titans_torment&cooldown.avatar.remains<gcd)||(buff.enrage.up&!talent.titans_torment)\nactions.slayer_am_st+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer_am_st+=/execute,if=debuff.marked_for_execution.stack=3||buff.ashen_juggernaut.remains<2||buff.sudden_death.stack=2&buff.sudden_death.remains<7||buff.sudden_death.remains<2\nactions.slayer_am_st+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.slayer_am_st+=/bladestorm,if=buff.enrage.up&(cooldown.recklessness.remains>=9||cooldown.avatar.remains>=9)\nactions.slayer_am_st+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer_am_st+=/rampage,if=!buff.enrage.up\nactions.slayer_am_st+=/raging_blow,if=buff.opportunist.up\nactions.slayer_am_st+=/bloodthirst,if=target.health.pct<35&talent.vicious_contempt&buff.bloodcraze.stack>=2\nactions.slayer_am_st+=/rampage,if=action.raging_blow.charges<=1&rage>=115\nactions.slayer_am_st+=/bloodthirst,if=buff.bloodcraze.stack>3||crit_pct_current>=85\nactions.slayer_am_st+=/raging_blow\nactions.slayer_am_st+=/bloodthirst\nactions.slayer_am_st+=/execute\nactions.slayer_am_st+=/rampage\nactions.slayer_am_st+=/onslaught,if=talent.tenderize\nactions.slayer_am_st+=/whirlwind,if=talent.meat_cleaver\nactions.slayer_am_st+=/slam\nactions.slayer_am_st+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_ra_st+=/recklessness,if=cooldown.avatar.remains<1&talent.titans_torment||!talent.titans_torment\nactions.slayer_ra_st+=/rampage,if=!buff.enrage.up\nactions.slayer_ra_st+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.slayer_ra_st+=/thunderous_roar,if=buff.enrage.up\nactions.slayer_ra_st+=/champions_spear,if=(buff.enrage.up&talent.titans_torment&cooldown.avatar.remains<gcd)||(buff.enrage.up&!talent.titans_torment)\nactions.slayer_ra_st+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer_ra_st+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.slayer_ra_st+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=9\nactions.slayer_ra_st+=/execute,if=debuff.marked_for_execution.stack=3||buff.ashen_juggernaut.remains<2||buff.sudden_death.stack=2&buff.sudden_death.remains<7||buff.sudden_death.remains<2\nactions.slayer_ra_st+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer_ra_st+=/bloodbath,if=crit_pct_current>=85||buff.bloodcraze.stack>=3\nactions.slayer_ra_st+=/crushing_blow\nactions.slayer_ra_st+=/onslaught,if=talent.tenderize\nactions.slayer_ra_st+=/bloodbath,if=target.health.pct<35&talent.vicious_contempt\nactions.slayer_ra_st+=/rampage,if=rage>=115\nactions.slayer_ra_st+=/raging_blow\nactions.slayer_ra_st+=/bloodbath\nactions.slayer_ra_st+=/rampage\nactions.slayer_ra_st+=/bloodthirst\nactions.slayer_ra_st+=/execute\nactions.slayer_ra_st+=/onslaught\nactions.slayer_ra_st+=/whirlwind,if=talent.meat_cleaver\nactions.slayer_ra_st+=/slam\nactions.slayer_ra_st+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_am_mt+=/recklessness\nactions.slayer_am_mt+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.slayer_am_mt+=/thunderous_roar,if=buff.enrage.up\nactions.slayer_am_mt+=/champions_spear,if=(buff.enrage.up&talent.titans_torment&cooldown.avatar.remains<gcd)||(buff.enrage.up&!talent.titans_torment)\nactions.slayer_am_mt+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer_am_mt+=/whirlwind,if=buff.meat_cleaver.stack=0&talent.meat_cleaver\nactions.slayer_am_mt+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.slayer_am_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.slayer_am_mt+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=5\nactions.slayer_am_mt+=/onslaught,if=talent.tenderize\nactions.slayer_am_mt+=/execute,if=buff.enrage.up&debuff.marked_for_execution.stack=3\nactions.slayer_am_mt+=/rampage,if=!buff.enrage.up\nactions.slayer_am_mt+=/bloodthirst\nactions.slayer_am_mt+=/rampage,if=buff.slaughtering_strikes.stack>=2\nactions.slayer_am_mt+=/raging_blow\nactions.slayer_am_mt+=/execute,if=buff.enrage.up\nactions.slayer_am_mt+=/rampage\nactions.slayer_am_mt+=/onslaught\nactions.slayer_am_mt+=/whirlwind\nactions.slayer_am_mt+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_ra_mt+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||!talent.titans_torment\nactions.slayer_ra_mt+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment&buff.enrage.up\nactions.slayer_ra_mt+=/rampage,if=!buff.enrage.up&!talent.titans_torment\nactions.slayer_ra_mt+=/thunderous_roar,if=buff.enrage.up\nactions.slayer_ra_mt+=/champions_spear,if=(buff.enrage.up&talent.titans_torment&cooldown.avatar.remains<gcd)||(buff.enrage.up&!talent.titans_torment)\nactions.slayer_ra_mt+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer_ra_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.slayer_ra_mt+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=9&buff.enrage.remains>3\nactions.slayer_ra_mt+=/whirlwind,if=buff.meat_cleaver.stack=0&talent.meat_cleaver\nactions.slayer_ra_mt+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.slayer_ra_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up||!buff.enrage.up\nactions.slayer_ra_mt+=/bladestorm,if=buff.enrage.up&cooldown.avatar.remains>=9&buff.enrage.remains>3\nactions.slayer_ra_mt+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer_ra_mt+=/rampage,if=!buff.enrage.up\nactions.slayer_ra_mt+=/bloodbath,if=active_enemies>=6\nactions.slayer_ra_mt+=/crushing_blow\nactions.slayer_ra_mt+=/bloodbath\nactions.slayer_ra_mt+=/bloodthirst,if=active_enemies>=6\nactions.slayer_ra_mt+=/execute,if=buff.enrage.up&debuff.marked_for_execution.up\nactions.slayer_ra_mt+=/onslaught,if=talent.tenderize\nactions.slayer_ra_mt+=/rampage,if=rage>115\nactions.slayer_ra_mt+=/raging_blow,if=talent.slaughtering_strikes\nactions.slayer_ra_mt+=/onslaught\nactions.slayer_ra_mt+=/bloodthirst\nactions.slayer_ra_mt+=/raging_blow\nactions.slayer_ra_mt+=/whirlwind\nactions.slayer_ra_mt+=/storm_bolt,if=buff.bladestorm.up\n\nactions.thane_am_st+=/recklessness,if=talent.anger_management||!talent.titans_torment\nactions.thane_am_st+=/thunder_blast,if=buff.enrage.up\nactions.thane_am_st+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.thane_am_st+=/ravager\nactions.thane_am_st+=/thunderous_roar,if=buff.enrage.up\nactions.thane_am_st+=/champions_spear,if=buff.enrage.up&(cooldown.avatar.remains<gcd||!talent.titans_torment)\nactions.thane_am_st+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane_am_st+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane_am_st+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane_am_st+=/bladestorm,if=buff.enrage.up&talent.unhinged\nactions.thane_am_st+=/onslaught,if=talent.tenderize\nactions.thane_am_st+=/rampage\nactions.thane_am_st+=/bloodthirst,if=talent.vicious_contempt&target.health.pct<35&buff.bloodcraze.stack>=2||!dot.ravager.remains&buff.bloodcraze.stack>=3\nactions.thane_am_st+=/raging_blow\nactions.thane_am_st+=/execute,if=talent.ashen_juggernaut\nactions.thane_am_st+=/bloodthirst\nactions.thane_am_st+=/execute\nactions.thane_am_st+=/thunder_clap\n\nactions.thane_ra_st+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.thane_ra_st+=/thunder_blast,if=buff.enrage.up\nactions.thane_ra_st+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment&buff.enrage.up\nactions.thane_ra_st+=/ravager\nactions.thane_ra_st+=/thunderous_roar,if=buff.enrage.up\nactions.thane_ra_st+=/champions_spear,if=buff.enrage.up&(cooldown.avatar.remains<gcd||!talent.titans_torment)\nactions.thane_ra_st+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane_ra_st+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane_ra_st+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane_ra_st+=/bladestorm,if=buff.enrage.up&talent.unhinged\nactions.thane_ra_st+=/rampage,if=!buff.enrage.up\nactions.thane_ra_st+=/bloodbath,if=talent.vicious_contempt&target.health.pct<35||buff.bloodcraze.stack>=3\nactions.thane_ra_st+=/crushing_blow\nactions.thane_ra_st+=/onslaught,if=talent.tenderize\nactions.thane_ra_st+=/rampage,if=rage>=115\nactions.thane_ra_st+=/raging_blow\nactions.thane_ra_st+=/bloodbath\nactions.thane_ra_st+=/bloodthirst,if=buff.enrage.up&!buff.burst_of_power.up\nactions.thane_ra_st+=/rampage\nactions.thane_ra_st+=/execute\nactions.thane_ra_st+=/onslaught\nactions.thane_ra_st+=/bloodthirst\nactions.thane_ra_st+=/thunder_clap\nactions.thane_ra_st+=/whirlwind,if=talent.meat_cleaver\nactions.thane_ra_st+=/slam\n\nactions.thane_am_mt+=/recklessness,if=(!talent.anger_management&cooldown.avatar.remains<1&talent.titans_torment)||talent.anger_management||!talent.titans_torment\nactions.thane_am_mt+=/thunder_blast,if=buff.enrage.up\nactions.thane_am_mt+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment\nactions.thane_am_mt+=/thunder_clap,if=buff.meat_cleaver.stack=0&talent.meat_cleaver\nactions.thane_am_mt+=/thunderous_roar,if=buff.enrage.up\nactions.thane_am_mt+=/ravager\nactions.thane_am_mt+=/champions_spear,if=buff.enrage.up\nactions.thane_am_mt+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane_am_mt+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane_am_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane_am_mt+=/bladestorm,if=buff.enrage.up\nactions.thane_am_mt+=/onslaught,if=talent.tenderize\nactions.thane_am_mt+=/rampage\nactions.thane_am_mt+=/bloodthirst\nactions.thane_am_mt+=/thunder_clap,if=active_enemies>=3\nactions.thane_am_mt+=/raging_blow\nactions.thane_am_mt+=/thunder_clap\nactions.thane_am_mt+=/onslaught\nactions.thane_am_mt+=/execute\nactions.thane_am_mt+=/whirlwind\nactions.thane_am_mt+=/slam\n\nactions.thane_ra_mt+=/recklessness,if=cooldown.avatar.remains<1&talent.titans_torment||!talent.titans_torment\nactions.thane_ra_mt+=/thunder_blast,if=buff.enrage.up\nactions.thane_ra_mt+=/avatar,if=(talent.titans_torment&(buff.enrage.up||talent.titanic_rage)&(debuff.champions_might.up||!talent.champions_might))||!talent.titans_torment&buff.enrage.up\nactions.thane_ra_mt+=/thunder_clap,if=buff.meat_cleaver.stack=0&talent.meat_cleaver\nactions.thane_ra_mt+=/thunderous_roar,if=buff.enrage.up\nactions.thane_ra_mt+=/ravager\nactions.thane_ra_mt+=/champions_spear,if=buff.enrage.up\nactions.thane_ra_mt+=/odyns_fury,if=dot.odyns_fury_torment_mh.remains<1&(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane_ra_mt+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane_ra_mt+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane_ra_mt+=/bladestorm,if=buff.enrage.up\nactions.thane_ra_mt+=/onslaught,if=talent.tenderize\nactions.thane_ra_mt+=/rampage,if=!buff.enrage.up\nactions.thane_ra_mt+=/bloodbath\nactions.thane_ra_mt+=/crushing_blow\nactions.thane_ra_mt+=/rampage,if=buff.recklessness.up||rage>115\nactions.thane_ra_mt+=/onslaught,if=talent.tenderize\nactions.thane_ra_mt+=/bloodthirst\nactions.thane_ra_mt+=/thunder_clap\nactions.thane_ra_mt+=/raging_blow\nactions.thane_ra_mt+=/onslaught\nactions.thane_ra_mt+=/rampage\nactions.thane_ra_mt+=/execute\nactions.thane_ra_mt+=/whirlwind\n\n# Trinkets\n## actions.trinkets+=/do_treacherous_transmitter_task\nactions.trinkets+=/use_item,name=treacherous_transmitter,if=variable.adds_remain||variable.st_planning\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&((talent.titans_torment&cooldown.avatar.ready)||(buff.avatar.up&!talent.titans_torment))&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&((talent.titans_torment&cooldown.avatar.ready)||(buff.avatar.up&!talent.titans_torment))&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,slot=main_hand,if=!equipped.fyralath_the_dreamrender&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1&(raid_event.adds.in>15||!raid_event.adds.exists)\nactions.variables+=/variable,name=adds_remain,value=active_enemies>=2&(!raid_event.adds.exists||raid_event.adds.exists&raid_event.adds.remains>5)\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\nactions.variables+=/variable,name=on_gcd_racials,value=buff.recklessness.down&buff.avatar.down&rage<80&buff.bloodbath.down&buff.crushing_blow.down&buff.sudden_death.down&!cooldown.bladestorm.ready&(!cooldown.execute.ready||!variable.execute_phase)",
["version"] = 20241022.1,
["warnings"] = "The import for 'slayer_ra_st' required some automated changes.\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 6: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 7: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 10: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 13: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 14: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 22: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\n\nThe import for 'thane_am_st' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 6: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 7: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 8: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 9: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 10: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 11: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 13: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 15: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\n\nThe import for 'thane_am_mt' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 8: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 9: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 10: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 12: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\n\nThe import for 'slayer_am_st' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 2: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 7: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 9: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 12: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 19: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 20: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\n\nThe import for 'slayer_ra_mt' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 2: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 6: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 7: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 9: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 10: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 11: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 13: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 20: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 22: Converted 'talent.slaughtering_strikes' to 'talent.slaughtering_strikes.enabled' (1x).\n\nThe import for 'thane_ra_mt' required some automated changes.\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 8: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 9: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 10: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 12: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 17: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 13: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 14: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 14: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 15: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 15: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 16: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 16: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 17: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 17: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 18: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 18: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 18: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 18: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 18: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 18: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 19: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 19: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 20: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 20: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 20: Converted 'talent.slayers_dominance' to 'talent.slayers_dominance.enabled' (1x).\nLine 20: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 20: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 20: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 6: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 7: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 8: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 9: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 10: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 11: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 12: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 12: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 13: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 13: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 13: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 13: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 13: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 13: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 13: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 14: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 15: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\n\nThe import for 'slayer_am_mt' required some automated changes.\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 2: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 2: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 2: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 4: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 5: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 6: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 7: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 8: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 10: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\n\nThe import for 'thane_ra_st' required some automated changes.\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 1: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 1: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 3: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 3: Converted 'talent.champions_might' to 'talent.champions_might.enabled' (1x).\nLine 3: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 6: Converted 'talent.titans_torment' to 'talent.titans_torment.enabled' (1x).\nLine 7: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 8: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 9: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 10: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 12: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 14: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 24: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\n\nImported 12 action lists.\n",
["spec"] = 72,
["lists"] = {
["slayer_ra_st"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains < 1 & talent.titans_torment.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & talent.titans_torment.enabled & cooldown.avatar.remains < gcd.max ) || ( buff.enrage.up & ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 9",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3 || buff.ashen_juggernaut.remains < 2 || buff.sudden_death.stack = 2 & buff.sudden_death.remains < 7 || buff.sudden_death.remains < 2",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "crit_pct_current >= 85 || buff.bloodcraze.stack >= 3",
["action"] = "bloodbath",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "rage >= 115",
["action"] = "rampage",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["thane_am_st"] = {
{
["enabled"] = true,
["criteria"] = "talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( cooldown.avatar.remains < gcd.max || ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.vicious_contempt.enabled & target.health.pct < 35 & buff.bloodcraze.stack >= 2 || ! dot.ravager.remains & buff.bloodcraze.stack >= 3",
["action"] = "bloodthirst",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "berserker_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "treacherous_transmitter_precombat_cast",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t1.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0.5",
["var_name"] = "trinket_1_sync",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t2.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["thane_am_mt"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3",
["action"] = "thunder_clap",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["slayer_am_st"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & talent.titans_torment.enabled & cooldown.avatar.remains < gcd.max ) || ( buff.enrage.up & ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3 || buff.ashen_juggernaut.remains < 2 || buff.sudden_death.stack = 2 & buff.sudden_death.remains < 7 || buff.sudden_death.remains < 2",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( cooldown.recklessness.remains >= 9 || cooldown.avatar.remains >= 9 )",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled & buff.bloodcraze.stack >= 2",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "action.raging_blow.charges <= 1 & rage >= 115",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodcraze.stack > 3 || crit_pct_current >= 85",
["action"] = "bloodthirst",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["thane_ra_mt"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.avatar.remains < 1 & talent.titans_torment.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled & buff.enrage.up",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up",
["action"] = "rampage",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up || rage > 115",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "movement.distance > 25",
["action"] = "heroic_leap",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "variable.on_gcd_racials",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "variable.on_gcd_racials",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up",
["action"] = "berserking",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.slayers_dominance.enabled & talent.reckless_abandon.enabled & active_enemies = 1",
["list_name"] = "slayer_ra_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.slayers_dominance.enabled & talent.anger_management.enabled & active_enemies = 1",
["list_name"] = "slayer_am_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.slayers_dominance.enabled & talent.reckless_abandon.enabled & active_enemies > 1",
["list_name"] = "slayer_ra_mt",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.slayers_dominance.enabled & talent.anger_management.enabled & active_enemies > 1",
["list_name"] = "slayer_am_mt",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.lightning_strikes.enabled & talent.reckless_abandon.enabled & active_enemies = 1",
["list_name"] = "thane_ra_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "( talent.lightning_strikes.enabled & talent.anger_management.enabled || ! talent.slayers_dominance.enabled & ! talent.lightning_strikes.enabled || ! talent.reckless_abandon.enabled & ! talent.reckless_abandon.enabled ) & active_enemies = 1",
["list_name"] = "thane_am_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.lightning_strikes.enabled & talent.reckless_abandon.enabled & active_enemies > 1",
["list_name"] = "thane_ra_mt",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "( talent.lightning_strikes.enabled & talent.anger_management.enabled || ! talent.slayers_dominance.enabled & ! talent.lightning_strikes.enabled || ! talent.reckless_abandon.enabled & ! talent.reckless_abandon.enabled ) & active_enemies > 1",
["list_name"] = "thane_am_mt",
},
},
["thane_ra_st"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || talent.anger_management.enabled || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled & buff.enrage.up",
["action"] = "avatar",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( cooldown.avatar.remains < gcd.max || ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "talent.vicious_contempt.enabled & target.health.pct < 35 || buff.bloodcraze.stack >= 3",
["action"] = "bloodbath",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "rage >= 115",
["action"] = "rampage",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ! buff.burst_of_power.up",
["action"] = "bloodthirst",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1 & ( raid_event.adds.in > 15 || ! raid_event.adds.exists )",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies >= 2 & ( ! raid_event.adds.exists || raid_event.adds.exists & raid_event.adds.remains > 5 )",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.recklessness.down & buff.avatar.down & rage < 80 & buff.bloodbath.down & buff.crushing_blow.down & buff.sudden_death.down & ! cooldown.bladestorm.ready & ( ! cooldown.execute.ready || ! variable.execute_phase )",
["var_name"] = "on_gcd_racials",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["description"] = "Trinkets",
["criteria"] = "variable.adds_remain || variable.st_planning",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( ( talent.titans_torment.enabled & cooldown.avatar.ready ) || ( buff.avatar.up & ! talent.titans_torment.enabled ) ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( ( talent.titans_torment.enabled & cooldown.avatar.ready ) || ( buff.avatar.up & ! talent.titans_torment.enabled ) ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["criteria"] = "! equipped.fyralath_the_dreamrender & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["slot"] = "main_hand",
},
},
["slayer_am_mt"] = {
{
["action"] = "recklessness",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & talent.titans_torment.enabled & cooldown.avatar.remains < gcd.max ) || ( buff.enrage.up & ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 5",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up",
["action"] = "rampage",
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.slaughtering_strikes.stack >= 2",
["action"] = "rampage",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "execute",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["slayer_ra_mt"] = {
{
["enabled"] = true,
["criteria"] = "( ! talent.anger_management.enabled & cooldown.avatar.remains < 1 & talent.titans_torment.enabled ) || ! talent.titans_torment.enabled",
["action"] = "recklessness",
},
{
["enabled"] = true,
["criteria"] = "( talent.titans_torment.enabled & ( buff.enrage.up || talent.titanic_rage.enabled ) & ( debuff.champions_might.up || ! talent.champions_might.enabled ) ) || ! talent.titans_torment.enabled & buff.enrage.up",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up & ! talent.titans_torment.enabled",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up & talent.titans_torment.enabled & cooldown.avatar.remains < gcd.max ) || ( buff.enrage.up & ! talent.titans_torment.enabled )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "dot.odyns_fury_torment_mh.remains < 1 & ( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 9 & buff.enrage.remains > 3",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.stack = 0 & talent.meat_cleaver.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up || ! buff.enrage.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & cooldown.avatar.remains >= 9 & buff.enrage.remains > 3",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 6",
["action"] = "bloodbath",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 6",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & debuff.marked_for_execution.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "rage > 115",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "talent.slaughtering_strikes.enabled",
["action"] = "raging_blow",
},
{
["action"] = "onslaught",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
},
},
},
},
},
}

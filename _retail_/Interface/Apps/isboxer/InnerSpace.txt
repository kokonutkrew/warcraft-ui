           Inner Space
          Version 1.16
  (c) 2004-2018 Lavish Software
---------------------------------

1.16 Build 6372
- Direct3D 12 Compatibility update for World of Warcraft

1.16 Build 6368
- Auto-detect and fix broken World of Warcraft Game Profiles from WoW 8.1 update

1.16 Build 6367
- Fallout 76 compatibility update
- Improved cursor clipping behavior
- Added native support for XKeys XK-80 device
- Fixed a crash with Direct3D 12 on AMD graphics
- Fixed a rare crash issue with the new auth system
- Fixed GIF support in Direct3D 9
- LavishGUI: Fixed a bug where selecting Console text could freeze
- LavishGUI 2: 
  * Added anchor, commandbox, radialgauge, radialpanel element types
  * Added Animation support
  * Added Vertex Shader support
  * Fixed Pixel Shaders in Direct3D 9
  * Implemented Opacity support
  * New Event Handler type "animation"
  * Fixed "forward" event handlers defined in a JSOn array
  * Fixed a bug with "code" event handlers defined in a JSON object
  * Improved handling of relative filenames 
  * element now includes "xFactor" "yFactor" "widthFactor" "heightFactor" properties for percentage-based placement
  * lgui2fontstyle now includes "heightFactor" and "heightOffset" properties
  * imagebox now has a "scaleToFit" property
  * Added tree traversal members to lgui2element
  * textbox implements key repeat, Copy, Paste and Cut, and Select All, also available via context menu
  * Fixed textbox cursor behavior
  * Fixed "multiline" in textbox
  * textbox and textblock now include "textScanner" properties
  * Added "json" Text Scanner for basic JSON syntax highlighting, and "character" for basic custom highlighting
  * Added lgui2.LoadArrayFile and lgui2:LoadArrayFile which load elements from a
    JSON Array in a file, instead of a single JSON Object
  * lgui2button properly supports contextMenu
  * LGUI2Layer now fires onMouseOverChanged, onFocusChanged, onMouseCaptureChanged events on its screen
  * Selecting a contextmenu item closes the context menu
  * Item View Generators now support creation from arrays and strings, like Event Handlers
  * New LavishScript types for radialgauge: Added lgui2radialgauge and lgui2radialgaugeneedle
  * New LavishScript types for radialpanel: Added lgui2radialpanel and lgui2radialitem
  * remotecontrols now include "sendForegroundOnly" property
  * Added lgui2anchor, lgui2commandbox types
  * New LavishScript types for Animations: lgui2animationtype lgui2animation lgui2animateargs
  * Added LavishScript enum types: elgui2animationframestate elgui2anchormode
  * Fixed lgui2itemviewgeneratorargs
  * Added lgui2skin:SetTemplate[name,json]
  * Added lgui2element:Clear
  * Added lgui2element:Destroy, which is a shortcut for :Clear:Detach
  * Added lgui2element.XFactor, lgui2element.YFactor, lgui2element.WidthFactor, lgui2element.HeightFactor
  * Added lgui2element:SetLocation[#,#], lgui2element:SetLocationFactor[#,#], lgui2element:SetSize[#,#], lgui2element:SetSizeFactor[#,#]
  * Added lgui2element:SetStyle[name,json] and lgui2element:RemoveStyle[name]
  * Added lgui2element:SetColor[json], lgui2element:SetFont[json]
  * Added lgui2element.Style[name]
  * Added lgui2element.Animation[name] and lgui2element:Animate[json]
  * Added lgui2fontstyle.HeightFactor and lgui2fontstyle.HeightOffset
  * Added lgui2fontstyle:SetHeightFactor[#] and lgui2fontstyle:SetHeightOffset[#]
  * Added lgui2progressbar:SetFillerBrush[json] and lgui2progressbar:SetOverlayBrush[json]
  * Added lgui2brush.VertexShader and lgui2brush:SetVertexShader[json]
  * Added lgui2:RegisterAnimationType[json] and lgui2.AnimationType[name]
  * Added lgui2:LoadTextElementTypesFile[filename], lgui2:LoadTextElementTypesJSON[json], lgui2:LoadTextElementTypeJSON[json]
  * Added bool lgui2imagebox.ScaleToFit and lgui2imagebox:ScaleToFit[bool]
  * Implemented lgui2window and lgui2scrollviewer members and methods
  * lgui2itemlist methods MoveItem, RemoveItem, SetItemSelected, ClearSelection are now properly marked as methods instead of members
  * Fixed bugs with lgui2itemlist:ClearItems
 - LavishScript: 
  * JSON Object keys are now properly escaped when generating JSON output
  * Added string.Escape[bool] where string.Escape[0] (or FALSE) performs standard non-LavishScript escaping
  * Added jsonarray:Add[json]
  * Added jsonvalue:WriteFile[filename], jsonvalue:WriteFile[filename,"multiline"]
  * Added ... system.RegistryValue[hkcu/hklm,key,value], which gives a string for REG_SZ or REG_EXPAND_SZ, or a uint for REG_DWORD

1.16 Build 6336
- The Activate Inner Space window now has a button to switch accounts
- Fixed minor issues with the new auth system

1.16 Build 6335
- Added a New Device Authorization process. To authorize a new device
  to use Inner Space, you will need access to your e-mail address or
  a mobile Authenticator
- Patching system updated. The Patcher window will also get updated 
  with an option to restore a previous build
  * The "Always patch" option is no longer used
- Inner Space now appears in Add/Remove Programs, with Modify (repair) 
  and Uninstall options
- DirectX 12 support
- Corsair K55 RGB Gaming Keyboard support added
- Fixed issues with Windows Application Compatibility
- Fixed a bug with Virtual Files breaking when multiple rules match a file
- Windows 8 compatibility fix
- Compatibility updates for Hearthstone, Lord of the Rings Online, Minecraft, 
  Star Trek Online, World of Tanks and others
- LavishGUI 2:
  * Numerous stability, layout, and other fixes/improvements
  * image element now scales the image to fit
  * videofeed element implemented, including interaction option
  * broadcaster element implemented

1.16 Build 6308
- Fixed a bug that prevented some Virtual Files from working properly
- Fixed a Direct3D 11 display sizing bug introduced in build 6305
- Anarchy Online compatibility updates
- Fixed an R6031 error message that could occur when launching a game

1.16 Build 6305
- World of Warcraft: 
  * Fixed issue with some new effects causing Inner Space UI to disappear
  * Fixed "WoW was unable to start up 3d acceleration" issue
- Wizard101 compatibility update
- Lord of the Rings Online compatibility update, including the legacy client
- Virtual Files system (fileredirect) updated. 
  * The new syntax uses * and ?  wildcards for the filename pattern
  * The matching values are placed in {1} {2} and so on, left to right, for each 
    wildcard. 
  * Absolute file paths are now used in all cases.
  * Each matching rule applies, in the order added (i.e. top to bottom)
  * Examples:   
    fileredirect "*/core_user_*.dat" "{1}/core_user_allsamefile.dat"
	fileredirect "*/core_user_*.dat" "{1}/core_user_{2}-isboxer.dat"
	fileredirect "*/WTF/*" "{1}/WTF/{2}"
	fileredirect "*/Addons.txt" "{1}/Addons-ISBoxer.txt"
  * Backwards compatibility is retained. fileredirect commands that
    do not contain a pattern will exhibit the original behavior. Those 
	ending in / translate from "/folder/" "/folder-other/" to
	"*/folder/*" "{1}/folder-other/{2}". Those not ending in / translate 
	from "filename.txt" "filename-other.txt" to 
	"*filename.txt" "{1}filename-other.txt"

1.16 Build 6294
- World of Warcraft: Game Profiles pointing to wow-64.exe (which no longer exists
  in Battle for Azeroth) now automatically launch wow.exe instead
- The 'Use same-bit game clients' option has been removed

1.16 Build 6293
- LavishGUI 2 and new Input Bindings system!
  - LavishGUI 2 runs side by side with Inner Space's previously existing LavishGUI
    and input systems.
  - Documentation is available on the lavishsoft.com wiki under LavishGUI 2
    http://www.lavishsoft.com/wiki/index.php/LavishGUI_2
- .gifs (including animated) are now supported in Direct3D 9 and 11 modes
- dgVoodoo 2 compatibility update. This third-party utility can now be used with
  Inner Space to support games that use older graphics libraries!
- Neverwinter and Star Trek Online mouse issue fix
- Ragnarok Online keyboard fix
- Runescape compatibility update
- Final Fantasy XIV: Fix for double slash when opening chat with the slash key
- Villagers and Heroes compatibility update
- Archeage compatibility fix
- Fixed an issue with Corsair ST-100 headset
- Corsair K95 RGB Platinum Keyboard support added
- LavishScript 1.100
  * Added support for enums
  * New Object Type: enumtype
  * New Method: lavishscript:RegisterEnum[enumType,bool isFlags] to register an
    enum type (including a LavishScript object type with this name)    
  * New TLO: enumtype Enum[enumType]
  * Example:
    LavishScript:RegisterEnum[eVil]
	Enum[eVil]:SetValue[test,0]
	echo ${Int[0](eVil)}
	-- output is "test", the integer value 0 converted back to its name by eVil
  * Fixed various issues with the JSON parser
  * Added jsonvaluecontainer:ParseFile[filename]
  * Added jsonarray.Get[a,b,c,...] and jsonobject.Get[a,b,c,...] to conveniently 
  retrieve values that are multiple levels deep.

1.15 Build 6260
- Fixed an issue where games may freeze during launch (nothing appeared except
  in Task Manager)

1.15 Build 6258
- Star Wars: The Old Republic launcher compatibility update
- A new compatibility setting 'Inner Space Loader aggressiveness' is now
  available in the Configuration window on the General tab, as well as per 
  Game Prfofile. This setting can potentially be decreased to reduce instability 
  (such as freezes or crashes) or increased if Inner Space is unable to properly 
  activate within a game. 
  The aggressiveness level required will depend on the game.
- The Uplink's Open command now accepts a -loader <level> parameter to control
  the aggressiveness of the Inner Space loader. 
- The outdated video capture built into Inner Space is now permanently removed.

1.15 Build 6255
- General compatibility fixes
- Fixed compatibility with NVIDIA Share

1.15 Build 6254
- Improved compatibility with Windows Application Compatibility
- General compatibility fixes
- Fixed a freeze that randomly occurred when starting Inner Space

1.15 Build 6247
- Fixed compatibility with Nahimic VR
- Compatibility updates

1.15 Build 6244
- Inner Space icon updated
- Fixed an issue preventing the Inner Space tray/notification icon from
  working for some people. This may re-place the icon in 'Hidden icons'
- Compatibility update for Blizzard App Beta (Battle.net Launcher)
- Fixed compatibility with 64-bit .NET apps (A3 Mania launcher, SWGLegends)
- Fixed compatibility with Mono (The Infinite Black)
- Fixed compatibility with certain games on AMD systems
- Lord of the Rings Online test server (Bullroarer) compatibility update
- Fixed Steam initialization error with Tree of Savior
- Fixed a bug causing a 'Failed to load required DLLs' message for some games
- Fixed mouse X-axis issues with DirectInput
- LavishScript now includes a JSON parser:
  * LavishScript object types:
    - jsonvalue: Base type for json values
	- jsonvaluecontainer: A mutable container for json values
	- jsonarray: An ordered array of jsonvaluecontainers
	- jsonobject: A keyed index of jsonvaluecontainers
	- jsoniterator: An iterator for a jsonarray or jsonobject
  * LavishSettings new members and methods:
    - string settingset.JSON
	- string setting.JSON	
	- settingset:ExportJSON[filename]
	- settingset:ImportJSON[filename]

1.15 Build 6233
- ISBoxer EVE Launcher compatibility fix

1.15 Build 6232
- Compatibility fixes
- World of Warcraft freeze when entering Shop, and for some people entering
  the game world fixed
- World of Warcships compatibility update

1.15 Build 6229
- SWGEmu compatibility update
- EVE Online launcher compatibility update
- Additional freeze issues fixed

1.15 Build 6219
- Fixed game freeze issues when starting up some games
  e.g. with Razer software

1.15 Build 6218
- Fixed various game freezing issues since build 6216

1.15 Build 6216
- Compatibility fixes for various programs including Razer, Raptr and others
- Direct3D 11 compatibility update
  * Fixed black screen issues in EVE Online and World of Warcraft
  * Fixed Trove rendering
- Skyforge compatibility update

1.15 Build 6200
- EVE Launcher compatibility update
- Improved Lavish crash report output for new issues
- Compatibility fixes for various programs

1.15 Build 6196
- Diablo 3: Fixed new issue rendering the Inner Space GUI

1.15 Build 6195
- World of Warcraft 7.3.0 compatibility update
  * This involved a MAJOR rewrite to the Inner Space loader.
  * Compatibility with other programs should generally be improved.
- Path of Exile compatibility update
- Minecraft compatibility update
- EverQuest LaunchPad compatibility update
- Glyph compatibility update
- Aion compatibility update
- Final Fantasy XIV: Improved Direct3D11 mode support
- 64-bit OpenGL support added
- LavishScript: Added uint system.ProcessID

1.15 Build 6174
- Lord of the Rings Online compatibility update
- Fixed a bug with "stuck keys" when switching windows

1.15 Build 6173
- Tree of Savior compatibility update
- Dark Age of Camelot: Fixed mouse issues related to recent game patch
- Final Fantasy XIV Direct3D 11 compatibility update
- Logitech G105 support added

1.15 Build 6166
- Star Wars: The Old Republic compatibility update

1.15 Build 6165
- Heroes of the Storm compatibility update
- Logitech G910 Orion Spectrum support added
- The Elder Scrolls Online compatibility update
- Star Trek Online compatibility update
- Diablo III (64-bit) - Skip Launcher profile should now be created automatically
- Diablo III 64-bit: Fixed cursor positioning issues with ISBoxer
- Direct3D 11 renderer will now pop up a message if an invalid display is forced

1.15 Build 6158
- Diablo III 64-bit client compatibility update

1.15 Build 6156
- Glyph compatibility update

1.15 Build 6155
- Diablo III patch 2.4.3 compatibility update
- Dark Age of Camelot compatibility update

1.15 Build 6151
- Windows 10 and Direct3D 11 compatibilty update
- Battle.net Launcher compatibility update
- Star Trek Online compatibility update
- Star Wars The Old Republic compatibility update
- Shroud of the Avatar compatibility update
- lguitextentry:SetText now triggers the lguitextentry OnChange embedded script
- Add Game window now does a better job of automatically providing the additional useful Game Profiles from the
  Game Detections list
- Game Configuration now includes a 'Hide from Inner Space menu' option

1.15 Build 6136
- LavishScript stability update
- lguielement.Strata and lguielement:SetStrata[#] now handle negative values correctly
- Fixed an issue with lguielement:SetStrata[#] not immediately applying, when moving an element to the bottom of the stack

1.15 Build 6134
- Aion compatibility update
- EVE Online game detection no longer includes "No Patch" profiles, because that ability is being disabled in EVE in 2 weeks

1.15 Build 6133
- Dark Age of Camelot compatibility update
- RIFT compatibility update
- Wizard101 compatibility update
- Corsair K95 RGB compatibility update

1.15 Build 6130
- EVE Online launcher compatibility update

1.15 Build 6129
- Improved Battle.net compatibility
- Tree of Savior compatibility update
- Glyph compatibility update

1.15 Build 6126
- Inner Space Configuration panel now includes an option to use 64-bit Inner Space uplink
- Inner Space Configuration panel now includes an option to use known same-bit game clients (e.g. 32-bit WoW for 32-bit Inner Space)
- Added bool LavishScript.Is64Bit
- Fixed a bug with -32bit parameter when InnerSpace.exe is already running
- 64-bit Inner Space should now share the 32-bit registry key
- LavishGUI: 
  * Added int lguielement.Strata and lguielement:SetStrata[#]
  * lguielement.AlwaysOnTop is now only true if Strata is 127

1.15 Build 6123
- 64-bit compatibility update
- Inner Space will automatically launch its 64-bit version when on 64-bit Windows, unless given -32bit parameter
- World of Warcraft Legion Alpha compatibility update
- Archeage compatibility update
- New SDK versions ISXDK 35, LSModule 22
- LavishScript:
  * floatptr type once again provides the correct value

1.14 Build 6113
- Devilian compatibility update

1.14 Build 6112
- Fixed a crash some users experienced when launching Inner Space
- WildStar compatibility update

1.14 Build 6111
- Devilian compatibility update
- 64-bit compatibility update
- Guild Wars 2 64-bit client compatibility update
- LavishGUI:
  * All Element types now support an integer Strata property (-128 to 127), with 127 being on top
    and -128 being on bottom. Default is 0, and AlwaysOnTop is the same as using Strata 127.
  * Fixed a bug where dynamically adding a new child element to a parent would
    cause its entire containing element tree to move to the top of the Z-order
- When the Lavish Crash Reporter window shows, a minidump (.dmp) file is now generated in the
  Inner Space folder

1.14 Build 6104
- Updated link to Microsoft DXWEBSETUP. The old link now redirects to Windows 10 download.

1.14 Build 6103
- Windows 10 compatibility update
- 64-bit compatibility update
- WildStar compatibility update

1.13 Build 6102
- Stability fixes

1.13 Build 6101
- Fixed a bug with bindings on modifier keys (alt, control, shift) executing multiple times
- Added Corsair M65 RGB gaming mouse native support
- Daybreak Games (e.g. EQ1, EQ2) LaunchPad compatibility update
- Trove
  * Fixed a bug with Alt key activating background windows
  * Improved broadcasted mouselook behavior
- Skyforge compatibility update
- Mouse movements can now be blocked in OnMouseMove by setting Context to FALSE
  (this is the same as has been implemented for OnButtonMove, etc)
- LavishGUI:
  * uint lguitext.NumLines
  * lguifont.GetTextWidth[text]
  * uint lguitextentry.MaxLength
  * lguitextentry:SetMaxLength[#]
  * lguifont is no longer incorrectly marked as inheriting from lguielement

1.13 Build 6089
- Added Corsair K95 RGB Mechanical Gaming Keyboard native support
- Fixed a crash bug when exiting Aion
- Fixed a crash bug with launching Marvel Heroes
- Anarchy Online New Engine Beta compatibility update
- Final Fantasy XIV DirectX 11 compatibility update
- Trove
  * Fixed a bug with session numbering
  * Fixed a bug with resolution incorrectly adjusting to match scaled windows
  * Mousing over an un-focused Trove window no longer affects mouselook
- Open command now supports additional parameters:
  * -nogameprofileparams: Disable any Game Profile-specified parameters to the Game Executable                          
  * -addparam: Append a space-separated parameter for the Game Executable
- Added gdiwindow:SetTaskbarTabVisible[bool] which toggles visibility on the Windows taskbar

1.13 Build 6082
- Fixed a bug with a jumping mouse cursor on the latest EVE Online update
- Fixed modifier key and arrow key behaviors in Star Trek Online
- Fixed a bug where game launches would sometimes freeze on certain Windows 7 installs
- ATI/AMD video card driver (bug) compatibility update
- Albion Online compatibility update
- Villagers and Heroes compatibility update
- Improved behavior when using a modifier (Shift, Ctrl, or Alt) alone as a key binding
- Added Steel Series WoW Wireless MMO Mouse native support
- Added Logitech G910 Keyboard native support
- LavishScript: 
  * Sanity check on number of #includes extended significantly
  * Fixed system.CurrentDirectory value not matching the return type

1.13 Build 6066
- Added Relay target operator @, which sorts the set on its right side by name
- Added RelayTargets command, available in the Uplink, which will resolve a Relay target
  and output all of the resolved target names in the given order
- Fixed Focus -previous

1.13 Build 6063
- Improved mouse cursor visibility detection on Direct3D 11 (Trove)
- Fixed a bug where holding both Left and Right of Shift, Control or Alt caused the key to
  become "stuck"
- The Focus command -next and -previous switches now use the order from the filter if provided
- Windows 10 compatibility update 
- Battle.net Launcher compatibility update
- Added XKeys XK-24 native support
- Fix for certain game launch issues

1.13 Build 6040
- Stability fixes
- Fixed issues with Lord of the Rings Online additional processes

1.13 Build 6038
- Fixed a crash issue affecting Aion, TERA and other games with packed executables

1.13 Build 6037
- Inner Space binaries are now digitally signed.
  This should reduce or eliminate false positive detections from anti-virus software!
- WAKFU compatibility update

1.13 Build 6036
- Fixed a cursor detection bug in OpenGL games (Trove)
- Fixed a bug with Forced Window mode causing error beeps when using Alt
- Steam compatibility update (Terraria, EVE Online)
- Lord of the Rings Online and Dungeons & Dragons Online compatibility update
- Kill command now accepts * as a parameter to terminate all Inner Space session processes
- LavishScript: point3f now accepts a comma-separated list of values for initialization

1.13 Build 6030
- Battle.net Launcher compatibility update
- Guild Wars 2 compatibility update
- Elder Scrolls Online compatibility update
- LavishScript: array type is now persistent

1.13 Build 6023
- Direct3D 11: Fixed a crash bug that would happen at startup (World of Warcraft, Neverwinter)
- Neverwinter compatibility update
- Asheron's Call compatibility update
- Asheron's Call 2 compatibility update
- Swordsman Online compatibility update
- BlackGold Online compatibility update
- Voyage Century Online compatibility update
- Direct3D 8: Fixed background cursor rendering
- LavishScript: Fixed bugs with endscript and script:End being unable to locate active scripts
- LavishGUI: Added lguiconsole:Clear

1.13 Build 6016
- Glyph (RIFT) compatibility update
- Fixed a bug with the main Inner Space context menu disappearing sometimes when mousing
  through multi-level submenus
- Added audio:FadeVolume[new_volume_level,over_n_seconds]

1.13 Build 6011
- Battle.net client compatibility update
- Guild Wars 2: Fixed mouse panning again
- LavishGUI: Fixed a bug where holding a button in a text entry control and then changing
  keyboard focus away from the control would continue to repeat the button in the control.

1.13 Build 6007
- Marvel Heroes: Fixed input issues
- WildStar: Fixed mouselook
- LavishScript 2 version 0.10.20140529.1

1.13 Build 6003
- Fixed an issue with World of Warcraft cinematics causing a Lavish login box in some cases
- Added Logitech G502 Mouse ("Proteus Core") native support
- LavishScript: lavishscript.ExecuteAtom and script.ExecuteAtom now fully support
  return objects

1.13 Build 5999
- Fixed a bug with Steam games (e.g. EVE Online) being unable to access the Steam client 

1.13 Build 5998
- Fixed an issue with the new Battle.net launcher version not properly sandboxing
- Added Elder Scrolls Online game detection
- Fixed a bug with Elder Scrolls Online in Direct3D 11 mode

1.13 Build 5994
- Fixed bugs with Ctrl and Alt in the Korean keyboard layout (and likely other asian
  languages)
- Global Binds (such as the default Ctrl+Alt+# window switching keys) now do a 
  better job of not disappearing
- Allods Online: Fixed keyboard input issues
- Dark Age of Camelot compatibility update
  * DAOC windows will now scale the rendered display properly
  * Fixed a bug with mouse clicks and scroll wheel not working correctly in some cases
  * Fixed an issue with modifier keys not being checked at the right time by the game

1.13 Build 5987
- Battle.net client compatibility update
- Inner Space will now automatically add the -launch parameter if launching 
  Diablo III.exe with no parameters
- WildStar: Fixed a graphics glitch on Windows 8.1
- Dragon's Prophet 64-bit compatibility update
- Direct3D10 is now supported in 64-bit mode

1.13 Build 5982
- WildStar compatibility update
- Diablo 3: Improved game launching time
- Improved compatibility with Windows Application Compatibility
- Inner Space now includes 64-bit binaries (found in the x64 sub-folder)
  and is capable of working with 64-bit games! 
  * 64-bit support may have bugs not present in 32-bit mode
  * 64-bit mode uses the same Interface, Scripts, etc but requires new 64-bit
    versions of any Inner Space Extensions and LavishScript Modules (within the
	x64 sub-folder)
- New SDK versions ISXDK 34, LSModule 21
- Dependencies for Extensions and LavishScript Modules should now be based on the
  loaded DLL's folder, instead of the main Inner Space folder

1.12 Build 5963
- Diablo 3: Fixed an issue where the game would sometimes stop rendering 
  until its display was reset
- Allods Online compatibility update
- Istaria launcher compatibility update

1.12 Build 5957
- Battle.net launcher compatibility update (Diablo 3, WoW)
- EverQuest Next Landmark (32-bit client) compatibility update

1.12 Build 5954
- EVE Online:
  * Added separate "No Patch" profiles for DirectX 9 and 11 modes
- Improved compatibility with Anarchy Online Beta (new DirectX 9 engine)
- Fixed a bug with extra windows when closing EverQuest Free-to-Play
- Fixed a bug with hotkey parsing with key names that start with +
- Added support for Logitech G930 headset buttons
- LavishGUI:
  * TextEntry and TextEdit controls now support Tab and Shift+Tab for switching control focus
- LavishScript:
  * New events "Fatal Error" (an error which terminates the running script) and 
    "Data Sequence Error" (an error which is typically considered recoverable).
	Both events provide 2 parameters:
	  1. The error output sent to the console
	  2. The current LavishScript execution stack with CR/LF separating each line
	The event's Context object will be the currently-executing script

1.12 Build 5944
- When a 64-bit application is launched through Inner Space, a message will pop up explaining
  to use the 32-bit version
- DirectX 11 mode now works better with custom video resolutions (ISBoxer)
- Fixed a bug with 'Forced windowed' mode where the window would reset to position 0,0

1.12 Build 5939
- EVE Online: 
  * DirectX 11 compatibility fix
  * Game detection updated, including a new "No Patch" profile
- Battle.net Desktop Client compatibility update
- TERA compatibility update
- Terraria compatibility update
- Path of Exile compatibility update
- Final Fantasy XIV: Fixed a bug with cursor positioning
- Stability fixes
- The Uplink's "Sessions" command now lists Process ID (PID) and executable filename next 
  to the session names
- LavishGUI: Clicking on an element now only brings its topmost container (e.g. containing 
  window) to the front of Z-order instead of bubbling up the control and all of its parent 
  containers
- New API versions for Visual Studio 2013 support. Visual Studio 2010 no longer supported
  * ISXDK 33: Extensions\ISXDK33\* is now checked for extension before Extensions\*
- Fixed LavishSettings reverse iteration
- audio:SetMute should no longer trigger permanent muting by Windows when the game exits
- LavishScript SDK changes (ISXDK + LSModule DK):
  * LSOBJECTDATA is now 64-bit instead of 32-bit, and includes a constructor to initialize to 0
  * LSOBJECTDATA no longer has VarPtr and ObjectData union members. Use GetObjectData() and
    SetObjectData()
- LavishScript:
  * new Top-level object: int64 Int64[#]
  * Fixed bugs with 'persistentref' object type
  * Marked LavishScript internal types as persistent: 
    - all script-defined object types, variablescope, script, query, event, index, collection, 
	  stack, queue, set
  * Math.Calc and Math.Calc64 now return native float64 and int64 instead of 
    float64ptr and int64ptr

1.11 Build 5899
- Final Fantasy XIV: A Realm Reborn compatibility update
- Improved 'Lock foreground' compatibility
- LavishScript data type additions:
  * ... lavishgui.MouseOverElement
  * ... lavishgui.FocusedElement
  * bool lavishgui.IsAltDown
  * bool lavishgui.IsCtrlDown
  * bool lavishgui.IsShiftDown 

1.11 Build 5898
- General compatibility update
- Torchlight 2 multi-instance support update
- Added Razer Nostromo native support (requires buttons to be Joystick 1-16 and DPad to be
  Joystick 17-24)

1.11 Build 5893
- DirectX 11 support now detects a missing Windows Update (KB 2670838) and provides a
  warning (and offer to help download) if this update is likely to correct a problem.
  This is particularly helpful for those World of Warcraft players that have been unable
  to use DirectX 11 support since build 5879.
- General compatibility update
- Marvel Heroes
  * Compatibility update for the game's new launcher
  * Added detection for new Marvel Heroes default installation

1.11 Build 5884
- Fixed a Diablo 3 freezing issue
- Fixed a bug with dragging a game window causing the window to continue moving
- Fixed a crash issue with "DrawText"

1.11 Build 5879
- Improved support for Windows 8.1 and Windows Application Compatibility
- Final Fantasy XIV: A Realm Reborn Beta compatibility update
- Experimental fix for Lucid MVP crashes with Direct3D11
- Fixed a bug with Direct3D11 not honoring Inner Space monitor selection
- Aion:
  * Fixed a bug with window sizing
  * Fixed a bug with broadcasted mouselook

1.11 Build 5853
- Fixed a crash with Direct3D11 mode in Cryptic Studios games
- Fixed a crash with custom input devices in certain games
- Fix for loss of mouse control in Neverwinter and Star Trek Online
- Star Trek Online compatibility update for Legacy of Romulus expansion
- Implemented a workaround for a long-standing "DrawText" crash
- Added Microsoft SiderWinder X4 (international SideWinder) native support
- Fixed a mouse lag bug with Atlantica Online

1.11 Build 5844
- Fixed a minor bug with virtualizing the new EVE Online launcher's Cookies file (saved usernames)
- Fixed a rendering bug with Neverwinter and other Cryptic games
- Fixed a bug with clicks during mouselook in EverQuest
- Darkfall Unholy Wars compatibility update
- Firefall Beta compatibility update

1.11 Build 5838
- The 'Add Game' window now accepts files and shortcuts via drag-and-drop
- Lord of the Rings Online fixes
  * Update 11 and new Turbine Launcher compatibility fixes
  * Direct3D 11 compatibility fixes
- Marvel Heroes compatibility update
- Neverwinter stability upate for Direct3D 11

1.11 Build 5823
- Fixed Numpad Enter in EverQuest
- Fixed a bug related to extraneous processes with EverQuest 1 and 2
- Improved Virtual File support
- Fixed input-related bugs in Minecraft and Neverwinter
- Fixed a bug with lguilistboxitem:SetValue

1.11 Build 5809
- Fixed input-related bugs in Age of Wushu
- Fixed crashes relating to Windows 8 + Direct3D 11 (or Windows 7 with specific patches), affecting 
  Lord of the Rings Online and others
- Fixed a display bug with Defiance
- Added native support for input devices:
  * Steel Series WoW Mouse Legendary Edition
  * Mad Catz S.T.R.I.K.E. 7 Keyboard

1.11 Build 5799
- Fixed a crash bug with SOE's latest launcher updates for EverQuest and Vanguard, and probably others..
- LavishGUI
  * Elements that support both Border and BorderColor will now overlay the defined Border on top
    of a Texture, if that Texture does not have a defined Border.
  * Textures with a Filename value of "#fill" will now be a color fill, suing the ColorMask color

1.11 Build 5794
- Fixed a crash with Lord of the Rings Online on Windows XP
- Hotkeys with ALT in them no longer cause Windows error beeps in EVE Online (and other games?)
- Asheron's Call 2/Direct3D8 compatibility update
- Entropia Universe compatibility update
- Added native support for Logitech G710 keyboard 
- Logitech G11 support is no longer tied to Logitech G15 support
- Fixed a bug with Add Game that could create a broken Game Profile
- Fixed LavishScript:Eval
- Eliminated several internal buffer size limits in LavishScript
- Fixed a bug with recursively-issued timedcommands getting lost
- Improved Relay performance
- index:Resize no longer crashes with a negative size
- Fixed extension.Filename and lguitexture.Filename
- New datatype methods and members:
  * lguiframe:SetTexture[xml]
  * lguibutton:SetTexture[xml]
  * lguibutton:SetTextureHover[xml]
  * lguibutton:SetTexturePressed[xml]
  * lguibutton:SetBorder[#]
  * lguibutton:SetBorderColor[aarrggbb]
  * int lguibutton.Border
  * int lguibutton.BorderColor
  * settingset:Copy[set ID #]

1.11 Build 5751
- Improved "Fullscreen Windowed" (in various games) setting behavior
- Fixed a rendering bug with Wizardry Online (beta)
- Fixed a bug with the left-handed mouse setting in Windows, which broke Diablo 3's 
  click-and-hold to move functionality for left-handed players
- PlanetSide 2 compatibility update
- Improved support for files and folders with Unicode (international) names
- Experimental fixes for some Direct3D-related crashes 
- Added Relay target operator #, which selects the nth element from the set on its left.
  This is similar in function to %, but without wrapping around.
- Crash reports include a timestamp
- LavishScript 2 Standard Environment version 0.9.20121123.1

1.11 Build 5714
- Added native support for Microsoft Sidewinder X4 S-keys
- Torchlight 2 compatibility update
- Fixed a bug with some games, including World of Warcraft and Guild Wars 2, not restoring the 
  mouse position after mouselook in certain conditions
- Improved Guild Wars 2 mouse panning
- Added LavishScript data type audio, and top-level object Audio
- ismenuitem type now supports a Checked state
  * bool ismenuitem.IsChecked 
  * ismenuitem:SetCheck[bool]
  * ismenu:AddCommand and ismenu.AddCommand both accept an optional 3rd parameter for Checked state
- OSExecute command now provides information upon failure
- LavishScript 2.0 interface (Alpha) is now available via ISXDK 32a with the ls2module SDK.
- Added LavishScript data type method
  * lavishscript:Eval[command,index:string]
    - Evaluates the given command, directing any lines of output into an index:string
- Added LavishScript data types lavishscript2, ls2module, ls2script
- Added LavishScript top-level object LavishScript2
- LavishScript 2 Standard Environment version 0.8.20121026.1

1.11 Build 5670
- Fixed a bug with World of Warcraft in DirectX 9 mode, where LavishGUI textures would disappear
  with High quality shadows enabled
- Guild Wars 2 compatibility update
- Second Life compatibility update
- Fixed upside-down background cursor in OpenGL

1.11 Build 5664
- Improved Windows 8 compatibility (EVE Online will now launch correctly)
- Improved Virtual File compatibility
- D3D11 support now explicitly uses d3d11.dll from the Windows System folder. This 
  corrects a problem with EverQuest 2, which currently patches in DirectX 10 and 
  DirectX 11 files to the EverQuest 2 folder. The files EverQuest 2 is currently 
  patching in are not intended for redistribution and are not supposed to be in the
  EverQuest 2 folder.
- Added data type methods direct3d9:SetCursorColor[########] and direct3d11:SetCursorColor[########]

1.11 Build 5658
- Added native support for Logitech G600 Mouse buttons
- Added support for a supplemental non-Administrator program to pass commands to Inner Space
- Added data type method gdiwindow:SelectMenuItem[submenu...,item] to activate a menu item
  * Example: Display.Window:SelectMenuItem[&File,&Open...]
- Added data type method display:Screencap[-flags,filename.ext,x1,y1,x2,y2]
  * Flags and x1,y1,x2,y2 rectangle are optional
  * Flags:
    -directx: (Default) Perform the screencap with Direct3D-based capture; supports PNG, JPG, BMP
    -desktop: Perform the screencap with desktop-based capture (includes any windows on top, etc); supports BMP
    -clientcoords: (Default) Screencap coordinates given are based on the game client
    -screencoords: Screencap coordinates given are based on the desktop
  * Image encoding is automatically derived from the filename ending in .bmp, .jpg or .png; desktop capture
    currently supports BMP and PNG encoding
  * Examples:
    Display:Screencap[myscreencap.jpg] - capture game window
	Display:Screencap[myscreencap.jpg,100,100,164,164] - capture a 64x64 region at 100,100
	Display:Screencap[-desktop,myscreencap.bmp] - capture game window plus layers on top of it
	Display:Screencap[-desktop,-screencoords,myscreencap.bmp,0,0,1600,900] - capture a 1600x900 desktop
- Added data type methods direct3d9:DisableVSync and direct3d11:DisableVSync

1.11 Build 5642
- Fixed a bug with Realm of the Mad God on Intel graphics

1.11 Build 5637
- More cursor/resolution fixes
- Fixed a bug with keys not working in Runes of Magic
- Fixed a bug with Warhammer Online streaming client not working
- Fixed a bug with with KeePass password management utility
- Dragging a LavishGUI window completely off the screen should now be more difficult. If you really
  want to do it, hold Shift.
- Added port numbers to the OnUplinkConnected and OnUplinkDisconnected events, with port equal to 0
  if the connection was not made FROM this uplink:
  * OnUplinkConnected[ip address,port]
  * OnUplinkDisconnected[ip address,port,name]
- Improved WPF compatibility
- LavishGUI list box item "values" are now strings instead of ints.

1.11 Build 5616
- Drastically improved performance of uplink networking. Multi-PC ISBoxer users will see immediate
  benefits
- Fixed a bug with Alt Gr not operating correctly for some keyboard layouts
- Dark Age of Camelot compatibility update
- Perpetuum compatibility update
- Text-to-Speech can now be done through the Speech object (speech type) in the Uplink
  * speech:Speak[text to speak]
  * speech:Speak[-volume,0.5,-speed,0.5,text to speak]
- The new Speak command can also be used for Text-to-Speech in the Uplink
  * speak "text to speak"
  * speak -volume 0.5 -speed 0.5 "text to speak"
- httpget command now supports additional parameters to perform http POST. These parameters must
  come before all others (-atom, -file or the URL)
  * -postparam <NAME> <VALUE>
  * -postfile <NAME> <FILENAME>
  * example: httpget -postfile screencap "MyScreenshot.jpg" http://upload.somewhere.com/screencap

1.11 Build 5604
- Cursor positioning overhaul
- Fake cursor (e.g. visible during broadcasting) should now work in many cases where it previously did not
- Guild Wars 1 and 2 compatibility update
- Fixed a Star Trek Online crash
- Fixed a bug with the TERA Launcher
- Minecraft compatibility update
- Initial OpenGL rendering support, tested with Minecraft and World of Warcraft
  * Known issue: Fake cursor does not render correctly
  * Known issue: Text quality needs improvement
  * Known issue: ISBoxer Window Layouts with small windows + Instant Swapping look wrong
- Fixed bugs with system:SetClipboardText and system.ClipboardText...

1.11 Build 5578
- ISBoxer Users, please update to build 40.2.405.1 or later if your Window Layout stops working.
- Improved Diablo 3 launching time
- Fixed a bug with the Alt key in EVE Online
- Improved fileredirect (Virtual File) compatibility
- LavishScript
  * Fixed a bug with scripted math not short circuiting in some cases

1.11 Build 5564
- Diablo 3 Beta compatibility
- Windows 8 compatibility
- Improved fileredirect (Virtual File) compatibility

1.11 Build 5551
- Compatibility update for new EVE Online launcher
- Fixed a crash that could happen when using Windows' Encrypted File System feature
- LavishScript queries now accept _ToString as a field name

1.11 Build 5547
- Fixed a bug with launching Aion
- Initial support for Steam games
  * Realm of the Mad God should work via Steam
  * Terraria is also known to be working well
  * Compatibility with other Steam games currently unknown -- please report back!
  * The Steam overlay (Shift+Tab) may not yet be fully interactive and stable
- Fixed a bug with the Alt key in Star Wars: The Old Republic 
- Fixed a bug with Star Trek Online freezing
- Fixed issues with some input languages not working correctly
- Real-time log parsing can now be done with the LogReader object (logreader type). This
  can be used to develop damage meter widgets, multiboxing chat window widgets, and more.
  * logreader:RegisterLog["filename with wildcards supporting #*?","LavishScript event name"]
  * logreader:UnregisterLog["filename with wildcards supporting #*?","LavishScript event name"]
  * The LavishScript event prototypes as: LogEvent[string filename,string action,string text]
    where action is one of "open" "close" or "line", and text is the logged text for the "line" 
    action.
  * Log file lines will also be passed through the LavishScript Trigger parser
- The dotnet command now accepts a '-disableconcurrentgc' switch. This can be used to help debug
  .NET applications, but may hinder performance. To use it, issue 'dotnet -disableconcurrentgc'
  before launching any appdomains.

1.11 Build 5521
- Various compatibility updates
- Fixed a double input issue with Megaten game
- Fixed input stoppage in Star Trek Online
- .NET 4.0 runtime is now supported. 
  * Windows XP is limited to .NET 2.0-3.5, even if .NET 4.0 is installed

1.11 Build 5511
- Star Wars: The Old Republic compatibility fixes...

1.11 Build 5509
- Star Wars: The Old Republic window and cursor handling fixed, now supporting all
  ISBoxer Window Layout styles! Happy New Year! :)

1.11 Build 5507
- Various compatibility and stability fixes
- Pasting with Ctrl+V should now work correctly in game launchers..
- Star Wars: The Old Republic compatibility improvements for Windows Vista
- Basic support for OpenGL games such as City of Heroes. 
  * Note that LavishGUI does not currently render text or textures under OpenGL
- Fixed an issue with 'Game' names that include a colon... ... -.-

1.11 Build 5496
- Star Wars: The Old Republic compatibility improvements
- Fixed compatibility with EverQuest 2's new launcher
- LavishScript
  * Many additions to the videofeed data types available in sessions

1.11 Build 5475
- Fixed a crash issue with WoW 4.3 (PTR)
- Fixed a crash issue with RIFT
- Fixed mouse clipping related issues

1.11 Build 5472
- Fixed deadlock issues in Champions Online and Star Trek Online
- Fixed double-input issue in Runes of Magic

1.11 Build 5469
- Fixed a crash relating to a recent Windows Update on Windows 7

1.11 Build 5467
- Improved Pirates of the Burning Sea loading time
- Add Game window now checks the given path to ensure that it exists
- WindowFocus command now accepts an optional filter parameter, which can be any valid relay targets.
  Example: uplink focus -next dps

1.11 Build 5464
- Emulated input events (e.g. those generated by ISBoxer) should now be more responsive in certain games such as
  Champions Online and Star Trek Online
- Added game detection for Champions Online
- Input devices
  * Steel Series WoW Mouse (original) is now natively supported
  * Saitek Cyborg keyboard is now natively supported
- Fixed an issue with Inner Space recognizing the resolution selected by certain games
- LavishGUI
  * lguilistbox:ClearItems now implicitly performs ClearSelection, generating the standard events instead of
    silently destroying it. This also fixes lguicombobox retaining its selected text.
- LavishScript
  * New method index:Shift[# position,# places] will make room in an index for # places elements at # position, by
    shifting toward index.Size. The index will not be implicitly Resized, and elements at the end of the index may
	be destroyed.
  * Fixed a bug where index.Expand and index.ExpandComma were not prefixing the final element with a comma or space, 
    when the index is full

1.11 Build 5460
- Fixed an issue with incorrect cursor positioning when sending relative mouse movement to a foreground window
- Fixed Perpetuum being laggy once entering the game
- Added game detection for Perpetuum
- Added game detection for Ultima Online's Enhanced (Stygian Abyss) client
- Fixed an issue with games that use Direct Input for the keyboard (e.g. Dark Age of Camelot)
  where incorrect keystrokes were sometimes sent to the game
- Fixed an issue with file redirection (virtualization) not working in certain cases
- Fixed an issue with game launcher detection sometimes mistaking a game client with a launcher due to the
  folder it was in

1.11 Build 5452
- Input devices
  * Steel Series Cataclysm Mouse is now natively supported
- Compatibility updates
  * Fixed Aion crashing during launch on Windows 7
  * Star Wars Galaxies with ISBoxer will no longer pop up the 'already running' message, even though it will
    no longer exist 6 months from now
  * Fixed a multi-PC mouse broadcasting issue with Lord of the Rings Online
- Fixed video recording again. Sound is no longer muted during video recording.
- LavishScript
  * Queries now understand a NULL value type
  * Added Query operator =~ meaning value and type equality, with == still working for this as well
  * Added Query operator !~ meaning that either the value or type is not equal to the right side

1.11 Build 5437
- Compatibility updates
  * Fixed an issue with the RIFT launcher sometimes crashing after clicking Play
  * Laptops equipped with NVIDIA's Optimus graphics system should now work correctly
  * Some issues with games disappearing instead of launching should now be fixed

1.11 Build 5431
- Fixed an issue with fake cursor rendering not working in EVE Online

1.11 Build 5430
- Fixed an issue with fake cursor rendering (cursor in non-focused windows) not working, usually exhibited with dual monitors

1.11 Build 5428
- Video Feed Viewers can now be made permanent, to not disappear when the window leaves input focus
- New data type members and methods:
- Data Type members/methods:
  * videofeed:SetPermanentVideoFeeds[bool] - set whether ALL video feed viewers are considered permanent
  * bool videofeed.PermanentVideoFeeds
  * videofeed:RegisterOutput now includes an optional bool parameter to indicate permanence

1.11 Build 5422
- Fixed a deadlock in the Uplink sometimes experienced during session launches
- Input Devices now support multiple Key Sets. This makes it easy to expand the number of available key bindings
  for any given input device. This is similar to the hotkey bank switching functionality in the Logitech G-series
  software, which usually has 3 different hotkey banks. There is no limit to the number of Key Sets that can be 
  used per device.
- New data type members and methods:
  * inputdevice input.Device[string name]
  * string inputdevice.CurrentKeySet
  * inputdevice:SelectKeySet[string name]
  * bool lguielement.HitTest
  * bool lguielement.HitTest[int x,int y]
- LavishScript
  * Fixed a bug with using continue in a do/while loop, where it sometimes skipped the first condition
  * New data type members and methods:
    - objectcollection:EraseByQuery[uint query_id] - Erases any elements in the collection matching the given Query
	- objectcollection:EraseByQuery[uint query_id,bool remove_MATCHES] - Erases any elements in the collection
	  that either match or do not match the given query
    - index:RemoveByQuery[uint query_id] - Erases any elements in the index matching the given Query
	- index:RemoveByQuery[uint query_id,bool remove_MATCHES] - Erases any elements in the index
	  that either match or do not match the given query
	- note that although the above methods are essentially the same between index and objectcollection, the
	  method names are chosen to be consistent with existing index and objectcollection Erase and Remove methods

1.11 Build 5402
- Fixed a window sizing issue that affected some games
- Runes of Magic
  * Added "No Patch" profile for Runes of Magic
  * Running client.exe with parameters NoCheckVersion will now properly bypass the Runes of Magic launcher
- Possible fix for EverQuest 1 freezing issue related to mouse broadcasting
- Improved Logitech G13 support now includes all buttons as well as thumbstick control!
  * New buttons G13-UP, G13-DOWN, G13-LEFT and G13-RIGHT can be used as key bindings to bind to the thumbstick
  * The also thumbstick can be interpreted as a DPad control G13-POV, or as X and Y axes G13-X and G13-Y
- LavishScript
  * New data type members and methods:
    - unistring system.ClipboardText
	- system:SetClipboardText[utf8]
	- gdiwindow:PostMessage[int msg,optional int wparam,optional int lparam]
	- gdiwindow:SendMessage[int msg,optional int wparam,optional int lparam]
	- gdiwindow:Paste[optional utf8]

1.11 Build 5395
- RIFT game detection added
- Internet Explorer 9 compatibility update
- Entropia Universe compatibility update
- Improved cross-PC relay throughput. This should drastically improve mouse broadcasting speeds for multi-PC
  ISBoxer users.
- Added "restore" option to WindowVisibility and WindowCharacteristics commands. This removes Maximize from
  the window.
- LavishScript
  * Added "Equal" members to most numeric data types

1.11 Build 5378
- Logitech G510 Keyboard support added
- Direct3D11 support! Tested on World of Warcraft and Lord of the Rings Online
- Game Configuration
  * The "Display Selection" option that had a list of numbers has been replaced by a "Monitor Selection"
    option with a list of your attached monitors, by the name Windows (GDI) refers to them, e.g. \\.\DISPLAY1
	and \\.\DISPLAY2. **The current build does not transfer the old setting to the new setting, so if you use
	this option please update your configuration.**
- DC Universe compatibility update
- Earthrise Beta
  * Mouse fixed
- Lord of the Rings Online
  * Added a workaround for a LOTRO rendering size limit that caused distortion and broke ISBoxer's Instant Swap    
  * "No Patch" profiles will no longer be created for LOTRO. LOTRO no longer breaks when running multiple 
    instances from the same folder, so this is unnecessary
- RIFT Beta compatbility update
- World of Warcraft
  * Added DirectX9 and DirectX11 default profiles
  * Bug fix: Mouse cursor will no longer stay centered after a mouselook (meaning that clicking
    in the game world will no longer appear to center the cursor)
- Relay changes:
  * Relay now accepts "uplink" as a target, meaning the uplink on the current PC
  * Relay now accepts the following operators:
    * grouping: ( and )
    * union: , or |   - examples: is1|is2|is3   or   is1,is2,is3
	* intersect: &    - examples: healers&paladins  or  (is1,is2)&(is2,is3)
	* NOT: ~          - examples: ~is1   or  healers&~paladins 
	* modulo: %   - this operator selects the Nth (1-based) window from a set, e.g.  healers%1 for the first healer
	                in the group, healers%2 for the second healer in the group, or (is1,is2,is3)%2 for the second
					from this set, etc. The value wraps around the size of the set. 
 - LavishScript:
    * The == and != operators, when used in floating point math as opposed to Math.Calc64, now treats any two numbers
	  within 0.00000001 of each other as equal. Note that Calc64 is a misnomer, as its purpose is to provide 64-bit
	  integer math, whereas Math.Calc and all other calculations use 64-bit floating point math.
	* RunScript command now additionally searches in a subdirectory with the same name as the script file
    
1.11 Build 5326
- Compatibility updates
- Fixed compatibility with Mono, used by the Unity 3D engine
- Dark Age of Camelot:
  * Fixed compatibility with DAOC!
  * Updated DAOC game detection, and added "DAOC No Patch" profile which launches login.dll 
    instead of camelot.exe

1.11 Build 5318
- Mouse "clipping" is now locked off by default (again?). This fixes a reported issue with Star Wars Galaxies
- Fixed an issue with window resizing not working properly in some situations
- Fixed various remaining mouse issues
- Fixed some compatibility issues that may have prevented some people from launching certain (or any) games,
  including those related to Creative ALchemy

1.11 Build 5308
- Fixed cursor positioning issues with various games
- More updates to forced window mode
- EverQuest 1:
  * Inner Space will now automaticaly add the patchme parameter when launching eqgame.exe directly without
    any parameters.
- The Lord of the Rings Online:
  * Fixed the "No Patch" profiles. The correct way to bypass the patcher is to execute TurbineLauncher.exe
    with parameters -usetdm -invoker. Inner Space will now automatically add the -invoker parameter when
	needed (without modifying your profile).
- Dungeons & Dragons Online:
  * All LOTRO fixes now apply to Dungeons & Dragons Online as well
  * Added auto-detection when the game is installed to the default path
- Ryzom:
  * Fixed mouselook
  * Added auto-detection for the game
- Updated development kits to Visual Studio 2010 libraries. Any IS Extensions or LavishScript Modules
  will need to be updated accordingly.
- Fixed some possible causes of "Launcher error -22", and replaced cryptic the error message

1.10 Build 5245
- Fixed cursor positioning issues in Star Wars Galaxies
- Updates to forced window mode (when Inner Space forces a full screen mode game into a window)
  * Fixed a "black screen" issue with switching away and back to a forced window
  * Fixed cursor position issues
  * If a game attempts to launch in full screen mode and fails, Inner Space will automatically
    attempt forced window mode

1.10 Build 5243
- Fixed a crash issue with LOTRO on Vista. This fix probably solves some other crashes as well.
- Fixed the generated LOTRO No Patch profile

1.10 Build 5241
- Compatibility update
- Dark Age of Camelot: Fixed patcher.prod.sig error on Windows 7
- EverQuest 2: Fixed streaming EQ2 client issues, and added EverQuest II No Patch (Streaming) profile.
  Launching the streaming EQ2 client without the LaunchPad requires additional parameters.
- Vanguard: Fixed bugs discovered via ISBoxer
- Fixed crashes with Microsoft SideWinder mouse
- Experimental fix for process launch freezes
- Cursor positioning issues in Aion and EVE should be fixed
- Added a "local" flag for relay groups. The keyword should come after the optional "other" flag 
  and before the relay group.
  * Examples:
    relay "other local mygroup" echo hi
    relay "local mygroup" echo hi

1.10 Build 5170
- This release marks the end of a nearly year-long effort to rewrite the core of Inner Space,
  with many months of extended testing to ensure that everything continues to work after the
  update. If you encounter new issues after this update, please let us know as soon as possible
  so we can correct the problem. Thanks!
- Compatibility fixes for other programs including Fraps, Comodo Internet Security,
  and Symantec Endpoint Security
- Various stability fixes
- Fixed game launching bugs through a massive rewrite of the related code. Please
  report any new issues caused by the new changes, thanks!
  * Star Wars Galaxies DirectX error worked around. The error is usually suppressed by a
    MS Application Compatibility fix. The bug is in Sony's swgclientsetup code, specifically
    a check that wants a) the DirectX version number greater than or equal to 9, and b) the
    DirectX version letter greater than or equal to 'c'. DirectX 10 and 11 have no version
    letter, causing a message to be displayed saying that DirectX 9.0c or later is required.
    Sony should fix the bug in their code (hint: only check for 'c' if it's DirectX 9), but 
    for now we have worked around it by providing a letter greater than or equal to 'c'.
- Aion now works
- Input device support added:
  * Logitech G110
  * Microsoft SideWinder X6 Keyboard

1.09 Build 5039
- Video Capture fixed
- Fixed game launching bugs, including but not limited to:
  * Dark Age of Camelot
  * Runes of Magic
- Added support for older DirectInput games, e.g. Dark Age of Camelot

1.09 Build 5021
- Fixed a bug with UTF-8 character conversions in virtual file names
- LavishScript
  * Math.Calc will now properly give a 64-bit result in all cases

1.09 Build 5019
- Input device support added:
  - Logitech G19
  - X-Keys Desktop (newer firmware)
- Fixed an issue with AltGr on Belgian French keyboard layout in World of Warcraft
- Fixed an issue with string.Escape
- New object methods:
  * bind:Press
  * bind:Release

1.09 Build 5011
- Added support for Logitech G13 buttons

1.09 Build 5010
- EverQuest 1 & 2
  * The voice chat software built into EverQuest will no longer count as an 
    Inner Space session. This also fixes "Inner Space was unable to initialize 
    the session" spam for EQ1.

1.09 Build 5007
- The Lord of the Rings Online
  * Emulated full screen should now work correctly
- Fixed an issue where input may stop responding for some amount of time. Apparently
  there is still an issue with this somewhere.
- Fixed issue with minimizing windows when the window characteristics are locked
  (e.g. by ISBoxer)
- "Fixed" the infamous R6034 error box that some users get with some games
- "Fixed" an issue on Windows Vista/7 where Inner Space would appear to fail to run
  when UAC is enabled, and Run as Administrator is not used.
- LavishScript
  * Math.Calc now returns float64ptr instead of float, meaning an increase in precision
  * Added float Math.Log
  * Script-defined object type changes:
    - New special member "GetFallthroughObject" may now return an object which will be
      used in its place if a member or method of the objectdef does not exist
    - Objectdefs are no longer limited to their host script

1.09 Build 4988
- Runes of Magic game should now work properly. Added a game detection for this game
  in the default install location.
- Languages that were translating incorrectly when typing should now work

1.09 Build 4981
- Various Improvements to the virtual cursor. Inner Space can now be instructed
  to draw the cursor if the game is in the background but would otherwise normally
  show it.
- mouse.Cursor now gives the state of the virtual cursor
- New object members:
  bool mouse.BackgroundCursor
- New object methods:
  mouse:SetBackgroundCursor[bool]
- New commands in Sessions:
  proclock on|off
  gammalock on|off
- Fixed an issue with the Button-based LastChance events added in 4931
- Added new event in the Kernel:
  * OnCursorStateChanged(bool Shown)
- File redirection now supports relative paths included in the filenames, and also
  supports virtualizing folders by using / as the last character in the original
  filename, e.g. FileRedirect "Logs/" "Logs-Other/". Subsequently, the filename in
  the given folder can be automatically prepended by including text after the slash,
  e.g. FileRedirect "Logs/" "Logs/Other-".

1.09 Build 4961
- EverQuest 1:
  * Removed default profile-based file redirection for eqlsPlayerData.ini and 
    eqclient.ini, which only served to confuse people at this point. Some 
    people will probably complain about this change, but redirection can still 
    be done via ISBoxer Virtual Files or through manual configuration.
  * Fixed a startup crash caused by a race condition in the game.
    Hint for SOE: Window resize handler appears to be accessing the device to reset 
                  it, before the device pointer is stored after CreateDevice.
- The default startup script will now detect whether there is an AltGr key. If
  there is, default binds that would otherwise use Ctrl+Alt will use Shift+Alt
  instead (and thus not interfere with AltGr).

1.09 Build 4953
- All known EverQuest 1 issues should now be eliminated
- Fixed a few more remaining window management and mouse positioning issues
- Fixed some issues related to "Force Windowed" option
- LavishScript Module API version 18

1.09 Build 4937
- Fixed some remaining window management and mouse positioning issues

1.09 Build 4931
- ISXDK version 31
  * Extension users: Download new versions of your extensions if available
  * Extension developers: Extensions must be recompiled, with Visual Studio 2008.
- Improved window management
  * Mouse cursor positioning issues should now be eliminated
  * Force Windowed (a Profile option in Game Configuration) should work better
    for some games (notably, EQ1)
- Fixed issue with -nomodifiers in Press command when multiple modifiers should
  be released
- Added new events in the Kernel:
  * OnButtonDownLastChance
  * OnButtonUpLastChance
  * OnButtonMoveLastChance
  * OnMouseWheelLastChance
  These events are identical to the non-LastChance, but fire only if binds and GUI 
  (Inner Space, not game) do not consume the input.
- Kernel input events now additionally include an unsigned timestamp parameter
- New uplink command:
  * Kill <session name>
    Terminates an Inner Space session process by session name

1.09 Build 4904
- Fixed issue with Mouse1 through Mouse5 not resolving in some cases for 
  Press command
- Fixed session numbering issue with EVE Online in the default startup script.
  Also added a dynamic way to fix similar issues without an Inner Space patch.
- Improved DirectInput compatibility
- LavishScript:
  * Fixed crash in Math processor when there's more values than operators
- LavishGUI:
  * Fixed issue with using SetWidth and SetHeight methods on a Window element
  * Fixed lguiwindow:SetTitle
  * Frames now properly adhere to Left/Right click-through

1.09 Build 4900
- File redirection now properly handles UTF-8 characters in the filenames
- Windowtext command now properly handles UTF-8 characters

1.09 Build 4896
- Lord of the Rings Online:
  * Fixed emulated keystrokes including Num keys

1.09 Build 4895
- EverQuest 1:
  * Fixed mouse positioning issue that previously started at Character Select screen

1.09 Build 4891
- EverQuest 1:
  * Restored full keyboard functionality (no more broken keys that started recently)

1.09 Build 4889
- Lord of the Rings Online:
  * UserPreferences.ini will now be redirected properly if requested
  * International (or non-US English) keyboard layouts should no longer be broken

1.09 Build 4888
- Fixed various input-related issues, including:
  * Num Lock and Num keys should now work properly (including Alt+Num keys)
  * Caps Lock should now work properly
  * AltGr key found on various international keyboards now functions properly. 
    Be aware, however, that as the AltGr key is implemented in Windows as CTRL+ALT, 
    any Inner Space binds using CTRL+ALT will interfere. At present, this includes 
    (by default -- any and all of these can be removed or changed) 
    - CTRL+ALT+# (1 through 0, as many sessions as you have) globally for session switching
    - CTRL+ALT+F for FPS indicator
    - CTRL+ALT+M for Memory indicator. 

1.09 Build 4887
- Fixed various exit-related issues (crash and "ghosting")

1.09 Build 4882
- Relay groups are now automatically linked with Remote Uplinks
- Remote Uplinks should now deny duplicate connections
- Fixed a Remote Uplink disconnection detection issue
- Fixed a crash on exit

1.09 Build 4868
- Fixed (and re-fixed) EverQuest 1 mouse-related issues

1.09 Build 4865
- File redirection will now automatically copy the original file to the new file if
  the file does not exist.
- Fixed a crash in shutdown for G15 or G11 users

1.09 Build 4862
- Added "all uplinks" and "all other uplinks" targets to relay command
- Remote sessions can now join relay groups
- Experimental support for new X-Keys input devices (xkeys.com). Older X-Keys
  devices are natively supported, but devices using the newer firmware needed
  special handling. I don't have an X-Keys device to test with, but it should work.
- Added PlaySound command
- Added -lock and -unlock to WindowCharacteristics command
- New Command:
  * LockForeground <on|off>
- LavishScript
  - script.CurrentDirectory is now correct during pre-processing
  
1.09 Build 4839
- World of Warcraft: Fixed virtual mouse positioning issue introduced by WoW 3.0.8
- Added additional output to bind failures
- Added additional output to "Failed to launch" (when attempting to launch an
  application through Inner Space). It now either briefly describes the problem
  or includes an error code that can be reported.
- Added detection for corrupt InnerSpace.XML file. If InnerSpace.XML is corrupt,
  a message box will pop up with the option to delete it and start fresh.
- MouseWheelUp and MouseWheelDown are now available for the Bind and Press commands,
  as well as button events
- Processor command no longer stops processing additional parameters at "only"
- LavishSettings
  - Settings and Sets now support Attributes, which must follow XML attribute name rules
  - New object type:
    * settingattribute
  - New object members
    * settingattribute setting.FindAttribute[name]
    * settingattribute setting.FindAttribute[name,auto-create with default value]
    * settingattribute settingset.FindAttribute[name]
    * settingattribute settingset.FindAttribute[name,auto-create with default value]
  - New object methods
    * setting:AddAttribute[name,value]
    * settingset:AddAttribute[name,value]

1.09 Build 4828
- Fixed issue with mouse cursor in EVE Online in background windows (e.g. with
  Repeater)
- Fixed issue with cursor positioning in scaled windows

1.09 Build 4818
- Fixed a crash on game exit that would happen sometimes with Windows XP
- Fixed a bug with the new ismenu data type that prevented adding sub-menus or
  separators in some cases

1.09 Build 4816
- Fixed issue with DirectInput sometimes not accepting input on new sessions
  (example: Mouse sometimes would not work in EverQuest)
- Fixed issue with crash reporter coming up multiple times
- Sessions will now properly automatically reconnect to the Uplink (main program)
  if it is closed and restarted

1.09 Build 4811
- Restored Windows 2000 compatibility (fixed the message that said GetProcessId
  could not be located in KERNEL32.dll)
- Improved DirectInput support. There is no longer a "mouse flickering" issue in
  Star Wars Galaxies
- Custom menu items can now be added to the Inner Space menu
- DefaultStartup.iss (the default startup script) is now additionally used by the 
  Uplink, and now has functionality to scan new Scripts\init-uplink and 
  Scripts\init-session folders for scripts to automatically run any time the uplink
  or a session is launched, respectively. The scripts in these folders should not
  be scripts that stay running (but can launch scripts that do) because the "init"
  script functionality will run each script and wait for it to end before running
  the next. The scripts will be run in alphabetical order.
- Uplink
  * New data types:
    - ismenuitem
      - ismenu
      - ismenucommand
      - ismenuseparator
  * New Top-Level Objects:
    - ismenu ISMenu
      ... ISMenu[#] (return type is an ismenuitem-derived type)
  * Documentation for the above data types and TLOs:
    http://www.lavishsoft.com/wiki/index.php/IS:Uplink#Object_Types

1.09 Build 4799
- Press command will now translate Mouse1 through Mouse5 to mouse clicks of that
  button, giving another alternative to the mouseclick command and enabling (e.g.)
  press ctrl+mouse1
- Press command now accepts a -nomodifiers switch, which will release any modifiers
  for the duration of pressing the given combo. It may not be used with -release or
  -hold. 
  Examples: 
    press -nomodifiers 2
    press -nomodifiers alt+2
    press -nomodifiers ctrl+mouse1
- Bind -delete will now accept the wildcard character '*' (asterisk) at the end of
  the name
- Alias -delete will now accept the wildcard character '*' (asterisk) at the end of
  the name

1.09 Build 4794
- Fixed Num Enter, Num 5, and Clear (Clear is Num 5 without Num Lock)

1.09 Build 4791
- New object members:
  * bool gdiwindow.IsForeground (Ex: ${Display.Window.IsForeground})
  * monitor gdiwindow.Monitor

1.09 Build 4790
- Fixed a recently-introduced crash in Age of Conan and probably other games
- New commands:
  * FocusClick application|eat|click
    Sets focus click behavior. Default is now "application" meaning it follows the
    host application's default behavior (build 4786 made the default "eat", spurring some
    complaints). Eat means a click used to focus the window will be eaten. Click means 
    a click used to focus the window will also be interpreted as a click in the host.
- Support added for G11 keyboards (G-key and M-key binds; G15 keyboards were 
  already supported). Also added support for 6 G-key G15 keyboards.
- New object types:
  * g15 - used for querying or setting M-key lights, keyboard and LCD backlight levels.
          Also works for G11 keyboards.
- New object members:
  * g15 input.G15

1.09 Build 4786
- Experimental EverQuest II window sizing support (note: EQ2 doesn't make this easy,
  so there may be some wonky behavior)
- Improved process launcher behavior -- now supports more games, tested to include 
  Lord of the Rings Online. May also include D&D Online and Entropia Universe, among
  others.
- Fixed display scaling issue with Lord of the Rings Online
- Fixed FileRedirect command functionality for some cases that were not working, 
  such as config.wtf in World of Warcraft
- Game detection process will no longer modify existing default profiles
- LavishScript
  * Fixed auto-destruction of global scope arrays

1.09 Build 4761
- New command "WindowCharacteristics" combines WindowFrame, WindowVisibility, 
  WindowPosition and WindowFrame commands into a single command for improved
  performance when setting multiple characteristics
- Hopefully fixed issue where multiple sessions launched fast enough could think
  they could use the same name (e.g. 2 sessions saying is1)
- Fixed handling of Right Control, Right Alt and Right Shift 
- New data types
  * monitor
- Added object members
  * uint display.Monitors
- New events
  * OnMouseWheel[Offset] - Offset is a multiple of 120, for example 120 is one
    click up, -120 is one click down, -240 is two clicks down
  * OnMouseEnter - Mouse has entered the display window
  * OnMouseExit - Mouse has left the display window
- The following events now have a bool Context object (a Context object is used
  with many different events to provide contextual information for the event). For
  these events, setting the Context bool to FALSE will block the input from being
  processed by the game or by binds:
  * OnAxisMove
  * OnButtonDown
  * OnButtonUp
  * OnButtonMove
  * OnDPadMove
  * OnMouseWheel  
- Added new MouseWheel <Offset> command for emulating mouse wheel movement
- Added mouse:Wheel[Offset] method for emulating mouse wheel movement
- Added new command in Uplink, only available from sessions
  Syntax: RelayGroup -list|-join <name>|-leave <name>
  Example: Uplink relaygroup -join tanks
- Relay command now accepts relay group names, and 
  "other <relay group name>" (to send to all OTHER in that group)
- Some crashes related to IS-D3D9 fixed
- LavishScript
  * Added uint system.Processors
- LavishGUI
  * When Left and Right clickthru are set, scroll wheel will automatically
    fall through as well
  * MessageBox and InputBox commands now accept a -skin parameter
    - Note: Avoid using either where possible
  
1.09 Build 4740
- Frame locking will now always occur at the soonest opportunity
- MouseTo command now has an optional -relative parameter
- mouse object type
  * mouse:SetPosition now has an optional -relative parameter
  * bool mouse.Cursor is TRUE if the mouse cursor is visible
- New events
  * OnMouseMove[ChangeInX,ChangeInY]
- Uplink
  * New events
    - OnRemoteSessionConnected[uplink name,full session name]
    - OnRemoteSessionDisconnected[uplink name,full session name]
    - OnUplinkRenamed[ipaddress,name]
  * Updated events
    - OnUplinkDisconnected[ipaddress,name]
  * New object types
    - session
    - remoteuplink
  * New Top-Level Objects
    - session Session[#]
    - remoteuplink RemoteUplink[name]
  * Updated Top-Level Objects
    - session Session[name]

1.09 Build 4711
- Added "all other" and "all other local" targets to relay command
- Relay should be more friendly when quoting the command to send
- LavishScript
  * Added -repeat # switch to Execute command

1.09 Build 4700
- Added -stealth switch to windowframe command

1.09 Build 4698
- Fixed sticky CTRL / SHIFT / ALT keys
- Added 'GlobalKey' command which can allow specified buttons to bypass Inner Space's virtualized
  input states and use the global key state, for a given session. An example use for this feature 
  is to allow game-specific voice chat keys to activate voice chat when the window is not foreground.
  * Syntax: GlobalKey -keylist|-list|-clear [key]|<key>
    Examples:
      GlobalKey ctrl
      GlobalKey mouse3
- Non-3D applications will now have an emulated 30 frames per second, thusly allowing, for example,
  relaying commands to non-3D applications such as Notepad.exe (though they will still not have
  full Inner Space display and input support)
- Fixed IS-D3D9.dll related crash on shutdown in Age of Conan and EVE
- Fixed mouse wheel issues in Warhammer Online
- LavishGUI
  - Added SkinPrefix attribute to SkinTemplate tag to simplify skinning a little
  - ScrollBar:
    * Skinning improved. Instead of 3 different properties per button and 2 for the slider,
    new templatable UpButton, DownButton and Slider tags define the actual buttons and slider.
    * Can now be created via XML
  - TabControl:
    * Skinning improved. Instead of 3 different properties per button, new templatable LeftButton 
    and RightButton tags define the actual buttons. Some properties (size and positioning) will be 
    overridden by the TabControl. If the new tags are not present, the old functionality will be 
    used for compatibility.
  - TextEdit:
    * VerticalScrollBar tag is now a container for the actual scroll bar
  - Console:
    * ScrollBar tag is now a container for the actual scroll bar
  - ListBox:
    * ScrollBar tag is now a container for the actual scroll bar
  - TextEntry:
    * Now supports Texture and TextureFocused
  - Gauge:
    * Now inherits Frame, allowing BackgroundColor, etc
    * Now has a TopTexture, which will be overlayed on top of the filler. A solid filler can now appear
      behind a semi-transparent top layer.
  - Window:
    * Percent-based window sizes no longer add the border size to the height/width of the window
  - Added Tree control
  - LavishScript object changes:
    * Added string lavishgui.CurrentSkin - During loading a UI with a skin, this is the name of the skin.
      For example, in an OnLoad embedded script, this could be stored for later use.
    * Added lguitexture:Copy[lguitexture] - Copies the given texture details into this one. For example,
      from a cache of textures (such as a set of hidden frame elements)
    * Added optional 4th parameter to lguielement:AddChild, which if present specifies the skin to use.
    * Added lguielement.AddChild, identical to lguielement:AddChild, but returns the created element.
    * Added lguielement:SetMetadata[key,value]
    * Added lguielement:UnsetMetadata[key]
    * Added string lguielement.GetMetadata[key]
    * Added lguibutton.Texture, lguibutton.TexturePressed, lguibutton.TextureHover
    * Added lguicheckbox.Texture, lguicheckbox.TexturePressed, lguicheckbox.TextureHover,
            lguicheckbox.TextureChecked, lguicheckbox.TextureCheckedPressed, lguicheckbox.TextureCheckedHover
    * Added lguilistbox.Texture
    * Added lguicombobox.Texture, lguicombobox.ButtonTexture
    * Added lguitabcontrol.TabTexture, lguitabcontrol.TabSelectedTexture
    * Added lguitextentry.Texture, lguitextentry.TextureFocused, lguitextentry.TextureCaret, 
            lguitextentry.TextureCaretOverwrite,
- DefaultSkin.xml has been updated to reflect the LavishGUI changes
- LavishScript
  - Implemented 'persistentref' type
    Members:
    * ... Reference
    Methods:
    * SetReference[object]
  - Implemented 'type' type members:
    * string PersistentClass

1.09 Build 4676
- Reimplemented delay on emulated keypress release, which should help solve key emulation issues 
  with games that have poorly implemented input systems (e.g. EverQuest II)
- LavishGUI
  - OnLeftDown and OnRightDown embedded script actions are now implemented
  - OnMouseWheel event now executes instead of OnLeftClick when the mouse wheel is moved
  - lguilistbox:Sort method (and by inheritance, the same for combo boxes) now allows for an optional
    parameter containing the name of a global atom to be used for sort comparison.
      atom(global) my_custom_sort(int A, int B)
      {
          // ${This.Item[${A}]} vs ${This.Item[${B}]} 
          // where This is the list box, A is the ID of the first item, B is the ID of the second
          // return -1 (less than 0) if item A should be before (above) item B (aka "A is less than B")
          // return 0 if item A is equal to item B
          // return 1 (greater than 0) if item A should be after (below) item B
          // ... just like string comparison functions
      }
- LavishScript
  - Improved data sequence error messages, and there was much rejoicing. 
  - Applied a performance optimization to query evaluation. Some (most?) queries should now run 2 to 3 times faster.
  - Implemented 'lavishscript' type members:
    * uint CreateQuery[expression] - Creates a query with the given expression -- e.g. ${LavishScript.CreateQuery[Name=="Bonkers"]}
    * string RetrieveQueryExpression[ID] - Retrieves the query expression for a previously created query
    * bool QueryEvaluate[ID,object] - Determines if the given object matches the given query
  - Implemented 'lavishscript' type methods:
    * FreeQuery[ID] - Frees a previously created query
- Added 'inputdevice' type
- Implemented 'input' type methods:
  * GetBindIterator
  * GetAxisIterator
  * GetDPadIterator
  * GetDeviceIterator

1.09 Build 4665
- LavishScript query system memory leaks fixed
- Graphical glitch fixed in some games

1.09 Build 4653
- Warhammer Online input-related issues solved
- Age of Conan input-related issues solved
- .NET initialization failure code 3 now provides additional information. We are working on fixing
  this issue.

1.09 Build 4618
- LavishScript
  - Math errors now generally show the math sequence being processed (due to certain limitations,
    you may see two different failure messages in a row)
  - Setting uint at declaration time now works identically to uint:Set

1.09 Build 4614
- .NET 2.0
  - Most LavishScriptAPI functions that enforce explicit frame locking when requested 
   (LavishScript.RequireExplicitFrameLock=true) now frame lock themselves when explicit frame locking 
   is not enforced. 

1.09 Build 4611
- .NET 2.0
  - Fixed adding LavishScript commands
- Relay command no longer adds an unecessary layer of escaping internally. This fixes some 
  relay-related bugs, but MAY break some workarounds.

1.09 Build 4602
- Fixed Final Fantasy XI Online keyboard and mouse issues
- .NET 2.0
 * Fixed bug with InnerSpaceAPI.InnerSpace.Memory.WriteMemory not getting the modification protected

1.09 Build 4601
- Fixed mouse functionality in Hellgate London
- Fixed issue with "black console window" in Age of Conan (beta)
- Improved handling and output of "DotNet" command where the given assembly could not be found, and
  added display of the inner exception if there is an unhandled exception in the assembly's main thread
- Misc other fixes

1.09 Build 4600
- Fixed "mouse not working" bug in EVE Online (this should also fix Final Fantasy XI Online, though
  it has not yet been confirmed).

1.09 Build 4598
- Most of the old navigation system deprecation messages have been removed. The "navigation" command
  is now the only thing that will display the message in the console. The deprecation message now says:
     Navigation command has been deprecated since March 2006 (over a year and a half).
     It's really not that hard to convert to LavishNav, and we've been patiently waiting for people to do so, so that we can remove this command.
     So please, instead of whining that it is spamming, at least make some effort to see that the old, deprecated system does not get used anymore.
     It crashes anyway, and those crashes will not be fixed.
  Also, this is not something for regular users to worry about. If you're not creating scripts, then
  all you need to do is complain to the people who wrote the scripts you are using that give the message.

1.09 Build 4595
- .NET Initialization failure code 3 should be fixed
- To make it easier to convert paths to LavishNav, the old navigation system now has the ability to
  export loaded data (all, or individual worlds) to LavishNav-compatible XML files. Any of the export
  methods in the old system (navigation -dump, navigation:Export, and navworld:Export) now accept a
  -lavishnav switch as a parameter prior to the output filename. For example, to convert foo.xml:
    navigation -load foo.xml
    navigation -dump -lavishnav foo-lnav.xml
    navigation -reset

1.09 Build 4594
- The "Open" command (only available in the Uplink) now accepts an optional third parameter, which is
  a command to be executed upon launch. The execution of the command will take place at the end of
  the session's Startup Sequence. 
- .NET 2.0
  * Performance of GetMember<T> / GetObject<T> where the retrieved object is one of the base 32-bit (max)
    LavishScript numeric types should be a bit better. Such conversion usually happens by converting
    to and from strings, but now has a more direct path for those instances.

1.09 Build 4589
- Stability fixes, including:
  * NearestConnectedRegion in LavishNav should no longer cause crashes
  * Fixed additional session launch bugs, including the EverQuest II patcher

1.09 Build 4577
- Fixed various bugs with FFXI Online (still working on a keyboard issue)
- Lord of the Rings Online mouselook issue fixed
- DotNetScript fixed for launching .NET scripts within games
- Windows 2000 launch crashes fixed

1.09 Build 4547
- Session launches now use a new loader. This should hopefully fix launch crashes with EVE. Sorry, this
  probably does not affect the win2k issues with Vanguard, that's still coming.

1.09 Build 4529
- Stability fixes, including:
  * System:APICall crash should be fixed
  * Fixed EVE launch bug

1.09 Build 4528
- Stability fixes, including:
  * Fixed remaining Vanguard launch crashes, hopefully
  * Fixed LavishScript crash with ... construct when not supplying all prior parameters to the function call
- LavishNav:
  * Improved Fully-Qualified Name resolution algorithm

1.09 Build 4505
- Stability fixes, including:
  * DecodePointer error messages will no longer pop up on Windows versions earlier than Windows XP w/ SP2
  * Vanguard sound-related crash on startup should be fixed

1.09 Build 4501
- Stability fixes, including:
  * Fixed LavishGUI crash when a command button destroys itself in OnLeftClick (hint for Vanguard script
    devs: if you're using OnLeftClick, you don't need to use a command button!)
  * Hopefully fixed LavishNav-related crashes with vgcraftbot and some other Vanguard scripts
- Fixed EVE launching under Windows Vista
- World of Warcraft safety updates (requires new version of Warden protection)

1.09 Build 4476
- Fixed .NET initialization error
- Fixed mouselook issue with EverQuest 1, and probably other games that use certain features of DirectX
  for mouse control

1.09 Build 4473
- When loading an extension with the Extension command, and the extension is already loaded, the message
  will now indicate that the extension "is already loaded", rather than "could not be loaded".
- The DotNet command now converts relative file paths (for the "assembly name" parameter) into
  absolute file paths, with the Inner Space .NET Programs folder as its root. This should not change any
  other usage of the DotNet command, and should not adversely affect anyone.
- Fixed graphics incompatibility with The Lord of the Rings Online, as well as other games that may have
  had similar graphics glitches

1.09 Build 4472
- World of Warcraft can no longer be launched through Inner Space without Warden protection.

1.09 Build 4466
- Stability fixes, including:
  * Fixed crashes with Warcraft III
  * Fixed .NET application random crash on unload (the infamous "LavishVM Frame Ends" crash)
  * Fixed LavishScript bug when entering a command starting with a special character
- Added a .NET scripting engine. This engine works by reading an XML file that describes
  how to build a temporary assembly to execute. The XML file can be used with the RunScript 
  command to run the script (e.g. "run myscript"). Any .NET language available on your computer can be 
  used -- if the .NET framework is installed, this usually includes C#, C++, VB, and JScript. Additional 
  languages may require separate installation. If an invalid language name is used, then the list of 
  languages that are available is displayed. Documentation for this feature is available at
  http://www.lavishsoft.com/wiki/index.php/DotNetScript

1.09 Build 4456
- Stability fixes, including but not limited to:
 * Threads (e.g. in .NET) that terminate (e.g. via an unhandled exception) while having active 
   frame locks no longer result in a permanent frame lock
 * Fixed DEP crashes, e.g. those caused as a side effect of the World of Warcraft patch
 
1.09 Build 4447
- Stability fixes, including but not limited to:
  * Fixed potential crashes when launching games. The crashes could happen with various malware
    present, such as Wine (jab jab), or other programs installed.
  * Fixed LavishSettings iterator crashes and iterator:Jump on LavishSettings iterators
  * Fixed crash in LavishScript preprocessor with empty preprocessor #macros
- Added TLO to uplink:
  * bool Session[name]

1.09 Build 4443
- Stability fixes
- Added 3rd and 4th monitor selection to game profile configuration
- .NET 2.0
  * LavishVMAPI.FrameLock now implements IDisposable and its Lock and Unlock members are now public,
    as they were meant to be. The class is actually usable now.
  * LavishNav API now properly handles the AllPointsValid flag when creating regions

1.09 Build 4438
- Stability fixes
- ISXDK 30b changes LavishScript object container classes to use virtual functions. Extensions
  that use these classes should be recompiled with the new ISXDK to avoid crashes when accessing
  them through LavishScript.
- Numpad Enter should now work properly for games that use standard Win32 input
- Modifier key emulation (e.g. shift, alt, ctrl) should now work properly for games that use 
  standard Win32 input
- Per-thread frame lock management is now implemented directly in Inner Space (in addition to
  the .NET API functionality previously added). Frame locks held by the application's main thread
  (e.g. due to locks in event execution not cleaning up) should now be automatically released to
  prevent deadlock, and will echo a warning to the console.
- LavishScript
  * The global script's CWD (current working directory) is now properly set to the LavishScript
    base path
- .NET 2.0
  * Command and Event handlers now count thread frame locks. If a command or event handler executes
    and locks without unlocking or successfully unlocks without locking (due to unlocking a lock
    held by the thread, but not in the command or event handler), a warning will echo to the console.
  * Fixed bug from build 4419 that caused commands added by .NET apps to be removed by garbage 
    collection
  * InnerSpaceAPI.InnerSpace.Memory.WriteMemory now has an overload that does not require the Size 
    of the byte array. WriteMemory and UnwriteMemory are now implemented.

1.09 Build 4421
- Stability fixes including LavishNav:Clear and console resizing
  * Note to the guy with the irate message about console resizing: one crash report per day
    per issue is just fine. Reporting the same issue many times won't help. One person
    submitting tons of identical crash reports only gets that person filtered out of our
    crash reports. The issue is fixed because it has been around for a while, and we've gotten
    crash reports from several people over a period of time. Besides, you don't need a negatively
    sized console anyway.
- .NET 2.0
 * LavishVMAPI
   - New class LavishVMAPI.FrameLockManager helps resolve Frame Locking issues by retaining
     a count of locks. Problematic operations will result in thrown exceptions (see 
     LavishVMAPI.Exceptions). Can be instantiated, but is automatically used by the API (see below).
   - LavishVMAPI.Frame now uses a thread-static FrameLockManager (a separate FrameLockManager
     per thread). All user-created FrameLockManagers use LavishVMAPI.Frame.
   - New class LavishVMAPI.FrameLock wraps frame locking in a friendly, beige package. Maintains
     a single lock (may use a custom FrameLockManager), and automatically unlocks upon destruction.
 * LavishScriptAPI
   - LavishScriptAPI.LavishScript.Events.AttachEventTarget, DetachEventTarget and ExecuteEvent 
     now have overloads for passing the event name as the first parameter, instead of having to use
     the event ID.
 
1.09 Build 4419
- Fixed EverQuest II crash on startup after today's EQ2 patch
- .NET 2.0
 * Various APIs have been improved
 * Direct usage of delegates as methods is no longer used. The delegates have been internalized 
   to improve code documentation as well as provide better cross-language compatibility.
 * LavishScript events now use a standard event handler mechanism, using LSEventArgs. All
   event usage must be converted. Unhandled .NET exceptions during event execution will be 
   trapped and echoed to the console. Events are automatically cleaned up for you, if not
   done explicitly.
 * Commands now use public delegate int CommandTarget([In] string[] args). Unhandled .NET
   exceptions during command execution will be trapped and echoed to the console. Commands
   are automatically cleaned up for you, if not done explicitly.
 * Documented all Lavish.InnerSpace.dll API
 * When the .NET functionality fails to initialize, more information is now given
- LavishScript
 * Object query support has been added. Extensions can use ISXDK 30a (or later) for direct
   access to this functionality. An object query is a math formula where all variables
   are relative to a specific object, and results in a boolean value -- the query is either
   true, or it is false. Query math can compare and manipulate text, decimals, or integers 
   (note that bool counts as an integer for this purpose) with standard math operators. Text
   comparisons are not case sensitive. One intended use for object queries is a uniform search 
   mechanism, to find an object or set of objects from a larger set of objects (compare to a 
   SQL SELECT statement, where a LavishScript object query is the WHERE clause).
   See http://www.lavishsoft.com/wiki/index.php/LavishScript:Object%20Queries for more info.

1.09 Build 4402
- Stability fixes
- LavishNav
  * Added lnavregion:SetBounds[] -- same parameter ordering as AddChild, starting with
    region-specific information (e.g. the size and position, not name or type)

1.09 Build 4396
- Restored XP64 compatibility

1.09 Build 4394
- Stability fixes
- New games successfully tested
  * Final Fantasy XI Online
  * Lord of the Rings Online
  These games have not yet been added to auto-detection. FFXI can be added via Add Game
  by selecting pol.exe, and LOTR can be added by selecting TurbineInvoker.exe. The games
  were tested under Windows Vista. There are reports that they may not yet work with
  Windows XP.
- LavishNav
  * Fixed -dynamic flag for lnavpathfinder:SelectPath
  * Added lnavpathfinder.NearestConnectedRegion
- .NET 2.0
  * Stability updates
  * Documentation updates

1.09 Build 4371
- Stability fixes
- .NET 2.0
  * API documentation XML files are now included

1.09 Build 4369
- Fixed a nasty memory leak

1.09 Build 4367
- Stability fixes

1.09 Build 4366
- ISXDK v30 - Stability fix involving the LavishScript index type.
- LavishNav
  * Fixed inaccuracy in A* pathfinding algorithm
  * Fixed BestContainer algorithm when traversing backward
  * Added optional "max cost" parameter to lnavregion:SelectPath
- LavishScript 1.96
  * LSModule v17
  * Crash fixed when executing a command with a parameter that only contains a quote, such
    as echo "
- .NET 2.0
  * Fixed LavishNavAPI.Region.AddSphere and AddRadius -- they previously mixed up part of
    the coordinates with the radius.
  * LavishScript-related API that accepts argc,argv now translates the args to LavishScript 
    rules (i.e. null args are translated to empty strings) -- the actual string values are 
    not modified
  * Fixed LavishNavAPI functions returning List<Region>

1.08 Build 4347
- Video capture technically works again. Sound is not confirmed to correctly record.
- .NET 2.0
 * Added static function IsNullOrInvalid to LavishScriptObject and LavishScriptPersistentObject,
   equivalent to string.IsNullOrEmpty
 * Fixed crash bug in LavishScriptObject.GetPersistentIndex
- LavishNav
 * Automatic region naming is now available when dynamically creating regions (i.e. not from
   permanent storage). Use "auto" as the name to have a name automatically generated.
 * .NET API now includes Add methods for regions without supplying a name, for auto-naming

1.08 Build 4338
- LavishNav
  * Fixed discrepancy between lnavregion.Connect and lnavregion:Connect. Both work identically now.

1.08 Build 4337
- Some stability fixes, including but not limited to:
  * LavishGUI user input boxes should no longer crash (this is usually shown as heap corruption
    under Windows XP, and as a crash every time under Vista)
  * LavishScript should no longer crash when cleaning up global variables of script-defined type
  * LavishSettings iterators should no longer crash when pointing to a node that was just
    removed
- LavishScript
  * The default precision for the float and relative types (floatptr, float64ptr) when
    reduced to text is now undefined, instead of 2 decimal places. The "Centi" member
    of float can be used to reduce the precision to the old format for display. For
    example: ${Float[3.14159].Centi}. The intended effect of this is to improve
    overall precision in calculations -- for example, this makes it much easier to
    use trigonometry functions. This could fix some trig-related crashes as well.
- LavishNav
  * Added lnavregion:AddToGroup[name] - shortcut for creating a named region group and
    adding the region. This is also available in the .NET API.
- .NET 2.0
  * Added LavishScriptAPI.ExecuteCommandEx, which is a near-direct path to the command
    implementation -- performing no LavishScript parsing, etc.

1.08 Build 4335
- LavishGUI API v11 - Extensions that provide custom GUI element types (such as radars)
  must be updated, or the GUI elements will not be available -- the extensions will
  otherwise work, however. ISXDK 29f is available for download.
- Windows Vista stability fixes

1.08 Build 4332
- .NET 2.0
 * LavishSettingsAPI added to Lavish.InnerSpace.dll (thanks to Tenshi for providing
   the base for the wrapper)

1.08 Build 4330
- Fixed crash with LavishSettings iterator:Last on an empty set
- Fixed some other crash issues
- Fixed input problems in Vanguard: Saga of Heroes
- Fixed Vanguard game detection
- LavishNav
 * Added "prism" region type, which makes right triangular prisms -- 3 vertical rectangle
   sides, and 2 triangles for top and bototm. This region type works identically to
   the triangle region type, except that the containment behavior for the Z axis is
   identical to the box region type. Z1 (bottom) and Z2 (top) are defined by the first
   two points of the triangle, and the third point's Z is ignored (and will remain 0).

1.08 Build 4317
- .NET 2.0
  * Persistent objects API added. Persistent objects are valid until something says
    otherwise, instead of at the end of a frame. Frame locking should still be used
    when accessing the objects, but the lifetime should now be less restrictive.
    Persistent objects are implemented as LavishScriptPersistentObject instead of
    LavishScriptObject. Only LavishScript types that support object persistence can
    be referenced as a persistent object. Persistent objects may be retrieved with
    GetPersistentObject, GetPersistentMember, GetPersistentIndex from the appropriate
    parent classes. LavishScript variables (obtained with NewObject) are still a
    special type of persistent LavishScriptObject.
  * GetPermanentObject is now the same as GetPersistentObject and may only be used for
    persistent object types
  * IsValid property is now added for both LavishScriptObject and LavishScriptPersistentObject
  * Fixed DLL search path
- LavishNav
  * Added 2D BestContainer. Pass 2 arguments instead of 3 to ignore the Z axis for the
    algorithm.

1.08 Build 4310
- .NET 2.0
  * Fixed LavishScript API crash issues when using Objects.GetMember/GetMethod/GetObject
    resulting in a LavishScriptObject of a type that supports variables
- Added OnSessionRenamed event for sessions

1.08 Build 4302
- .NET 2.0
  * Application domains now unload automatically when an application's main thread terminates
  * Exceptions should be a little bit more friendly

1.08 Build 4300
- Fixed the "exit" command used in sessions not immediately terminating
- LavishNav
  * Fixed bug with importing from LSO and overlapping existing regions

1.08 Build 4299
- The "exit" command when used in the uplink will now remove the system tray icon
- LavishScript
 * Fixed crash issue with object methods as event targets

1.08 Build 4294
- .NET 2.0 ( see www.lavishsoft.com/wiki/index.php/IS:.NET )
  * Much of the API now has documentation in the assemblies
- LavishNav
  * lnavpathfinder.SelectPath now accepts a -dynamic switch for per-connection cost
    checking. Without -dynamic, the return value of the given atom is assumed to be
    a non-zero/zero "pass/fail" (i.e. use or do not use the connection). With -dynamic, 
    the return value of the given atom is assumed to be INFINITE for do not use,
    otherwise a floating point cost value (e.g. distance). Note that this is only
    for real-time dynamic connections. Permanent cost values can still be set for each
    connection by setting the "distance override".
  * Per connection dynamic cost and pass/fail is now available through the LavishNav
    .NET API by passing a callback to SelectPath.
  * Fixed triangle center point
  * -allpointsvalid switch now works when creating regions
  * All children of the root universe are now implicitly "unique"
  * LavishNav.NET changes:
    - AStar and Dijkstra objects should now be created with new AStar() or new Dijkstra()
      instead of using AStar.GetNew() or Dijkstra.GetNew()
    - new Path() should now work correctly
- LavishScript
  * Fixed issues with function parameter default values

1.08 Build 4292
- .NET 2.0 ( see www.lavishsoft.com/wiki/index.php/IS:.NET )
 * (nearly) All functions using string[] parameters now use the "params" construct
 * LavishScriptAPI.Point3f class added
 * LavishScriptAPI.LavishScriptIterator class added
 * LavishNav API is now implemented as the LavishNavAPI namespace in Lavish.LavishNav.dll
- LavishNav
 * All pathfinders are now automatically reset when a region or connection is removed
 * Fixed potential crash issue in lnavregion.Connect
 * lnavconnection lnavregion.GetConnection[ID or FQN] is now implemented

1.08 Build 4290
- .NET 2.0 ( see www.lavishsoft.com/wiki/index.php/IS:.NET )
  * Assemblies are no longer required to be placed in the Global Assembly Cache to be
    loaded via the DotNet command. The main Inner Space folder and the .NET Programs 
    subfolder are searched by default. Assemblies can be loaded by path relative to 
    the Inner Space folder.
  * LavishScriptObject class now includes a GetLSReference function, which can be
    used to pass a LavishScript object to methods that require an object reference,
    such as lnavpathfinder:SelectPath or objectcontainer:GetIterator.
    ex (C#): ExecuteMethod("GetIterator",new string[] {MyIteratorObject.GetLSReference()})

1.08 Build 4282
- .NET 2.0 "scripting" support is now available
  * ISXDK 29d provides API for managing .Net assemblies and bootstrapping API
  * DotNet command can be used to load assemblies, list active "application domains"
    as well as unload application domains.  Any number of assemblies can be loaded into
    a given application domain.

1.07 Build 4252
- Default console binding is now changed to be friendlier to our international friends.
  Default keys in order of precedence are ` § ~ F12.  The first key from the left that
  is found to exist will be used as your default console key.

1.07 Build 4249
- Extension crash reporting is fixed.

1.07 Build 4247
- Remote sessions are no longer counted by the patcher
- Crashes in, but not handled by an extension, should now pop up an extension error 
  report in notepad
- LavishScript
  * Fixed memory leak in variable cleanup
  * Fixed bug that allowed ended scripts to continue to run (and on bad memory)
- LavishNav
  * Minor optimizations that should go unnoticed
  * GetConnectionIterator is now implemented
  * Fixed possibility of infinite loop in path generation
  
1.07 Build 4220
- LavishScript 1.95
 * "Encountered empty [typecast/member/method]" messages fixed and functionality restored
 * variablecase fixed
 * unistring object type added
 * Added string string.URLEncode
- LavishNav
 * lnavpathfinder:SelectPath now accepts an additional parameter for per-connection 
   avoidance checks
 * lnavregion:Import, lnavregion:Export, lnavregion:ExportChildren now support LSO output
   by using -lso as first parameter, filename second.  This format is smaller and faster,
   but not easily editable and the format is not necessarily backwards compatible, so it 
   is advisable to keep an XML copy, and use LSO if load time is important.  In the
   forseeable future, asynchronous Import functionality will be added as well.
- Added event OnFrame()
- Emulated mouse clicks and mouse wheel now pass through LavishGUI
 
1.07 Build 4179
- LavishNav
  * Added object type methods and members
    uint lnavregion.ConnectionCount
    lnavregion:GetConnectionIterator[iterator object]
  * Fixed FullContainer behavior for rect and box
- The Macro command makes its triumphant return (its disappearance was not intended, but
  nobody noticed until now)

1.07 Build 4174
- Fixed bug with loading XML from a buffer (hud -add fixed)
- Keyboard interaction should now be interpreted with UTF-8

1.07 Build 4172
- LavishNav v1.02
  * Fixed bug with using BestContainer from a region that defines a coordinate system.
  * lavishnav object type now inherits lnavuniverse, a shortcut to lavishnav.Tree
- Relay fixed up a bit.  Among other things, it is now moved directly into the kernel,
  rather than provided by the uplink and sessions separately.   The relay command also no 
  longer shows "session not found" error messages. Its new syntax is as follows:
    Relay <uplink name|session name|all|all local> [-echo|-event <name>|-noredirect] <message|command>
  * -echo is essentially a shortcut for -noredirect echo
  * -noredirect is the new name for -rsp, which was ambiguously named.  It should now be more obvious
     that the switch stops the output from going to the sender.  
  Examples:
  * relay is1 -echo ${SomeVariable}
    - Echoes the value of SomeVariable to is1
  * relay is2 echo \${SomeVariable}
    - Echoes the value of SomeVariable on is2, to the current window
  * relay is1 -event "Some Event" Parameter to Some Event
    - Executes LavishScript event called "Some Event" on is1, with a parameter containing 
      "Parameter to Some Event" (sorry, only 1 parameter possible. multiple parameters will
      be available when Lavish Virtual Transport replaces the relay system)
  * relay somecomputer.is1 -echo HELLO FROM THE OTHER COMPUTER!
    - Echoes "HELLO FROM THE OTHER COMPUTER!" in is1 on somecomputer
  * relay somecomputer.is1 press -keylist
    - Retrieves the list of available keys on somecomputer.is1, for display in the current window
  * relay is2 -noredirect press -keylist
    - Retrieves the list of available keys in is2, and displays them in is2

1.07 Build 4148
- Yet another reworking of the character encodings.  All known issues with UTF-8 should
  be fixed
- Remote uplink disconnect detection issue should be fixed
- Added events
  OnSessionConnected(string name)
  OnSessionDisconnected(string name)
  OnSessionRenamed(string oldname,string newname)
  OnUplinkConnected(string IPAddress)
  OnUplinkDisconnected(string IPAddress)

1.07 Build 4126
- Keyboard state should no longer be sticky when switching applications with DirectInput
  games (e.g. EverQuest 1)
- Emulated mouse positioning should now work better in the background
- Børk! Børk! Børk!  Our Swedish friends should no longer have trouble with umlaut characters.
  Neither should anyone else.
- Virtual Input now handles non-client areas of the game window.  This fixes the bug with 
  clicking on World of Warcraft's title bar or borders after patch 1.12.

1.07 Build 4123
- XML files, including Settings files, now correctly use UTF-8.  Any localized files
  previously used will need to be converted.  LavishScript files are expected to be
  UTF-8 encoded as well.  Note: If you have no idea what this means, then you
  probably don't need to worry about it.

1.07 Build 4086
- Stability update

1.07 Build 4084
- Several stability fixes
- Added object type members:
  input.Pending
* The press command should no longer get confused when pressing alternative input device buttons

1.07 Build 4075
- LavishSettings update.  The LavishScript objects for the LavishSettings system, to replace
  the present "dataset" object type, "SettingXML" object, and "XMLSetting" command, are now
  available and documented here: http://www.lavishsoft.com/wiki/index.php/LavishSettings
  The old objects and commands will soon be marked as deprecated and will begin spitting 
  warnings about removal.
- Virtual Input is now permanently active, regardless of input system selection.  Please
  report any remaining input bugs.
- The Uplink now also uses Virtual Input
- Added object type members:
  bool gdiwindow.AlwaysOnTop
  string gdiwindow.Frame
- Cedega users should no longer be shown the DirectX 9 update requirement box, as the
  detection failed.

1.07 Build 4042
- The April 2006 update to DirectX 9 is now required.  If this is not installed on your
  system, a box will pop up upon running Inner Space that will allow you to hit OK to
  be taken to the download, or hit Cancel to find it on your own.
- LavishScript 1.93 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- UTF-8 encoded localization strings should now stay valid instead of disappearing
- The uplink "Focus" command now accepts a session name as a parameter
- The "-rsp" switch now works in the session relay command

1.07 Build 4009
- Fixed shift emulation issues in Virtual Input
- Logitech G15 macro keys are now supported for binding with the Virtual Input system 
  enabled.  Note that this should not interfere with the G15's keyboard "profiler", but
  would work best through Inner Space with the profiler disabled.  Also note that using 
  the M1, M2 and M3 keys will not change the backlighting at this time -- however, they
  may of course be bound to select a new set of binds for the G1 through G18 keys.

1.07 Build 4008
- LavishScript 1.92 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed number pad issues
- Mouse positioning issues with Virtual Input have been cleared up
- EverQuest 1 screen sizing issues have been cleared up
- LavishScript event added
  * On Window Position(bool Stealthed)
    (Stealthed is if -stealth is used with WindowPosition or -rescale is used with
     WindowSize)
- The default startup script now automatically applies mouse scaling to EverQuest 1
- "Targz" LavishScript module (which adds support for tar/gzip) is now included by default.
  This module is somewhat incomplete, but supports extraction of standard tar (with or
  without gzip compression) files, and is open source if anyone wants to add missing
  features (see http://www.lavishsoft.com/wiki/index.php/LSModule:Targz).

1.07 Build 3990
- Inner Space's stealth system is now disabled by default.  This should only be enabled
  if you feel you have something to hide, and may subject you to stricter rules in games,
  particularly those that detect such stealth systems (World of Warcraft is now doing so).
  Stealth can be enabled by game configuration option, by object method, or by extensions.
- Added object type members:
  bool innerspace.Stealth
- Added object type methods:
  innerspace:EnableStealth
- Fixed issue with middle mouse button in EverQuest II

1.07 Build 3983
- Added object type members:
  intptr mouse.TranslateX
  intptr mouse.TranslateY
  floatptr mouse.ScaleX
  floatptr mouse.ScaleY
- Mouse position transformation (with the mouse.Translate* and mouse.Scale* objects
  described above) can now be used to fix cursor positioning issues with games that 
  make incorrect assumptions about window sizing (such as EverQuest 1).  Mouse transform
  is only available with the Virtual Input system.

1.07 Build 3982
- LavishScript 1.91 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishNav 1.01
- Alternative input devices are now supported.  Any axis, directional-pad or button can 
  be queried through the Input object, and buttons also work directly with the Inner Space
  bind system.  For example, the Nostromo n52 Speedpad2 can be configured with a 
  DirectInput profile to bind its keys independently of the keyboard -- the n52 doesn't 
  have to be a simple keyboard emulator!
  
  A new InputDevices.xml contains settings for customizing button, d-pad and axis names.  
  Without custom names, names of these inputs will be the names provided by the manufacturer, 
  which are usually generic and do not coincide with the label on the device itself (for 
  example, the Saitek command pad has buttons 1-9, mode A and mode B, but the button names 
  in the software by default are Button 0 through Button 10).  InputDevices.xml will be 
  device is installed and attached.  That session can be closed, the XML modified, and the 
  session restarted to immediately begin using the new device with customized names.  In my 
  testing, I chose to name the Saitek command pad buttons cp-1 through cp-9 and cp-A, cp-B.  
  The Nostromo n52 internally allows for 24 buttons, but I chose to name the first 15 buttons 
  n52-01 through n52-15 as labelled on the device.
  
  If an input device tries to use a name that is already in use, it will be prefixed with that 
  input device's session-specific device number -- e.g. the number is not necessarily
  going to be the same next time you load the same game, particularly if input devices are
  later attached or detached.  For this reason it is important that the keys are uniquely named,
  but short enough to be practical to use.
  
  Successfully tested devices include:
  * Nostromo n52 Speedpad2
  * Saitek Command Pad
  * Xbox 360 controller
- Fixed double-clicking issue in Virtual Input system
- Key name resolution (for binds, press, release, etc) now accepts virtual-key codes in place of 
  key names.  Note that code numbers under 256 are standard Win32 virtual-key codes (sans mouse 
  buttons).  256 and up are generated for alternative input device buttons.
- Added object types:
  button
  axis
  input
  dpad
- Added Top-Level Objects:
  input Input
- Added LavishScript events:
  OnButtonUp(string Name)
  OnButtonDown(string Name)
  OnButtonMove(string Name, bool Pressed)
  OnAxisMove(string Name, float Position)
  OnDPadMove(string Name, float Position) -note: 0.00 to 360.00 clockwise, -1 for "at rest"/middle

1.06 Build 3915
- LavishScript 1.90 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed flashing/tearing issues in some games, including EverQuest II and Half-Life 2 games
- PixelSearch spam removed (oops)
- Inner Space will now set its current directory to its installed location, rather than 
  allowing itself to be run in the context of another directory
- Improved Virtual Input system for DirectInput keyboard handling.  This solves keyboard
  problems with Auto Assault, and probably other games.  There is still a mouse sensitivity
  issue to work out.

1.06 Build 3893
- Fixed problem with game settings getting reset to defaults
- Fixed Inner Space UI display in some games
- Virtual Input system now available for testing.  This input system can be selected per game
  in the Game Configuration tab of the configuration window.  Selecting Virtual Input will
  cause the other input systems to be ignored.  This system will eventually replace the
  separate Win32 and Direct Input systems built into Inner Space, and solves various problems
  with games that use both Win32 and Direct Input (such as Auto Assault).  This new input
  system has been successfully tested with EverQuest, EverQuest II and World of Warcraft.
  We are still working on testing other games to make sure they will all work properly with
  the new system -- please let us know if you try this new system with a game, and how it goes.
  To head off questions about games that use software mouse cursors (such as World of Warcraft
  if the hardware cursor option is disabled), no input system will automatically allow Inner
  Space to use the software cursor for interaction with its UI, sorry (that must be done per
  game with a custom extension).

1.06 Build 3889
- Various crashes fixed
- Localization updates.  There is now a Language folder which may contain XML setting files
  for localization.  English.XML is created by default when Inner Space first runs.  An
  option for Language now appears in the configuration window.  Change the name of the
  language and restart to switch languages (only English is currently available direct).
  English will always be loaded first as a fallback, followed by the selected language.  The
  complete language file will be saved when Inner Space (e.g. the combination of English, plus
  anything in the given language file).  Thus, if you change the language to "Spanish" (note
  that it may be more appropriate to use Español than Spanish), it will be created if it does
  not exist, or if it did, any extra phrases that were in English but not Spanish would be
  added to the Spanish file.  This makes it easy to perform a translation simply by switching
  language names, restarting, and then editing the new Languages\Spanish.XML such that the
  values are replaced with the Spanish terms or phrases (not the "Name", which must remain
  the same).
  The localization currently only affects the tray menu, but will be continually extended.
- Added object types:
  * localization
- Added Top-Level Objects
  * Localization

1.06 Build 3874
- LavishScript 1.89 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishGUI 0.71 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- LSModule v16
- ISXDK v29 
- Made some changes to reduce frequency of ISXDK updates
- Fixed crashes in XML parser from very long elements

1.05 Build 3824
- LavishScript 1.88 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

1.05 Build 3802
- LavishScript 1.87 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LSModule v15
- ISXDK v28
- Fixed memory leaks in XML, settings and GUI
- Fixed input loss bug in EverQuest 1
- LavishNav, the new navigational system, is now active.  The old nav system is still in tact for
  now.  See http://www.lavishsoft.com/wiki/index.php/LavishNav
- Added object types:
  * gdiwindow
- Added object type members:
  * gdiwindow display.Window
- Added Relay command for sessions to avoid issues with re-parsing commands with the Uplink command
- Fixed issue with Uplink not being compatible with some video cards
- Fixed bug with comments in setting files progressively growing whitespace

1.04 Build 3520
- Fixed a bug with undetouring and then re-detouring with the same trampoline

1.04 Build 3503
- LavishScript 1.86 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed a memory leak in the utf8string library in ISXDK that affected several areas of Inner Space
- Fixed problems with detecting if a file with a UTF-8 filename exists
- XML parser now supports CDATA

1.04 Build 3450
- LavishScript 1.85 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Triggers now support atoms.  If the name given to AddTrigger is the name of an atom (as opposed
  to a normal function), that atom will be immediately executed, rather than queued.
- Uplink console spam is now removed in favor of targeted relay response.  In other words, if you
  relay a command from one session to another, you will see the output in the session the command
  was sent from.
- Game detection paths can now use folder aliases %PROGRAMFILES% %SYSTEM% and %WINDOWS%
- Added games to default list:
  * Age of Empires III

1.03 Build 3382
- LavishScript 1.84 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed command truncation issue with relaying commands to a remote uplink
- Improved DirectInput handler, which fixes input leaks in EverQuest 1, and possibly other games
  (FFXI Online comes to mind, but I don't have a valid FFXI account to test that with to know for sure)
- Support added all-around for UTF-8 filenames

1.03 Build 3363
- LavishScript 1.83 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed a crash in D3D9 engine when Direct3D9 failed to initialize
- Fixed a shutdown crash
- Added Hybrid Mouse option (for use with EverQuest 1)

1.03 Build 3354
- Fixed minor bugs
- Fixed hole in stealth system that allowed Warden to detect Inner Space extensions

1.03 Build 3353
- Fixed bug with navpoint.Incoming
- Added data type members:
  uint navpoint.ID
- Fixed some crash issues

1.03 Build 3334
- Fixed crash on exit
- Fixed LavishGUI gauge tessellation

1.03 Build 3331
- ISXDK v27 (old extensions must be updated)
- LSModule v14 (old LavishScript modules must be updated)
- LavishScript 1.81 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishGUI 0.66 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- Font support has been changed to use Windows fonts.  The font system now supports
  UTF-8.
- The default font has been changed from Terminal, which contains only ANSI characters,
  to Courier, which supports UTF-8 and is pretty
- The default uplink UI has been improved a bit.  We will be working on adding some new
  UI stuff to make things easier on newcomers as well
- Relay command should now be able to relay directly to remote uplinks, not just sessions
- Inner Space now handles crashes smoothly when initially loading an extension, and will
  give a relevant warning such as "perhaps this extension was not meant to be loaded in
  the uplink" or this game
- Fixed crash in XMLSetting command with -get

1.02 Build 3300
- Fixed some crash issues
- The crash reporting system now uses a new executable (the Lavish CrashMobile) to send
  the crash report if the "Report Error" button is clicked.  This will prevent the
  crashed application from hanging while attempting to send the crash report.  Additionally,
  hitting enter when typing in the crash window box will no longer automatically press the
  Send Report button :)
- Fixed typo in navigation system that caused paths to be incorrectly computed

1.02 Build 3285 
- LavishScript 1.80 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

1.02 Build 3284
- Crash report improvements
- Fixed some crash issues
- Fixed EverQuest issues introduced in build 3279.

1.02 Build 3279
- Improved loading speed in some games
- Fixed some crash issues

1.02 Build 3273
- Inner Space crashes should now be caught automatically, and allow the option of sending
  us a crash report.

1.02 Build 3210
- Fixed incompatibility (crash) with World of Warcraft Launcher

1.02 Build 3196
- Removed code that reloads setting files in other sessions when saving them while we fix
  a problem with that

1.02 Build 3195
- ISXDK v26 (old extensions must be updated)
- LavishGUI 0.65 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- LavishScript 1.78 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Inner Space now natively supports the use of alternative scripting engines.  The command 
  shell (console) is still LavishScript, and probably always will be, but this should not 
  be perceived as limiting your ability to automate.  Engines may be added and externally
  accessed (e.g. by other extensions that may want to add objects and functions to the
  engine) via the new "Script Engine" service.  ISXLua5 will provide an open source
  example for implementing script engines by adding a Lua 5.0 script engine.
  
  Script engines can add file extensions to be handled by the RunScript command (e.g.
  "run test" may run a file called test.lua), and the RunScript command also supports
  the *nix #! format, such as #!/usr/local/bin/perl or #!/usr/bin/env perl.  Scripts should
  be written (and the engines implemented) in such a way that, given the same extensions to 
  the language (additional objects, functions, modules, etc), the script would run on a *nix 
  system.
- Fixed issue that allowed launching multiple Inner Space Uplinks
- Fixed navigation point custom field problem with reading from XML
- Fixed incompatibility with Dark Age of Camelot
- Added games to default list:
  * Civilization 4

1.01 Build 3124
- Fixed navigation system issue

1.01 Build 3117
- Fixed "settingxml command" spam

1.01 Build 3106
- LavishGUI 0.64 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- Resolved versioning problem that lead to crashes with LavishScript modules
- The default console's default backbuffer size is now set to 1000.  It was 500 originally,
  but the BackBufferSize property was recently added in LavishGUI and without a default set,
  happened to set the size to a meager 100 lines.

1.01 Build 3105
- ISXDK v25
- LSModule v13
- LavishScript 1.77 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishGUI 0.63 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- UI elements that have width or height changes in the UI will automatically reset
  their stored size and position
- Setting file saves should correctly propagate to other sessions
- The default patcher window now shows the latest patch notes, using a new type of LavishGUI
  element that is still under construction (so it doesn't have scroll bars and other
  convenient features at the moment, but does work)
- There is now an option to download unstable patches, which is off by default.  This will 
  be used in the future to allow problems to be discovered by a wider range of testers
  before general use.
- When Inner Space restarts automatically for patching, it will now remove the defunct
  icon from the system tray

1.00 Build 3071
- LavishScript 1.75 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed internal "sessions" count in the uplink.  This means the "Patch Now" button will
  work correctly after you have closed your sessions, instead of thinking there are still
  sessions open.

1.00 Build 3066
- LavishScript 1.74 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

1.00 Build 3060
- LavishScript 1.73 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

1.00 Build 3055
- Improved general stealth capabilities

1.00 Build 3043
- LavishScript 1.72 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

1.00 Build 3035
- Fixed version number base error in extension loading.  It now shows the proper numbers.

1.00 Build 3034
- ISXDK v24
- LSModule v12
- LavishGUI 0.62 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- LavishScript 1.71 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Inner Space is quietly exiting from "beta" which it has sat comfortably in for a good
  10 months or so, for no particular reason.

Beta 0.999 Build 3000
- LavishGUI 0.61 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes

Beta 0.999 Build 2996
- LavishGUI 0.60 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- Fixed dataset:Clear
- Profiles are now sorted in the uplink's launch menus

Beta 0.999 Build 2991
- LavishScript 1.70 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Added data type methods:
  innerspace.LoadExtension[name]
- Optimized graphical drawing routines 

Beta 0.999 Build 2990
- Fixed bug with framerate limiter that was causing foreground framerate limiting to
  default to "constant" mode, which resulted in lower framerates than desired.  Foreground
  limiting is now forced to "calculate" mode when the Uplink is launched.

Beta 0.999 Build 2986
- Fixed texture crispness and single-pixel bleeding issue
- Added "Make Shortcut" button to profile editor in the default uplink UI, and fixed the
  issue that made the profile editor not show up right since build 2972

Beta 0.999 Build 2984
- Fixed potential framerate issue

Beta 0.999 Build 2972
- LavishScript 1.69 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishGUI 0.59 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- Fixed Add Game window
- Restored Game and Profile objects
- Restored Gamma command
- The uplink's Open and MakeShortcut commands are now updated, and require both a game name 
  AND profile name.
- The default configuration window (which is defined in DefaultUplinkUI.xml if anyone is
  curious) now has methods for adding, removing and renaming profiles, and removing games

Beta 0.999 Build 2962
- Fixed navworld:Export save location

Beta 0.999 Build 2961
- Global hotkeys functionality restored
- Failing to create the main uplink display no longer prevents Inner Space from patching

Beta 0.999 Build 2956
- Follow-up patch to 2952 to fix LavishScript crash issue when a script shuts down

Beta 0.999 Build 2952
- LavishScript 1.68 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- The new uplink window should no longer automatically pop up, unless there is a patch

Beta 0.999 Build 2942
- LavishScript 1.67 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishGUI 0.58 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- ISXDK v23
- LSModule v11
- Inner Space has been refactored.  Features previously only available in sessions are
  now available both in sessions and the uplink, via the new Inner Space Kernel.  A few
  features are KNOWN to be broken at this time, but we will be restoring functionality
  as soon as possible.  Please report any problems you experience immediately so we can 
  get you back on track.
- Games.XML and Profiles.XML are no longer used.  Instead, GameConfiguration.XML now
  stores all of that information.  The old files are not converted, so you will need to
  restore any of your changes to your startup sequences and game settings manually.
- Inner Space sessions now register and use "On Activate" and "On Deactivate" LavishScript
  events when the session becomes the foreground (active) window, and a background (inactive)
  window, respectively.
- Improved XML reading performance
- Added data types:
  innerspace
- Added data type members:
  int dataset.GUID
- Added data type methods:
  dataset:Sort
  dataset:Reload
- Added Top-Level Object forms:
  dataset SettingXML[GUID]
  innerspace InnerSpace
- Navigation paths generated from a point to the same point now consist of that point
- Extension versions are now checked BEFORE loading, which means no more "Entry not 
  found errors" when LavishGUI is updated, and also that the message that shows in the
  console will be more informative.

Beta 0.998 Build 2808
- LavishScript 1.66 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- LavishGUI 0.57 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- Alpha level implemented for GUI textures.  This also fixes a "disappearing textures"
  bug in some games such as EVE Online.
- Pixel Search functionality improved:
  * Search speed should no longer be a major problem, regardless search area size
  * Search can now use a "weight", which defines where to start searching from, and
    searching a radius outward.  The first matching pixel found closest to this point
    will be used.  The added search options are:
      -upperleft
      -upper
      -upperright
      -left
      -center
      -right
      -lowerleft
      -lower
      -lowerrtight
    When using -radius, -center is default.  When defining a search box, -upperleft
    is default.
  * Search boxes can be defined instead of using -radius by giving -height # and -width #
  * -radius is now effectively -center, -width (2*n), -height (2*n), and subtracts the
    X,Y position given by the radius.
- Built-in HTTP handling now follows header redirects (Location:)
- Uplink and sessions now have a new HTTPGet command which can retrieve a URL and output
  the result to file, to the console, or execute an atom with the result. 

Beta 0.998 Build 2793
- LavishScript 1.65 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.998 Build 2791
- Fixed issue with navigation point connections

Beta 0.998 Build 2785
- ISXDK v22
- LSModule v10
- LavishGUI 0.56 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- LavishScript 1.64 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Cedega's Win32 API emulation is crap (and incomplete), so I had to make another internal 
  change to work around that for a few Linux geeks
- Navigation system receives a minor overhaul.  Connection tags are now inside Point
  containers, though the ones outside will still work for compatibility reasons.  This
  results in smaller navigation files, and hopefully shorter load time as well.  Additionally,
  each point can store any number of named custom data, via a new "Custom" tag, also within
  Point containers.
- Added data type members and methods:
  * string navpoint.Custom[name]
  * navpoint:SetCustom[name,value]
  * navpoint:RemoveCustom[name]

Beta 0.997 Build 2763
- Fixed incompatibility with EVE Online introduced recently

Beta 0.997 Build 2757
- ISXDK v21
- LSModule v8
- LavishGUI 0.55 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- LavishScript 1.63 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.996 Build 2747
- LavishGUI 0.54 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes

Beta 0.996 Build 2746
- Fixed a rare crash issue with the Memory service

Beta 0.996 Build 2721
- Fixed a crash issue on session shutdown (for example, when a game patcher closes and
  launches the game, or when a game itself closes)

Beta 0.996 Build 2718
- Hopefully fixed issue with triggers causing intermittent crashes, introduced in a recent
  patch

Beta 0.996 Build 2715
- LavishScript 1.62 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed bug with some games when starting full screen, then switching to windowed, then
  back to full screen.
- Fixed bug that affected at least EverQuest 1 when switching servers

Beta 0.996 Build 2664
- ISXDK v20a - Extensions that provide UI elements MUST be updated
- LavishGUI 0.53 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes

Beta 0.996 Build 2660
- Fixed issue with main settings file in sessions

Beta 0.996 Build 2659
- Fixed main program crash issue
- Software Cursor support implemented for use in extensions for specific games that
  use software cursor, as opposed to the Windows cursor

Beta 0.996 Build 2655
- LavishGUI 0.52 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- User Interface related changes:
  * Fixed bug with saving minimized window position

Beta 0.996 Build 2650
- Fixed stability issues

Beta 0.996 Build 2639
- Fixed bug with RunScriptFromBuffer
- Fixed bug with dataset:Save
- Settings stuff now correctly uses Current Working Directory when creating new files

Beta 0.996 Build 2636
- LavishGUI 0.51 - http://www.lavishsoft.com/wiki/index.php/LavishGUI:Release_Notes
- Added data type members and methods:
  navigation:RemoveWorld[name]
  navigation:Export[filename]
  navworld:Export[filename]
  navpoint:Rename[newname]

Beta 0.996 Build 2623
- LavishScript 1.61 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Our XML parser now adds a &filename; XML entity containing the current XML filename
  including the path, as well as &filepath; containing only the path (excluding the
  trailing slash). This applies to ALL XML files used by Inner Space (settings, UI, 
  navigation, etc)

Beta 0.996 Build 2621
- Fixed crash issue with unloading/destroying UI elements

Beta 0.996 Build 2618
- User Interface changes:
  * Fixed bug with 'window' element stored positions

Beta 0.996 Build 2613
- LavishScript 1.60 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- ISXDK v20
- User Interface changes:
  * ISUI has been internally separated, similar to the way LavishScript was separated from
    Inner Space in Beta 0.72.  The GUI system as a whole is now LavishGUI, or LGUI for
    short.  ISUI describes LGUI + Inner Space-specific UI. 
    ************************************** 
    ** THE FOLLOWING CHANGE IS REQUIRED **
    - Extensions providing custom elements must rename all ISUI to LGUI (ISUIElement is now 
      LGUIElement, for example) or they will just not compile
    Note: User Interface XML files (fonts, user interfaces, skins, etc) do NOT need changes.
          They will work as-is, and so will existing scripts.  
    **   ONLY EXTENSIONS ARE AFFECTED   **
    **************************************
  * The "console" element type has been logically separated from the Inner Space console.
    In the near future we expect this to allow multiple independent consoles.
  * UI elements now have a "Full Name", used in a reverse form like domain names (e.g.
    in www.lavishsoft.com, com is the Top-Level Domain, lavishsoft is part of the com domain,
    and www is part of the lavishsoft domain).  However, we are using @ instead of dots.  The
    default console window's output element is therefore "output@console".
  * UI elements can now selectively have their positions stored upon destruction (to be used 
    when loaded next)
  * Window elements now have a useful context menu that can be accessed by right clicking their
    title bar.  They can be locked (size and location), restored to their original position,
    or closed from this menu
  * Added UI data type members:
    - string lguielement.FullName
- Session Pre-Startup and Startup sequences now squelch the automatic command-file execution.

Beta 0.995 Build 2577
- Improved handling of the 5 key on the number pad.  Most of the numeric keys on the pad
  are separately named depending on the state of number lock, but "Num 5" is generally
  called "Num 5" both ways according to keyboard drivers (the US English one anyway) as 
  well as humans.  The technically correct name for the key without number lock on is
  "Clear", which is now the name used by Inner Space to describe the key in that state.
  To reiterate, where 4 on the number pad is "Left" and "Num 4", 5 is "Clear" and "Num 5".

Beta 0.995 Build 2571
- LavishScript 1.55 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.995 Build 2570
- LavishScript 1.54 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.995 Build 2568
- ISXDK v19
- LavishScript 1.53 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed issue with removing items from startup sequences

Beta 0.994 Build 2556
- Fixed issue with modifying startup sequences

Beta 0.994 Build 2554
- Fixed incompatibilities with EVE Online, and probably other games as well
- Added games to default game detection list:
  * EVE Online

Beta 0.994 Build 2550
- Fixed incompatibilities with Asheron's Call, and probably other games as well
- Added games to default game detection list:
  * Asheron's Call - Throne of Destiny
  * Battlefield 2

Beta 0.994 Build 2543
- Added games to default game detection list:
  * ROSE Online
  * Flyff
- Fixed incompatibilities with Battlefield 2 and probably some other games as well
  (someone please try BF2 via Add Game and let me know if it works correctly; I'm currently 
   having unrelated problems with it on my system)

Beta 0.994 Build 2541
- LavishScript 1.52 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.994 Build 2540
- LavishScript 1.51 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.994 Build 2539
- LavishScript 1.50 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- FPS Limiter settings have been added to InnerSpace.xml, and the MaxFPS command now has a switch
  to disable FPS limiting (which is applied only to the foreground or background, depending on the
  command usage)
- extension.Filename now gives filepath datatype
- Fixed bug with hud -add failing with certain characters in the data
- Uplink networking now uses the Windows "Computer Name" as the default name, instead of
  "CHANGE THIS".  Any currently set to "CHANGE THIS" will be updated for this change :)
- The Games and Profiles window is now the Configuration window.  All settings in InnerSpace.XML
  are now available in the configuration window, including startup sequences.
- Games and Profiles now use the new startup sequence system, also available in the configuration
  window
- User Interface Changes:
  * ISUI Version 5. All extensions providing user interface elements need to be compiled with the
    new ISXDK. All others are unaffected.
  * New element types: contextmenu
  * Elements using OnMouseExit and OnKeyboardExit must be updated for the new function prototypes,
    or certain features wont work correctly... but will still work. 
    (this includes the existing Radar elements!)
  * Fixed issue with text sometimes displaying well beyond its intended clipped length (this does
    not affect text that was not intended to be clipped)

Beta 0.993 Build 2519
- Fixed other startup crash in InnerSpace.exe

Beta 0.993 Build 2517
- Fixed startup crash in InnerSpace.exe due to custom settings

Beta 0.993 Build 2516
- Minor LavishScript changes that nobody will notice because it was for features that arent
  documented yet.

Beta 0.993 Build 2515
** We apologize for the many recent changes and additions to the startup sequence, the ISXDK, etc.  
   We are coming to a close on the Beta stage, and preparing these and other things for the official 
   release.  As such, things will stabilize very quickly into their final form.  In the meantime,
   sorry for the inconvenience as things seem to not work and such simply because of changes to this 
   system.
- LavishScript 1.47 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Removed hud -fontsize switch
- The default UI files (fonts, skin, UI) are now loaded directly in the startup sequence, rather
  than the default startup script.  The startup sequence is automatically updated to reflect this.
- Uplink startup sequence now works
- The startup sequences now work by generating a script in memory and executing the script.
  This allows items in the sequence to easily wait for previous scripts to complete by using the
  new WaitScript command (available only to scripts) instead of RunScript, for example.  The default
  sequences are automatically updated to use this.
- The memory indicator and FPS indicator hud elements in the Default UI now default to non-visible 
  in the UI definition.  This means that simply removing the "hudgroup -show" lines will stop them
  from showing up.
- The "console" bind is now set in the startup sequence itself
- User Interface Changes:
  * Removed "hud" element type, which was redundant.  There is technically no special "HUD"
    in Inner Space, except that the hud-related commands and data types use whatever element
    is named "main hud".  The default interface now uses a transparent "frame" element as the
    main hud.
  * Fixed bug with some text showing up in the wrong places

Beta 0.992 Build 2505
- LavishScript 1.46 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- User Interface Changes:
  * The ability to draw textured lines is now implemented.  This makes way for upcoming additions 
    to elements including the navigational window

Beta 0.992 Build 2502
- Fixed mouse:SetPosition

Beta 0.992 Build 2499
- Fixed issue with session switching in some games (including EverQuest II)
- Fixed keyboard:Bind

Beta 0.992 Build 2482
- ISXDK v17
- LavishScript 1.45 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- InnerSpace.XML now contains Startup sequence sets for Uplink and Sessions. The default
  sequences now use "DefaultStartup" and "DefaultPreStartup" rather than AutoExec and PreInit.
  These default scripts are patched.  To make changes, use a separate file and change your
  startup sequence.
- PreInit.iss, AutoExec.iss and PiP.iss are no longer created by default when IS launches.
  There will be no default replacement for PiP.iss at this time; instead, it will be rewritten
  in a better way, and distributed on ISMods

Beta 0.991 Build 2453
- User Interface changes:
  * Fixed issue with right-aligned text
  * Fixed issue with resizing window from the right or bottom too far left or upward

Beta 0.991 Build 2451
- User Interface changes:
  * Fixed issue with bordered textures that didnt supply a rectangle

Beta 0.991 Build 2449
- User Interface changes:
  * Minification and magnification filters are once again applied to textures, which
    improves scaled font appearance.  This functionality may be modified in the future
    for selective filtering.
- Improved Win32 mouse clipping handling 
- Improved Force Window behavior

Beta 0.991 Build 2432
- Fixed minor issue with Warcraft III detection

Beta 0.991 Build 2430
- Improved XMLSetting command behavior.  It's a little more friendly now.
- Fixed dataset.GetFloat, which was returning int type instead of float

Beta 0.991 Build 2429
- LavishScript 1.44 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed crash issue with badly formed setting XML files
- Fixed a sometimes convenient bug with absolute file paths working as relative paths
- User Interface changes:
  * Fixed issue with simultaneously pressing multiple mouse buttons

Beta 0.991 Build 2425
- Fixed issue with dataset.GetString, dataset.GetInt, dataset.GetFloat when used with
  defaults
- Added workaround for Cedega alpha blending issue which prevented all textures from
  displaying correctly

Beta 0.991 Build 2421
- Fixed crash issue with backwards compatibility from build 2417 *sigh*
- Fixed Extension -require
- Fixed message boxes

Beta 0.991 Build 2417
- Restored some further backwards compatibility in deprecated functions for Amadeus ;)
- Fixed navigation system XML reader

Beta 0.991 Build 2412
- Fixed issue with dataset:Save

Beta 0.991 Build 2410
- Fixed settings issue for real this time I swear
- Fixed issue with center and right font alignments not displaying anything (e.g. on buttons)

Beta 0.991 Build 2408
- Fixed settings issue introduced in build 2406
- Fixed game and profile loss issue introduced in 2406

Beta 0.991 Build 2406
- LavishScript 1.43 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- ISXDK v16
- Fixed Picture-in-Picture resolution issue in PreInit.iss
- Navigation XML parsing, previously more of a dumb HTML parsing, is now upgraded to using
  LavishXML, the same system ISUI uses... which is much better
- The settings system has been also been updated to using LavishXML.  Comments will be
  preserved as long as they are within the XML tree (e.g. must be somewhere inside the
  "InnerSpaceSettings" element or any of its children).  Anything outside of it will be
  ignored, and removed if the file is re-generated.  Sets can now have subsets.  Names
  of settings and subsets must be unique within a set (a setting may not have the same
  name as another setting or subset within the same set, for example).  The outermost
  tag (InnerSpaceSettings) is also considered a set, and can have its own settings.  Any
  set can be exported to a new XML file, and any XML file can be imported to an existing
  or new set.  The system is backwards compatible, except for some conversion done
  internally.  You will notice the lack of ID numbers in newly generated setting XML files,
  other than specific internally-used files such as Games.XML and Profiles.XML.
- Extension command now has a -require switch, which works like the LSModule LavishScript
  command.  If the extension could not be loaded, the current script ends with an error.
- Removed "settingxml" data type.  It has been merged with the "dataset" data type.
- Improved game detection system. Now, game detection is completely done through XML.  The
  file used by default for detection is GameDetection.XML.  Custom files can be set in
  InnerSpace.XML in the "Game Detection" set (use any name, they will be used in the order
  listed) -- you may remove the default from the list.  
- User Interface changes:
  * ISUI Version 4
  * ISUI textures will no longer use min/mag filters.  This removes some unnecessary
    distortion as well as some previously necessary distortion (see next item)
  * Support for custom fonts has been added.  The default font is still Terminal, but has 
    been slightly modified because of the above change, and is defined in the default fonts
    XML file rather than hard-coded.  For another example, the Bradley Hand ITC font, which 
    is variable width, has been added.  Note that some element types (currently just console)
    require fixed width fonts, and will not use variable width fonts no matter how hard you
    try :)  As a result of this change, any UIs or skins with custom font size or color need
    to be updated.  Elements types that are not built in, such as any radar elements, are not 
    immediately affected.  Such elements should be updated by their authors to conform to
    the new system.
  * Window elements revamped. Window is now based on frame, has a TitleBar frame (which
    may contain special minimize, maximize, close, title children), and a Client frame
    (where the useful part of the window stuff goes).  This makes window elements much more 
    customizable.  The draggable area of windows for moving includes any non-child area,
    any empty portion of the title bar, and over the title portion of the title bar.  Double
    clicking on the title bar now toggles the minimize state of the window.  As a result of
    this change, some UIs or skins need to be updated.
  * Base element now allows for more types of element positioning.  In addition to the
    existing "Fixed" and "Percentage" methods, now accepts "Reverse Fixed".  To use this,
    put an "r" before the number, such as: <X>r17</X> which is effectively 17 from the
    right instead of 17 from the left (same goes for from the bottom instead of the top).
  * Increased accuracy of Percentage positioning methods
  * The console window is now resizable height-wise thanks to the element positioning changes
  * Moving the mouse over a tooltip element will now hide it (this fixes issues with tooltips
    sometimes getting stuck visible)
  * Fixed issue with elements that supported single click, but not double click
  * Added element types: table

Beta 0.99 Build 2340
- User Interface changes:
  * Fixed crash issue with listbox element type
  * Fixed listbox slider positioning issue

Beta 0.99 Build 2333
- LavishScript 1.42 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.99 Build 2332
- LavishScript 1.41 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed issue with patch notes
- Added data type members:
  * bool navpoint.ConnectsFrom[name]
  * int navpoint.Outgoing
  * int navpoint.Incoming
  * navpoint navpoint.Outgoing[n]
  * navpoint navpoint.Incoming[n]
- Fixed a false negative from navworld:Set
- Added generic stealth routines

Beta 0.99 Build 2311
- Un-fixed EverQuest II bug, and fixed features that were inadvertently removed in today's patch
  (this includes global activation keys, screen resizing features, and a few other things)

Beta 0.99 Build 2306
- Fixed bug with EverQuest II where if the session started in full screen, then was switched to
  windowed, then to full screen again, it would appear to lock up
- Patch notes should now be displayed before (or at the same time as) the message box that asks 
  if you want to patch Inner Space this session

Beta 0.99 Build 2284
- User Interface changes:
  * Fixed issue with default gauge templates causing gauges to always look empty

Beta 0.99 Build 2282
- Fixed error messages in the patch system that should have been automatically handled, such as
  the -17 error when patching two computers at the same time
- Fixed buffer overrun in InnerSpace.exe after launching games several times
- User Interface changes:
  * Added double-click functionality

Beta 0.99 Build 2273
- Fixed saving of "always update" setting
- User Interface changes:
  * Fixed the new RRGGBB color functionality

Beta 0.99 Build 2272
- Fixed issue with default scripts not being created initially
- User Interface changes:
  * Elements that draw colored text (tooltips, console) now accept RGB color codes like so:
    \a#RRGGBB.  RRGGBB works the same as web (HTML) colors.  For example \a#FF0000 is full red

Beta 0.99 Build 2271
- LavishScript 1.38 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Inner Space will no longer automatically update itself without your permission.  Instead, a message
  box will pop up and allow you to always patch (yes), patch this time (no), or skip patching this time
  (cancel), but explained in a different way.  This will allow you to temporarily continue using an
  old version of Inner Space until extensions you need are updated.
- ISXDK v15
- User Interface changes:
  * Added "tooltip" element type
  * Added AutoTooltip property to the base element type
  * Fixed "Always On Top"
  * Fixed BorderColor in some elements when textures are not used
  * Fixed templating slider element textures
  * Fixed position and size factored children inside static-sized elements
  * Fixed check boxes with a height less than 16 
  * Fixed horizontal slider handle
- PreInit.iss, AutoExec.iss and PIP.iss will no longer be overwritten by new versions of them.
  Instead, new versions will be output to PreInit.iss.sample, AutoExec.iss.sample and PIP.iss.sample,
  and a message box will simply state that the sample has been updated.

Beta 0.98 Build 2248
- LavishScript 1.37 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- "Process Frame" service has been merged with the "Pulse" service
- Added recording and playback for keyboard and mouse movements, through a new "Macro"
  command.  This is still in development, but you can test it and report issues
- Various other things that will get more mention later, after we finish them

Beta 0.98 Build 2225
- LavishScript 1.36 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- ISXDK v14
- Added Data Types:
  * isuielement
  * isuibutton
  * isuicheckbox
  (rest of built-in UI element types to follow soon)
- Added Top-Level Objects:
  * isuielement UIElement[name]
  * isuielement UIElement[#]
- Fixed "DisplayInfo" crash in Direct3D8 games
- Added -stealth switch to WindowPos command

Beta 0.97 Build 2202
- Fixed issue with per-script squelching which squelched stuff it wasnt intended to
  squelch (echo, some error messages, etc)
- Fixed issue with launching some games, including those using Steam
- User Interface Changes:
  * Text now really correctly shows special characters over 127 in the ASCII chart 
    (which was supposed to correctly show in Build 2162)

Beta 0.97 Build 2175
- Fixed issue with ISUI elements allowing mouse button presses to pass through and
  then preventing release

Beta 0.97 Build 2168
- Fixed crash on game exit
- ISXDK v13c.  Solves extensions having problems re-loading after being unloaded.

Beta 0.97 Build 2165
- ISXDK v13b.  Any extensions providing ISUI element types are required to be compiled
  with the new ISXDK version (others will simply fail to load, with Windows possibly 
  popping up a message box about not being able to find something)

Beta 0.97 Build 2164
- LavishScript 1.35 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.97 Build 2162
- LavishScript 1.34 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- User Interface Changes:
  * Transparent windows (windows with no texture, and backgroundcolor set to 0) will now
    allow clicks to pass through
  * Text now correctly shows special characters over 127 in the ASCII chart
  * When a UI Element Factory is destructed, it will now remove all UI Elements of its
    assigned type, relieving extensions of this burden (if they were compiled with
    ISXDK 13a)

Beta 0.97 Build 2158
- LavishScript 1.32 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes

Beta 0.97 Build 2157
- Echo is no longer squelched by per-script squelching
- When using triggers, variable portions named * will be ignored and not passed along

Beta 0.97 Build 2156
- LavishScript 1.31 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Removed the minimizing workaround intended to prevent the problem where scripts stop
  when some games are minimized due to not drawing
- User Interface changes:
  * Fixed crash issue with window elements using a minimize button, but no close button

Beta 0.97 Build 2150
- Added -clear switch to bind and globalbind commands
- Minor LavishScript fix that nobody but Blazer will notice

Beta 0.97 Build 2148
- Fixed issue with minimizing session windows

Beta 0.97 Build 2147
- LavishScript 1.30 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- ISXDK v13
- HUDAdd and HUDRemove aliases have been removed.  Use HUD -add and HUD -remove, or create
  the aliases manually
- Fixed HUD -list
- Hopefully fixed issue with alt+tabbing (and such) from a true full screen game causing 
  the game to not respond
- Fixed uplink networking for good
- Fixed texture transparency
- Video capture functionality now allows you to encode the video later, instead of immediately
  after capture.  Encoding is a CPU intensive process and would previously force you to lag
  immensely until the process completed.  To disable immediate encoding, edit InnerSpace.XML
  and change the "Encode Immediately" setting from 1 to 0.  Videos are now temporarily stored 
  in the "Video Cache" folder, each with a unique number.  If set to encode later, manually 
  encode each video with the "Encode" command in the Inner Space Uplink, like "encode 1" to 
  encode the video stored as number 1.  The files will automatically be removed when the 
  video is encoded.
- User Interface changes:
  * Added "Always On Top" toggle to the ISUI base element type
  * "window" elements will now move themselves to the top of their parent's Z-order (e.g. no 
    longer behind other elements).  If the window element is not "always on top" it will remain
    behind any "always on top" elements.

Beta 0.96 Build 2128
- LavishScript 1.29 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed issue with uplink networking with pre-existing sessions
- MessageBox and InputBox commands now accept an optional -template switch to set the
  appearance of the window
- Clicking minimize on a game window now simply hides the window, instead of truly minimizing.
  Many games will not render when minimized, which prevents Inner Space from performing
  per-frame operations until the game window is restored.  This change allows natural user
  behavior while preserving the effectiveness of Inner Space
- The script input box now sets the keyboard focus upon popup.  Hitting enter in the input
  box now effectively hits OK for you as well.
- User Interface changes:
  * Added element types:
    combobox
  * textentry elements created with default text no longer crash on backspace
  * Elements with automatic scrollbars (listbox, combobox, console) now use templates for
    those scrollbars

Beta 0.96 Build 2112 (Attention all planets of the solar federation)
- Fixed issue with PreInit.iss and AutoExec.iss beginning execution on the following frame,
  rather than immediately.  This fixes issues with file redirection and such, in cases where
  the redirection was necessary immediately

Beta 0.96 Build 2110
- Squelch no longer parses data sequences
- Fixed issue with uplink networking not responding
- Relay "all" now relays to all sessions including remote sessions.  A new "all local" parameter
  for Relay will relay only to local sessions

Beta 0.96 Build 2106
- Fixed "Background Mouse" switch so that it works correctly when set to OFF.

Beta 0.96 Build 2103
- Added "Background Mouse" switch in "Input Systems" for game settings.  This option "Allows the
  game to receive manual mouse position changes in the background.  Disabling this will improve 
  mouse emulation in some games when the game is in the background".  The option is enabled by
  default.
- The "Lock Foreground" option now defaults to ON for EverQuest II in new Inner Space installations
- Fixed issue with static lines in text boxes not wrapping
- Fixed issue with texture color mask and color key not being applied from templates

Beta 0.96 Build 2102
- Fixed crash involving messageboxes given a background texture
- Fixed issue with long lines in command entry boxes causing the caret to remain past the end of
  the typing position

Beta 0.96 Build 2100
- Minor LavishScript fix, for int.LeadingZeroes

Beta 0.96 build 2099
- Corrected mouse issues with video lag, secondary monitor, etc.
- User Interface changes:
  * Templates can now be templated

Beta 0.96 build 2097
- Temporary improvement on a reported mouse problem on secondary display when using mouselook in
  certain games (should be fully fixed tomorrow)

Beta 0.96 Build 2096
- Fixed issue with recent addition to the ISXDK

Beta 0.96 Build 2093
- Fixed mouse emulation issues in EverQuest II (and possibly other games)

Beta 0.96 Build 2091
- Fixed issue with multiple sessions being allowed to have the same name, and modified 
  AutoExec.iss accordingly
- Fixed WaitFor (apparently nobody tried to use it yet)
- Console text now goes through the trigger (and WaitFor) parser
- Added -rescale switch to WindowSize and WindowScale.  When this switch is given (must be before
  other switches), the window will resize without allowing DirectX to reset the display resolution
  to the new size of the window
- Added games to the default list:
  Grand Theft Auto: San Andreas
- User Interface changes:
  * Windows with a background color of 00000000 and no texture will be effectively transparent,
    but mouse clicks will not fall through.
  * Fixed click area of minimized windows
  * Added element types:
    frame
    tabcontrol


Beta 0.95 Build 2079
- Fixed navpoint.Note and navpoint:SetNote

Beta 0.95 Build 2078
- Fixed issue with not being able to run scripts from subdirectories

Beta 0.95 Build 2077
- LavishScript 1.26 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Win32 mouse click emulation now uses the same delay before releasing the button that the
  key press emulation uses
- Win32 mouse position emulation now ignores manual mouse movement when the window is not
  foreground
- Added PlanetSide to games supported by default
- Fixed the console caret (aka "cursor") that disappeared

Beta 0.95 Build 2076
- Added data type members:
  int navworld.LastID

Beta 0.95 Build 2075
- LavishScript 1.25 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Uplink networking is now available.  This allows others to connect their uplink to yours,
  allowing them access to relay commands to you, and you to them.  Obviously, this requires
  a level of trust with the other party, and most people will not want to network to anyone
  but their own computers.  With that in mind, this feature is disabled by default and must
  be enabled by changing settings in InnerSpace.XML:
	<Set ID="3" Name="Remote">
		<Setting Name="enable incoming">0</Setting>
		<Setting Name="incoming port">10101</Setting>
		<Setting Name="name">CHANGE THIS</Setting>
	</Set>
  To use the feature at all, change the name from CHANGE THIS to something unique.  You
  cannot connect to an uplink with the same name.  To enable incoming connections, change
  "enable incoming" to 1.
- Added RemoteUplink command
- Fixed crash issue with script text input boxes (using the InputBox command)
- User Interface changes:
  * Added "Templates", used for changing the default appearance of elements and textures.
    See the ISUI documentation for complete information
  * All element types now accept a "Template" attribute.  If no template attribute is
    given, or the template named in the attribute does not exist, the template that has
    the same name as the element type is used
  * Textures now accept a "Template" attribute, and the ColorMask property may be given
    as an attribute to use a color on a templated texture
  * Removed all DefaultTextures tags.  Elements with textures are now textured according
    to their template.  To disable textures in a templated element, use an empty tag to
    remove it.  For example <Texture /> or <TexturePressed />
  * Added element types:
      listbox
  
Beta 0.94 Build 2052
- LavishScript 1.24 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Fixed InnerSpace.exe crash on exit
- User Interface changes:
  * Added scroll bars (no XML for these)
  * DefaultTextures tags now accept a ColorMask attribute, used like so:
    <DefaultTextures ColorMask="FF00FF00" />
    The color will be applied to each of the default textures used in the given element.
  * Fixed colors in EverQuest II
  
Beta 0.94 Build 2045
- Fixed navpath.PointName and navpath.NearestPoint
- Fixed redirect not parsing
- Fixed navpath variables

Beta 0.94 Build 2042
- User Interface changes:
  * Added Orientation attribute to textures.  Can be 0, 1, 2 or 3.  The texture is rotated
    90 degrees clockwise for each # (e.g. 270 degrees for 3)
  * Added new element types:
    slider
    variableslider
    gauge
    variablegauge

Beta 0.94 Build 2037
- Added mousewheel support to ISUI.  The console output window will now scroll with the wheel.

Beta 0.94 Build 2034
- navpath:GetPath now allows any number of additional parameters to concatenate paths together,
  just like the NavPath command
- navpath data type now allows variables to be created
- Added data type members:
  int navpath.NearestPoint[x]
  int navpath.NearestPoint[x,y]
  int navpath.NearestPoint[x,y,z]
- Commands for resizing or moving the game window can no longer be used while the game is in
  real full screen mode
- Added commands:
  (script only) InputBox <displayed text> [default]
  MessageBox [-ok|-okcancel|-yesno] <text>
- Added Top-Level Objects:
  string UserInput: Used in scripts with the above commands to indicate the result.  For Message 
                    Boxes, possible values are OK, Cancel, Yes, and No (NULL if the script ends
                    or message box is killed before answering).  For Input Boxes, the value is
                    the text entered in the box (NULL if the cancel button is pressed, the script
                    ends, or the input box is killed before answering).

Beta 0.94 Build 2018
- LavishScript 1.22 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- User Interface changes:
  * Added "text" element type (allows aligned, colored text, with line wrapping optional)
  * Texture ColorMask attribute now works (blends a color into the texture, can be used to make
    colored buttons with the default textures, etc)

Beta 0.94 Build 2017
- Fixed ISUI issue with keys "sticking" (only in the UI) after changing sessions
- User Interface changes:
  * Made window resizing a little more friendly.  To resize a resizable window, drag the border.
    Previously, it was set to the nearest 3 pixels to the border, and was not obvious if you
    were close enough.  Resizable windows have a minimum border size of 3 as well.
  * Windows will now dock to their parent element's edges when moving them.  To prevent this,
    hold SHIFT while dragging the window.

Beta 0.94 Build 2013
- LavishScript 1.21 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Inner Space now includes a build number in addition to the version number
- The UI command now has -reload and -unload switches for reloading and unloading specific
  interface files
- NavPath command now accepts additional parameters to add consecutive paths together
- User Interface changes:
  * Textures are now supported
  * Added some new element types (still working on finishing up the basics)
  * Windows can be resizable

Beta 0.94
- LavishScript 1.20 - http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- The Inner Space in-game User Interface (ISUI for short) is now getting started.  ISUI
  is a complete user interface system, with mouse and keyboard control.  
  
  The in-game console is now completely done through ISUI.  It is a full window, with the
  option of a title bar (including minimize and close boxes) and can be dragged around.  The 
  output display allows you to select a rectangle of text to be copied to the Windows clipboard 
  (i.e. for pasting).  Text selection will also be added to the input box in the near future.
    
  The Heads-up Display (HUD) is also done through the ISUI.  Elements can be defined in XML, or
  through the existing commands.  Multiple HUDs can exist, but only the one named "main hud"
  can be accessed via the HUD and HUDSet commands.  As each ISUI element can be hidden, this
  means you can hide an entire HUD or any HUD elements and show them later, rather than removing
  them and re-creating them.  Each HUD element can be moved by holding Alt and dragging with
  the mouse -- though you must drag the leftmost part of the element to do so (without holding
  Alt, or by clicking on another part will simply click through).
  
  ISUI is an XML-based system.  Each type of UI element is defined in Inner Space itself or in
  an extension (not CURRENTLY available in extensions, but this will be coming as we complete
  portions of the system).  XML files are used to create windows and define how each should
  look.  Textured elements (e.g. with a picture instead of a solid rectangle) will be possible
  as well.

  * Notes: DirectInput games require you to release the mouse in order for the mouse to interact 
    with the ISUI.  This is obviously not preferable, but how it will be for now.  The mouse will
    also only be able to interact with the UI when the cursor is visible -- this means that if
    your mouse cursor is hidden while playing a first-person shooter, for example, the UI will not
    randomly interfere.
- ISUI Text entry boxes (e.g. the command entry box in the console window) should now support 
  non-US keyboards.  Subsequently, special characters can now be typed in the console on US
  keyboards by holding control and pressing keys.
- The default console bind is no longer hardcoded.  The bind is now found in PreInit.iss.  Some
  will notice their console no longer works (see next item)
- You should delete PreInit.iss, PiP.iss, and AutoExec.iss (found in the Scripts folder) so that 
  they may be refreshed to be compatible with LavishScript 1.20 (well, it's still "compatible" for
  now, but wont be next release).  If you made custom changes to these, you may want to back 
  them up first.
- Fixed a bug preventing Eve Online from loading (Let us know if it works in-game)
- Added -inc, -dec, and -set # to Gamma command.  Valid values for use in -set are 0 to 128.
  -inc and -dec step at the same rate as 1 value in -set (which is actually 1/256th of the
  possible gamma, but -set only allows the middle range so you can actually see)
- Added commands:
  UI -reset|-load <filename>
  UIElement -list|-hide <name>|-show <name>|-toggle <name>|-kill <name>
  HUDGroup -hide <name>|-show <name>|-toggle <name>
- The hudelement data type and its accessors (Display.HUDElement) are removed for now while we
  rearrange things for the UI system (sorry).  The HUD and HUDSet commands work.
- Fixed Squelch command - previously forced command parameters to be re-parsed, losing any quoting
- Fixed navpoint.ConnectsTo[name]
- Added data type members:
  * int dataset.Keys
  * string dataset.Key[#]
  * string navpoint.Note
- Added data type methods:
  * dataset:Clear
  * navworld:Set[point name,x]
  * navworld:Set[point name,x,y]
  * navworld:Set[point name,x,y,z]
  * navpoint:SetNote[note]
- Added data types:
  * settingxml
- Removed XMLSetting Top-Level Object.  XMLSetting command still exists.
- Added Top-Level Objects:
  * settingxml SettingXML[name]
  
Beta 0.93
- ISXDK v11
- Fixed internal "echo" broadcasts from the uplink, which were saying invalid command but were
  supposed to have relevant information :)
- Fixed Log command (console log) default output path

Beta 0.92
- LavishScript 1.18 - LavishScript release notes are found at:
  http://www.lavishsoft.com/wiki/index.php/LavishScript:Release_Notes
- Emulated keystrokes no longer get sent to the console when it is open (they go to the game)
- Fixed DirectInput emulated keystrokes
- Uplink console no longer auto-completes when the box is empty (alt-tabbing to the console is
  no longer an annoyance)
- Pasting in the in-game console now works via Shift+Insert
- Changed "Win32I Delay" option to "Keystroke Delay", and applied it to DirectInput as well
- Added session command "MouseCursor" which can be used to take care of that pesky "double cursor"
  problem in some games that use DirectInput
- Added Games:
  * Cold Fear
  * Delta Force Xtreme
  * Halo
  * Kal Online
  * Need for Speed Underground 2
  * Prince of Persia - The Sands of Time
  * Psychonauts
  * Star Wars Battlefront
  * Star Wars Republic Commando
  * Thief - Deady Shadows

Beta 0.91
- LavishScript 1.16 - Calculation fix, variable casting fix
- Fixed issue with completely white textures in some games' intro graphics in D3D8 and D3D9
- Added Games:
  * Broken Sword - The Sleeping Dragon
  * Far Cry
  * Playboy - The Mansion
- Added data type members:
  navworld.Points
  display.FPS
  display.HUDElement
  keyboard.Bind
- Added data type methods:
  display:AddHUDElement
  keyboard:Bind
  hudelement:SetSize
- Removed Top-Level Objects:
  HUDElement (now use ${Display.HUDElement[x]})
  FPS (now use ${Display.FPS})
  Bind (now use ${Keyboard.Bind[x]})
- Added Top-Level Objects to the Uplink:
  * XMLSetting
  * Console
- Added Data Types to the Uplink:
  * console
- Added Commands to the Uplink:
  * XMLSetting

Beta 0.90
- Improved overall compatibility.  Please note that if you are upgrading from previous versions of
  Inner Space, Half-Life 2 games will not work unless you change the "modules" setting in 
  Half-Life 2->General to "auto" in the Games and Profiles window (this may also be the case for
  other games).  You can also just delete Games.XML in the Inner Space folder, and restart Inner Space.
- Fixed several minor bugs found while testing under Cedega (the Win32 gaming emulator for Linux), and 
  worked around a few Cedega bugs.  Still has some issues, but was able to successfully play World of Warcraft
- Fixed a glaring issue in our Direct3D8 handler (well... blinking really, but it was bad...)
- Added Games:
  * Axis & Allies (note: Auto-detection of the path is not currently enabled for this game)
  * Brothers in Arms 
  * Grand Theft Auto Vice City
  * Guild Wars
  * Neverwinter Nights
  * Tribes Vengeance

Beta 0.89
- Improved compatibility with Win32 emulators.  Inner Space *should* now work under Cedega

Beta 0.88
- LavishScript 1.15 - Fixes minor issues including running the same script twice by adding the extension
- Fixed Uplink pulsing, which prevented scripts from working in the uplink
- Added command-line handling.  If any parameters are passed to InnerSpace.exe, they are treated as one command
- Added Uplink command "MakeShortcut", used to make a desktop shortcut to a given profile.  Syntax is as follows:
    MakeShortcut <profile>
  Example:
    MakeShortcut "World of Warcraft Default Profile"
  This can be done a little easier from within a session.  Open a session using the profile you want to make a 
  shortcut for, then open the session console and type:
    Uplink MakeShortcut "${Profile}"
- Fixed bug in Direct3D9 handling which caused problems in some games
- Fixed bug in DirectInput handling which caused problems in some games
- Added Games:
  * Star Wars: Knights of the Old Republic II
  * Star Wars Galaxies (Known issue: Some of the startup graphics appear white, everything fine after that)
  * SWAT 4

Beta 0.87
- Removed NavPoint TLO
- Added Navigation TLO and navigation data type. 
  ${NavPoint[world,point name]} is now ${Navigation.World[name].Point[name]}
  This may be longer but is better for organization, and allows me to add other important things without
  adding entire new Top-Level Objects.  For example, navworld.NearestPoint.  NavPath is unchanged.

Beta 0.86
- Added WaitFor TLO, which was meant to be in 0.84.  It gives an int, indicating the number of the argument
  passed to the WaitFor command that was found first (or 0 to indicate timeout)
- I didn't mean to make ISXDK v10a require you to recompile plugins.  Reverted the internal version number
  so you don't have to.  Beta 0.86 requires ISXDK v10 or v10b.

Beta 0.85
- Changed MouseClick command syntax to be in line with other commands such as Press.
  Syntax: MouseClick [-hold|-release] <left|right>
- HUD command no longer immediately parses data

Beta 0.84
- Fixed ISXDK version error message that was saying v16 -- that's hexadecimal for 10.
- Reduced default console and HUD font size to 12
- HUDAdd, HUDList and HUDRemove have been squeezed into the new "HUD" command, which also lets you set
  the default HUD font size (HUD -fontsize 12) for new elements.  HUDAdd and HUDRemove are aliased to
  the new form, so existing macros and such will still work.
- HUDSet command now allows using "*" as the element name when setting font size or color to change all
  existing elements (will not work for other settings)
- Added "Files" service, which allows selection specific files to track as they are opened (for each
  tracked file, the service broadcasts any reads or writes, as well as the closing of the file)
- Added WaitFor command for scripts, for use with triggers and such
- Fixed bug when console bind involved multiple keys
- Fixed bug with keys sticking in certain situations
- Fixed console -lines

Beta 0.83
- LavishScript 1.14 - Fixes issue with navpath type
- Added Games to the default list:
  * America's Army
  * Grand Theft Auto III
  * Quake III Arena
  * Star Wars Jedi Knight II: Jedi Outcast
- Fixed emulation of some keys in Win32I
- Added "Win32I Delay" option, which is on by default, and is almost always safe to leave on.  This option 
  is used for Win32 keyboard input emulation, and creates a delay between emulated keys being pressed and 
  released.  This solves issues with "press alt+1" and such not working correctly in some games.
- Fixed issue with global binds not being removed from Windows until the session closed
- Global binds no longer need to be manually removed before replacing one with the same name
- Added "RestoreGamma" command to uplink, which restores gamma to its original level (when the uplink was
  started)
- Added "Gamma" command to sessions, which can store, restore, reset, or display the gamma ramp.  It cannot
  currently be used to pick a gamma level (e.g. "higher" or "lower" settings), just store, restore, and reset.
- Fixed framerate issue and overlay display issue with multi-pass effects in Direct3D
- Our overlay font system has received a major overhaul
- Console now supports colors.  Colors are created by \a<code>, where code is one of the following:
    y - yellow  (-y for dark)
    o - orange (-o for dark)
    g - green (-g for dark)
    u - blue (-u for dark)
    r - red (-r for dark)
    t - teal (-t for dark)
    b - black (clear, anyway.. you wont see it.)
    m - magenta (-m for dark)
    p - purple (-p for dark)
    w - white (-w for dark)
    x - previous color
  Each color is demonstrated in this image: http://www.lavishsoft.com/images/console_colors.gif
  Note: It is a known issue that at this time, console colors do not work in EverQuest II
- Added font size to HUD elements, can be set through hudset -s
- Added font size to console, can be set through console -fontsize
- ConsoleVisibleLines has been removed, the new command is console -lines
- Added column rendering to several list commands
- Potentially fixed issue with GlobalBind and the keypad (and other keys)

Beta 0.82
- LavishScript 1.13 - various scripting bugs fixed
- Merged "HooksI" with "Win32I" input system.  Any games previously set to use HooksI should automatically
  switch to Win32I.  This also fixes input bugs in EverQuest II.
- Fixed bug which prevented support in Unreal Engine-based games
- Fixed bug which prevented support in Doom 3 and probably some other games
- Added Games to the default list:
  * Doom 3
  * Lineage II (cannot auto-detect path, you may need to fix the profile for your game folder)
  * Unreal Tournament 2004
- OpenGL games should now work with the "Add Games" option

Beta 0.81
- LavishScript 1.11 - Modules system, includes Modules command
- Added new Event system (including Events command and Events service).  The way this works is there's a
  list of named "events" -- which have a name, and a LavishScript command to execute.  For example,
  "On Activate" now replaces the old "OnActivate" profile setting, and is executed when the game window 
  becomes the foreground window (activated).  By default, the event does nothing, but the Events command
  can be used to set the command to run.  For example, to enable Picture-in-Picture, execute the following:
    Events -set "On Activate" run pip
- Removed OnActivate and OnDeactivate from Profile options, these now use the new Event system and are
  "On Activate" and "On Deactivate", respectively
- Removed Console Visible Lines and Console Scrollback Size from Profile options
- OpenGL support added -- note that Force Window does not currently work for OpenGL
- Added Games to the default list:
  * Quake 2
  * Simpsons Hit & Run
  * Star Wars: Knights of the Old Republic
  * Tron 2.0
- Games added to the default list will now be independently added to your Games and Profiles without having
  to delete the files
- Fixed bug with game & profile removal in the Games window
- Fixed bug in game settings with Window Class
- Fixed bug with Win32I input being lost when switching between full screen and windowed (as in World of
  Warcraft)

Beta 0.80
- Added ultra-simple "Add Game" option to the Inner Space menu.  Should work fine for most DirectX games,
  though there are issues with some games.
- Fixed some bugs with key emulation (though the EverQuest II bug with Alt is still present)
- Fixed issue with full screen applications crashing or displaying error messages when switching focus

Beta 0.79
- LavishScript 1.10 - Turbo command, atexit function
- Fixed bug with hud element removal

Beta 0.78
- XMLSetting command re-added
- Triggers service, powered by Blech, added
- AddTrigger, RemoveTrigger commands added (scripts only)
- SHIFT, CTRL, and ALT added to preprocessor definitions -- will be replaced with the correct name of the
  key for the user's input locale in scripts
- PIP.iss will now be automatically generated in the Scripts folder if it does not exist.  To add picture-
  in-picture functionality, your profile's "OnActivate" must be set to "runscript pip".  By default, the
  script will line the windows up from the top left to the top right.  You can change the behavior by
  editing lines at the top of PIP.iss

Beta 0.77
- LavishScript 1.08 - New "ptr" datatypes, APICall, undefined function parameter fixes, new preprocessor,
  TimedCommand re-added (oops)
- Fixed issue with games using multiple input systems
- Fixed Echo on/off reversal

Beta 0.76
- Sessions will attempt to reconnect to the uplink if connection is lost
- LavishScript 1.05 (fixes Return Top-Level Object, among other minor changes)

Beta 0.75
- Fixed Services service

Beta 0.74
- Fixed MouseClick hold option and added release option
- Added Methods to most data types, which can also be used as commands.  Check the wiki for complete
  information
- "bind" and "extension" data types are now accessible
- Added "Bind" and "Extension" Top-Level Objects

Beta 0.73
- LavishScript v1.02. LavishScript is described here: http://www.lavishsoft.com/wiki/index.php/LavishScript
- Consoles have been changed a little bit -- Scrollback is now shift+up/shift+down, and command history
  is up/down

Beta 0.72
- Fixed typo of DeleteVariable command (was DeleteeVariable)
- In preparation for Fury work, generalized the IS scripting system, now called LavishScript. The 
  uplink now supports scripting capabilities.
- The session console now features line-editing capabilities and insert/overwrite toggle (via the
  insert key) including a cursor.  When the cursor's inside is light green, it's in overwrite mode.
  Dark green is insert mode, which is default.
- The consoles (in-game and console) now have a revised command history which separates the history 
  "view" line from the history insert location (i.e. history no longer overwrites itself from the
  last viewed history line, it adds to the end)

Beta 0.71
- Bumped ISXDK to version 8
- Added "Force Adapter" profile setting, for dual monitor support.  Like WinEQ 2.0's setting, this
  can be "Application Controlled", "Primary" or "Secondary"
- New datatype "rgb" with the following members
  * int Red: 0-255 indicating the amount of red
  * int Blue: 0-255 indicating the amount of blue
  * int Green: 0-255 indicating the amount of green
  * string Hex: Same as rgb's "to string", shows the color in the form rrggbb, for example "ff0000" 
                for full red
- Added datatype members
  * int display.DesktopX: X position of the left edge of the windows desktop on the current monitor
  * int display.DesktopY: Y position of the left edge of the windows desktop on the current monitor
  (Also modified the generated PreInit.iss to use these instead of 0,0 for window positioning)
  * rgb display.GetPixel[x,y]: Retrieves pixel color at this window position
  * string display.PixelSearch[x,y,color,-radius #,search...]: Searches for the nearest pixel to x,y 
    matching a set of conditions.  Color and radius are required.  Everything is given in decimal
    except for color, which must be lower case hexadecimal.  Other optional search parameters include 
    -within #, -redwithin #, -greenwithin #, -bluewithin #.  These are used left to right, so to 
    search for a color within 32 blue and green, but within 16 red, you could use -within 32,-redwithin 16.
    The returned string will be in the form x,y
  * int display.TextureMem: Available texture memory, in megabytes
- Fixed bug with Games window being able to open multiple times, which caused copies of the
  window to cease functioning
- Moved part of PreInit.iss which was not functioning correctly due to being too early to a newly
  generated AutoExec.iss (will be generated on a clean install, or when Games.XML does not exist)
  Added CTRL+ALT+M to PreInit.iss to toggle WinEQ-style memory indicator
- Fixed script early ending bug with command lists
- Added mouse auto-release when loading for DirectInput (EQ1...)

Beta 0.70
- Revamped bind system.  System now accepts any combination of modifier keys plus a non-modifier
  key, rather than any number of keys and ignoring modifiers.  Modifier keys may also be treated
  as non-modifiers, for example by using only "shift" or "ctrl+shift".  Binds now also allow
  separate commands for press and release, defaulting to release.  Example:
    bind -press wireframe f8 wireframe on
    bind -release wireframe f8 wireframe off
  When F8 is pressed in this example, wireframe turns on.  When F8 is released, wireframe turns off.
  The revamped system also considers the pressed modifier keys when processing binds, and they must
  match.  This means that more binds could be added to the above example:
    bind wireframetoggle alt+f8 wireframe toggle
  When Alt+f8 is pressed and then released in this example, wireframe will be toggled.  The F8 bind
  will not be used, because the modifier keys do not match (no modifiers vs Alt).  Prior to this
  revamp, if Alt+F8 and F8 were both bound, both would have been used.
- Fixed "else" (which consequently caused the new WinEQ-style hotkeys stuff done for 0.69 to not work)

Beta 0.69
- Added "Focus" command to uplink
- Fixed uplink issue with echoing causing redraws of the entire desktop (thus causing it to act
  much slower than desired when the tray console echoed text)
- Added automatic execution of "PreInit.iss" and "AutoExec.iss", which come directly after
  the automatic execution of "PreInit.ice" and "AutoExec.ice" (before processing the game and
  profile-specific ones)
- Removed declare spam (oops)
- Fixed FileRedirect
- Parsed ${} no longer automatically expands to multiple parameters.  If you need this behavior,
  use Execute with the new -reparse switch.  However, be aware that any spaces, quoted or not,
  will be interpreted as separating parameters because quotes will be stripped before execution
  of Execute.
- Added "-reparse" to Execute command
- If Games.XML does not exist, Scripts\PreInit.iss will be generated with basic WinEQ-style hotkeys
  set up, as well as redirecting eqclient.ini and eqlsPlayerData.ini per profile
- Added Switch-Case-Endswitch to scripting support (also including Default statement)
- Added Break command for Do-While and Switch-Case-Endswitch
- Added Continue command for Do-While

Beta 0.68
- Fixed crash issue with "arg" and "ExecuteFile" commands when given 0 parameters
- Fixed issues with uplink and relay
- Added "-keylist" to bind command
- Added "-t" to HUDSet command

Beta 0.67
- Wait command no longer parses at execution time. It will automatically parse the delay parameter,
  but leave the optional condition unparsed for checking at the correct time
- Fixed crash in script stack dump when there is no current line (which happens, for example, when
  the "while" command cannot find its matching "do" due to scope, etc)
- Fixed NavPoint Top-Level Object

Beta 0.66
- Fixed filename display issue with "EndScript *"
- Implemented navigational system, divided into connected points within "worlds" and stored in XML.  
  Different files can be used to contain different sets of points.  Includes fairly simple system for 
  obtaining and using the shortest path between two points.
  * Commands: Navigation, NavPath, NavPoint
  * Datatypes: point3f, navpath
  * Top-Level Objects: navpath NavPath, point3f NavPoint[world,name]
- Fixed file handling bug with script files
- Fixed "If" bug skipping lines inappropriately

Beta 0.65
- Fixed bug in head command
- Fixed crash issue in tail command
- Added functionality to Memory service, including usage of a custom memory protection service
- Fixed issue with variable expansion in the command parser
- Added "scripts" command

Beta 0.64
- Fixed If command when not using command blocks { }
- Added hudelement data type and HUDElement Top-Level Object
- Updated main program's console to use the new command parsing and output system
- Fixed issue with old .DAT files still being used at some points (settings would appear to not save)
- ISXDK is now version 5, requiring recompile of extensions
- Added InnerSpace.XML main settings file (currently not used by the main program, this will be created
  automatically when a game is first run through Inner Space). Settings currently include typematic rate, 
  typematic delay, and video capture settings.  The default typematic settings are now detected via Windows.

Beta 0.63
- Settings for profiles and games switched to XML.  The old .DAT files will automatically be converted
  and destroyed

Beta 0.62
- Added HTTP service
- Changed font to monospace.  Sorry if this upsets you, but most consoles use monospace fonts and it makes
  certain things much easier for development as well as presentation
- Fixed 'Type' command used with Win32I input system (shifted keys should be typed correctly)
- CTRL+PGDN now goes to the very end of the console output (no scrollback)
- Console now supports a "typematic rate".  If a key is held down for over 200ms (1/5 of a second) in the
  console, the key is automatically re-pressed at a rate of 20 times per second until the key is released.
  This may be made configurable if deemed necessary.
- Unloading an extension no longer requires the .dll part of the filename (loading already didn't)
- Changed how parameters to Record work, and added ability to capture a % of frames, rather than every frame.
  Unless specified, the rate of capture will be 80% of your actual framerate.

Beta 0.61
- Fixed an issue with system services

Beta 0.60
- Fixed NoParse command
- Added "Memory" system service

Beta 0.59
- Fixed issue with local variable scope
- New commands:
  WaitFrame
- Fixed bug in alias execution

Beta 0.58
- Fixed command splitting via ; used with aliases

Beta 0.57
- Fixed variable parsing
- Added INIRedirect
- Fixed minor parsing issue when using |

Beta 0.56
- Made ExecuteFile command available
- Added #include for scripts
- RunScript no longer requires including the .iss extension.  If no extension is given, it will default to .iss.
- Scripts and command execution files can be placed in the Scripts subdirectory, the Inner Space main directory, or 
  the current directory in use by the game
- Extensions can be placed in the Extensions subdirectory, the Inner Space main directory, or the current directory
  in use by the game
- Variable manipulation commands now end scripts on failure
- Added File System, which will provide file redirection (e.g. Game wants to use file X, you can make it use file Y)
  and basic file i/o commands.  This system will also handle .ini file customization.
- Made several changes to in-game console (soon to be done to main console as well) to act a bit more like unix
  shells, at least as far as redirection, multiple commands and "pipelining" goes.  Certain commands can now take
  advantage of output from a command as their input (this is what is known as pipelining).  In addition to the
  current >> handling, > can be used to create a new file using the command output, | can be used to pipe the
  right-side command's output into the left-side's input (example: "tail -n 5 | head text.txt" will output the last 
  5 of the first 10 lines of the file text.txt), and surrounding a command with || can be used to insert its first 
  line of output into the commandline at that position (example: "echo 1 |2| 3" will output "1 Command not found: 
  '2' 3").  ; can naturally be used to split commands, and therefore the "multiline" command is now obsolete.
  Use double quotes around a parameter to prevent the special handling of certain special characters.
- New commands:
  FileRedirect
  Cat
  Head
  Tail
  Line
  Arg
- Removed commands:
  Multiline
- Fixed FPS Limiting.  Calculate and absolute were switched, and calculate was not working correctly

Beta 0.55
- AutoExec sequence now waits until the list of other sessions is received from the uplink
- Added optional -noactivate switch to WindowVisibility
- Made Display Top-Level Object available
- Made DeleteVariable command available
- Allowed empty aliases
- Added data members:
  bool console.Echo
- IS now adds custom resolutions to Direct3D9 games that auto-detect available resolutions

Beta 0.54
- Fixed crash in DeclareVariable with string type
- Fixed ${Session[#]} and ${Sessions}
- Added "system" datatype and "System" Top-Level Object
- Added "MaxFPS" command
- Fixed crash when opening "Games" window after first time

Beta 0.53
- Fixed WindowFrame command
- Fixed GlobalBind -list
- Added "Log" command to session and main consoles
- Fixed crash in DeclareVariable when scope not given

Beta 0.52
- Added "Games" window, used for managing games and profiles settings.  Currently when deleting, renaming or
  creating a new game or profile set, the tree control resets and collapses.  This behavior will be changed in
  coming releases, but we find it acceptable at present.  Moving on to other ease-of-use issues.
- Removed the video capture settings from profile settings.  They may be added to a new setting category.
- Added "Console" service
- Fixed "WindowFrame" changes not applying immediately
- Added "-fullscreen" switch to WindowSize command.  Note that this does not MOVE the window, just resize.  Therefore,
  a "full screen emulated" set of commands would look like this:
    WindowSize -fullscreen
    WindowPos -viewable 0,0
- Added Top-Level Objects:
  int Sessions - Number of active sessions NOT including the current one
  display Display - Currently active display system
- Added "DIMouse" command to handle capture and release of the DirectInput mouse
- Began work on the Inner Space manual
- Removed aliases from tab auto-completion, and added cycling forward (and backward by holding shift while tabbing)
- Added "OnActivate" and "OnDeactivate" to profile settings (descriptions are in the Games window)

Beta 0.51
- Fixed crash when giving too few parameters to "relay"
- Removed some debugging that was left on
- Fixed problem loading extensions

Beta 0.50
- Modified Win32I input system to work a bit better
- Added Dark Age of Camelot to list of games supported by default
- Added auto-complete (via tab key) to consoles
- Added output redirection to consoles, in the form "command parameters >> outputfilename", such as
  echo "hi" >> output.txt

Alpha 0.10
- Fixed crash when using WindowSize or WindowPosition with the -viewable parameter but not a size or position
- Fixed bug with empty parameters to an executable
- Fixed crash when saving profiles/games with a null setting
- Added "Preload" executable to Profile, which will run a program (without Inner Space) before running the actual game
- Added Sims 2 and Sid Meier's Pirates! to list of games supported by default
- Added ClipMouse command, which when enabled will prevent the mouse from leaving the client portion of the game window
- Console is now a configurable bind, which is set to use the ` key by default

Alpha 0.09
- Scripting:
  * Fixed the other crash when passing too many parameters to a function call ;)
  * Fixed return command
  * Fixed problem with function calls using the wrong local variable scope

Alpha 0.08
- Scripting:
  * Declare now defaults to local scope when used inside a script
  * Fixed Wait command
  * Fixed crash when passing too many parameters to a function call (extras are ignored)

Alpha 0.07
- Scripting:
  * Fixed problem with variables from global scope not being found from scripts
  * Fixed problem with function calls not setting the local variable scope
  * Fixed message that appears when a variable does not exist within reachable scope

Alpha 0.06
- Added command history to the console window via shift+up/shift+down
- Added main program's console window, accessible by sending it the "console" command or selecting Console from
  the tray menu
- ISXDK Updated to Version 3

Alpha 0.05
- Base Command: ExecuteFile
- Added auto-execution of commands file "AutoExec.ice", and added per game and per profile auto-execution (see
  Settings Reference)
- Input Commands: MouseTo, MouseClick, GlobalBind
- Added on/off parameters to Echo
- Fixed crash when invalid parameters were used with "profile" or "game"

Alpha 0.04
- HUD Commands: HUDAdd, HUDList, HUDRemove, HUDSet
- Settings Commands: Game, Games, Profile, Profiles
- Preparing for the main program's console, uplink commands have been expanded to include a subset of
  each session's commands.  Consequently, the uplink now supports the "commands" command to list them.
- Fixed binds that were to use shift/alt/ctrl keys
- Fixed bug that prevented using the "print screen" button to capture screenshots in some games
- ISXDK version 2 now required

Alpha 0.03
- Lots of work on the Inner Space extension system, including services. ISXDK is in progress for developing extensions.
- Added Extension command
- Added Services command
- Added WindowTaskbar command
- Added Wait command  (scripting)
- Added support for Rise of Nations, Lords of EverQuest
- Working on scripting reference
  Note: If you want to be a good alpha tester and are willing to dive into scripting or extension stuff, that's where
        most of the testing needs to be done.  If you want to test either of those and let us know if you have any
        problems, that would help :)
- The tray menu now checks if games exist in the detected/default path before displaying them, so you do not see games
  you do not have (and if you do have them, the path could not be detected and is not our default.  We will have a
  mechanism to set game paths in a version or two)

Alpha 0.02
- Added Call and Return commands (scripting)
- Auto-detection of paths for all games except for RCT3

Alpha 0.01
- First public version


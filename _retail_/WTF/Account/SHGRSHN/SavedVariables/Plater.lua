
PlaterDB = {
["profileKeys"] = {
["Scootervin - Emerald Dream"] = "Default",
["Herbcraft - Area 52"] = "Default",
["Threadcraft - Emerald Dream"] = "Default",
["Samoanbeast - Emerald Dream"] = "Default",
["Tingerce - Emerald Dream"] = "Default",
["Samoaninja - Emerald Dream"] = "Default",
["Samoansage - Emerald Dream"] = "MyNewProfile",
["Samoanranger - Emerald Dream"] = "Default",
["Orecraft - Emerald Dream"] = "Default",
["Craudy - Emerald Dream"] = "Default",
["Forgecraft - Emerald Dream"] = "Default",
["Samoanslayer - Emerald Dream"] = "Default",
["Hfishsamoan - Ravenholdt"] = "Default",
["Samoansavage - Emerald Dream"] = "KokonutKrew",
["Samoansurge - Emerald Dream"] = "KokonutKrew",
["Samoanmystic - Emerald Dream"] = "Default",
["Farmcraft - Emerald Dream"] = "Default",
["Samoanbeast - Ravenholdt"] = "Default",
["Vithun - Emerald Dream"] = "Default",
["Samoanrelic - Emerald Dream"] = "Default",
["Samoanruin - Emerald Dream"] = "Default",
["Haedshot - Emerald Dream"] = "Default",
["Brunderan - Emerald Dream"] = "Default",
["Aheenan - Emerald Dream"] = "Default",
["Samoansteel - Emerald Dream"] = "Default",
["Herbcraft - Emerald Dream"] = "Default",
["Mf - Emerald Dream"] = "Default",
["Samoanreaper - Emerald Dream"] = "Default",
["Dustcraft - Emerald Dream"] = "Default",
["Samoanrelic - Stormrage"] = "Default",
["Samoantitan - Stormrage"] = "Default",
},
["profiles"] = {
["MyNewProfile"] = {
["aura_cooldown_edge_texture"] = "Interface\\GLUES\\loadingOld",
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1604617585,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 595,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
320170,
320171,
320462,
330712,
332170,
333875,
326836,
342135,
333861,
341969,
317963,
327481,
328331,
322614,
325701,
326438,
323538,
321764,
296523,
330755,
295929,
296019,
335685,
170751,
342207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1541263726,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 108,
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["SpellIds"] = {
261265,
261266,
271590,
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1605214963,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 607,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
323149,
324392,
340544,
342189,
333227,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604674264,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 695,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
["SpellIds"] = {
321247,
334522,
320232,
319962,
325879,
324427,
322999,
325360,
322903,
324103,
333294,
333540,
319521,
326021,
326450,
322711,
329104,
295000,
242391,
320197,
329608,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1604454032,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 351,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
337220,
337253,
337251,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
["Time"] = 1604599443,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 460,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
323489,
323496,
319941,
319592,
334266,
325258,
334913,
326221,
322936,
323236,
321834,
336752,
325418,
324667,
327233,
324368,
324205,
323943,
319713,
320596,
320729,
323608,
330614,
320063,
332708,
334023,
317231,
317943,
320966,
334053,
328458,
321968,
331718,
325793,
330453,
326997,
334051,
292903,
330843,
294173,
189200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.275,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Name"] = "Animation Speed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1547158828,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 135,
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Name"] = "UnitPower [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Show the energy amount above the nameplate",
["SpellIds"] = {
},
["Icon"] = 136048,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604599472,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 355,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Skull Texture",
["Name"] = "Skull Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Skull Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Important [Plater]",
["NpcNames"] = {
"164362",
"168882",
"168988",
"170234",
"165905",
"170452",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604696442,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 970,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
338353,
334748,
334749,
320784,
341352,
341520,
341522,
336005,
339777,
331933,
326617,
324914,
324776,
326046,
340634,
319070,
328295,
317936,
327413,
319654,
323821,
320772,
324293,
330562,
330868,
341902,
342139,
342675,
323190,
332836,
327648,
328217,
322938,
340544,
325876,
325700,
323552,
332666,
332612,
332706,
340026,
294171,
292910,
294165,
338871,
330813,
335694,
327461,
329787,
304946,
15245,
276754,
304831,
277036,
320657,
294362,
270248,
292926,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
["Time"] = 1541606626,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"pink\" \n    \nend\n\n\n",
["Icon"] = "INTERFACE\\ICONS\\Achievement_PVP_P_01",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 45,
["Author"] = "抹了油的大叔-白银之手",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    \nend\n\n\n",
["Name"] = "NameplaterColor with Special Buff ID",
["PlaterCore"] = 1,
["Enabled"] = false,
["SpellIds"] = {
277242,
},
["Desc"] = "NameplaterColor with Special Buff ID",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
["Time"] = 1604698647,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 462,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
273577,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1548349253,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["Icon"] = 135024,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 67,
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Name"] = "Color Change [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
},
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["NpcNames"] = {
"141851",
},
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1547158827,
["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Icon"] = 133006,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["Revision"] = 46,
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Border Color [Plater]",
["PlaterCore"] = 1,
["Enabled"] = false,
["SpellIds"] = {
},
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1611856720,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local isTanking = UnitDetailedThreatSituation (\"player\", unitId)\n    if (not isTanking) then \n        Plater.SetNameplateColor (unitFrame, \"pink\") \n    end\n    \nend\n\n\n\n\n",
["Time"] = 1550589160,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
"surf darter",
},
["Enabled"] = false,
["Revision"] = 5,
["Author"] = "Kastfall-Azralon",
["OnShowCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local isTanking = UnitDetailedThreatSituation (\"player\", unitId)\n    if (not isTanking) then \n        Plater.SetNameplateColor (unitFrame, \"pink\") \n    end\n    \nend\n\n\n\n\n",
["Name"] = "New Script",
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Desc"] = "",
["SpellIds"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1548957952,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CastbarColor = \"orangered\"\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-22, 20, 8, -11)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+20, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["Icon"] = "INTERFACE\\ICONS\\Spell_Fire_FelFlameStrike",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n        envTable.OriginalWidth = nil\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Revision"] = 1382,
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    Plater.SetCastBarBorderColor (self, 1, 0, 0, 0.4)\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetWidth (envTable.OriginalWidth)\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    \n    --increase the cast bar size\n    envTable.OriginalHeight = self:GetHeight()\n    envTable.OriginalWidth = self:GetWidth()\n    local width = Plater.db.profile.plate_config.enemynpc.cast_incombat[1]\n    local height = Plater.db.profile.plate_config.enemynpc.cast_incombat[2]\n    \n    self:SetWidth (width)\n    self:SetHeight (height * envTable.CastBarHeightAdd)\n    \n    print (envTable.glowEffect:GetAlpha())\n    \nend",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "M+ Important Spells [Plater]",
["PlaterCore"] = 1,
["Enabled"] = false,
["SpellIds"] = {
258153,
258313,
274569,
278020,
261635,
272700,
268030,
265368,
264520,
265407,
278567,
278602,
258128,
257791,
258938,
265089,
272183,
256060,
257397,
269972,
270901,
270492,
263215,
268797,
262554,
253517,
255041,
252781,
250368,
258777,
278504,
266106,
257732,
268309,
269302,
263202,
257784,
278755,
272180,
263066,
267273,
265912,
274438,
268317,
268375,
276767,
264105,
265876,
270464,
278961,
265468,
256897,
280604,
268702,
255824,
253583,
250096,
278456,
262092,
257270,
267818,
265091,
262540,
263318,
263959,
257069,
256849,
267459,
253544,
268008,
267981,
272659,
264396,
257736,
264390,
255952,
257426,
274400,
272609,
269843,
269029,
272827,
269266,
263912,
264923,
258864,
256955,
265540,
260793,
270003,
270507,
257337,
268415,
275907,
268865,
260669,
260280,
253239,
265541,
250258,
256709,
277596,
276268,
265372,
263905,
265781,
257170,
268846,
270514,
258622,
258199,
256627,
257870,
259711,
258917,
263891,
268027,
268348,
269313,
272711,
271174,
268260,
269399,
268239,
264574,
261563,
257288,
257757,
267899,
255741,
264757,
260894,
263365,
260292,
263583,
276292,
272874,
264101,
264407,
271456,
262515,
275192,
256405,
270084,
257785,
267237,
266951,
267433,
255577,
255371,
270891,
267357,
258338,
257169,
270927,
273995,
260926,
264027,
267257,
253721,
265019,
260924,
263309,
266206,
268187,
260067,
274507,
276068,
263278,
258317,
256594,
268391,
268230,
260852,
267763,
268706,
264734,
288693,
288694,
270590,
290787,
72286,
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
["Time"] = 1550596124,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --custom frames\n    unitFrame.JadeFireGlowEffect = unitFrame.JadeFireGlowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    unitFrame.JadeFireGlowEffect:SetOffset (-27, 25, 6, -8)\n    unitFrame.JadeFireGlowEffect:Hide()\n    \nend\n\n\n",
["Icon"] = 132221,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Hide() \nend\n\n\n",
["Revision"] = 33,
["Author"] = "Kastfall-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:Show() \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.JadeFireGlowEffect:SetAlpha (.5)\nend\n\n\n",
["Name"] = "Jadefire [BOD] - Fire Shield",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
286425,
},
["Desc"] = "Alert when the unit has the Fire Shield to be broken.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
["Time"] = 1604617977,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 513,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
["SpellIds"] = {
332329,
320103,
321406,
335817,
321061,
320141,
326171,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Health Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the health bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604607993,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 406,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Unit - Main Target [P]",
["NpcNames"] = {
"156212",
"168098",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1606506781,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 109,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Health Markers [P]",
["NpcNames"] = {
"164451",
"164463",
"164461",
"165946",
"164501",
"164218",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604593143,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
["Enabled"] = true,
["Revision"] = 833,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
321828,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Tank Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
},
["extra_icon_height"] = 16,
["aura_x_offset"] = 0,
["first_run3"] = true,
["url"] = "https://wago.io/g-jp-v2zw/5",
["hover_highlight_alpha"] = 0.29999998211861,
["cast_statusbar_fadein_time"] = 0.02081192471087,
["ui_parent_buff_strata"] = "LOW",
["cast_statusbar_spark_alpha"] = 0.71999996900559,
["healthbar_framelevel"] = 0,
["aura2_y_offset"] = 13.7,
["aura_timer_text_anchor"] = {
["y"] = -7,
["x"] = -1,
["side"] = 1,
},
["castbar_framelevel"] = 0,
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["actorname_text_font"] = "Accidental Presidency",
["percent_text_font"] = "Accidental Presidency",
["spellpercent_text_font"] = "Accidental Presidency",
["power_percent_text_color"] = {
1,
1,
1,
},
["big_actortitle_text_font"] = "Accidental Presidency",
["click_through"] = true,
["big_actorname_text_font"] = "Accidental Presidency",
["power_percent_text_font"] = "Accidental Presidency",
["level_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Accidental Presidency",
},
["friendlyplayer"] = {
["quest_color_enemy"] = {
1,
0.369,
0,
},
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["only_thename"] = true,
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
},
["spellpercent_text_size"] = 9,
["big_actortitle_text_size"] = 10,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
120,
},
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellpercent_text_outline"] = "NONE",
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["big_actorname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
nil,
4,
},
["big_actorname_text_font"] = "Accidental Presidency",
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["all_names"] = true,
["power_percent_text_font"] = "Accidental Presidency",
["percent_text_ooc"] = true,
["percent_show_health"] = true,
["level_text_alpha"] = 0.29999998211861,
["actorname_text_anchor"] = {
["y"] = -3,
["x"] = -1,
["side"] = 1,
},
["percent_text_size"] = 8,
["big_actortitle_text_outline"] = "OUTLINE",
["health_incombat"] = {
120,
12,
},
["percent_text_font"] = "Accidental Presidency",
["buff_frame_y_offset"] = 0,
["percent_text_outline"] = "NONE",
["quest_enabled"] = true,
["mana"] = {
nil,
4,
},
["actorname_text_font"] = "Accidental Presidency",
["spellpercent_text_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
120,
12,
},
["big_actorname_text_size"] = 10,
["percent_text_enabled"] = true,
["actorname_text_size"] = 11,
["spellname_text_font"] = "Accidental Presidency",
["level_text_enabled"] = true,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
8,
},
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 10,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["only_names"] = false,
["quest_color_neutral"] = {
1,
0.65,
0,
},
["actorname_text_size"] = 11,
["power_percent_text_font"] = "Accidental Presidency",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = -3,
["x"] = -1,
["side"] = 1,
},
["quest_color_enemy"] = {
1,
0.369,
0,
},
["spellpercent_text_enabled"] = true,
["level_text_alpha"] = 0.29999998211861,
["percent_text_font"] = "Accidental Presidency",
["percent_text_size"] = 8,
["percent_show_health"] = true,
["percent_text_outline"] = "NONE",
["actorname_text_font"] = "Accidental Presidency",
["big_actorname_text_font"] = "Accidental Presidency",
["spellname_text_size"] = 9,
["health_incombat"] = {
nil,
12,
},
["health"] = {
120,
},
["percent_text_enabled"] = true,
["spellpercent_text_size"] = 9,
["spellname_text_font"] = "Accidental Presidency",
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["level_text_enabled"] = true,
},
["global_health_height"] = 14,
["global_health_width"] = 120,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
8,
},
["spellpercent_text_size"] = 9,
["big_actortitle_text_size"] = 10,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["level_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["spellpercent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["actorname_text_font"] = "Accidental Presidency",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
120,
1,
},
["power_percent_text_font"] = "Accidental Presidency",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = -3,
["x"] = -1,
["side"] = 1,
},
["percent_text_size"] = 8,
["actorname_text_spacing"] = 10,
["percent_text_font"] = "Accidental Presidency",
["mana"] = {
120,
1,
},
["quest_enabled"] = true,
["percent_text_outline"] = "NONE",
["level_text_alpha"] = 0.29999998211861,
["big_actorname_text_font"] = "Accidental Presidency",
["health_incombat"] = {
nil,
12,
},
["spellname_text_size"] = 9,
["health"] = {
120,
},
["actorname_text_size"] = 11,
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["spellname_text_font"] = "Accidental Presidency",
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["quest_color_enemy"] = {
1,
0.369,
0,
},
},
["enemynpc"] = {
["spellname_text_color"] = {
0.95294117647059,
[3] = 0.9921568627451,
},
["spellpercent_text_font"] = "Accidental Presidency",
["big_actortitle_text_font"] = "Accidental Presidency",
["cast"] = {
120,
8,
},
["spellpercent_text_size"] = 9,
["actorname_text_font"] = "Accidental Presidency",
["level_text_alpha"] = 0.29999998211861,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = -3,
["x"] = -1,
["side"] = 1,
},
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["percent_text_size"] = 8,
["level_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["percent_text_font"] = "Accidental Presidency",
["spellname_text_font"] = "Accidental Presidency",
["power_percent_text_font"] = "Accidental Presidency",
["cast_incombat"] = {
nil,
8,
},
["spellname_text_outline"] = "NONE",
["spellpercent_text_outline"] = "NONE",
["health_incombat"] = {
nil,
14,
},
["spellname_text_size"] = 9,
["health"] = {
120,
14,
},
["spellname_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["percent_text_outline"] = "NONE",
["percent_text_anchor"] = {
["y"] = 1,
["side"] = 3,
},
["level_text_font"] = "Accidental Presidency",
["big_actorname_text_font"] = "Accidental Presidency",
},
},
["indicator_raidmark_anchor"] = {
["x"] = -40,
},
["aura_y_offset"] = 13.7,
["extra_icon_width"] = 22,
["tank"] = {
["colors"] = {
["pulling"] = {
nil,
0.91372549019608,
0.99607843137255,
},
},
},
["health_statusbar_texture"] = "Skyline",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Execute Range"] = 1,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Aura Reorder"] = 3,
["Targetting Alpha"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
["Target Color"] = 3,
["Combo Points"] = 4,
["Attacking Specific Unit"] = 1,
},
["castbar_target_show"] = true,
["cast_statusbar_color_nointerrupt"] = {
0.49411764705882,
0.49803921568628,
0.50196078431373,
0.96000000089407,
},
["first_run2"] = true,
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 8,
["npc_cache"] = {
[167898] = {
"Manifestation of Envy",
"Halls of Atonement",
},
[151658] = {
"Strider Tonk",
"Operation: Mechagon",
},
[165469] = {
"Nathrian Enforcer",
"Castle Nathria",
},
[165597] = {
"Patchwerk Soldier",
"The Necrotic Wake",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[151659] = {
"Rocket Tonk",
"Operation: Mechagon",
},
[165470] = {
"Nathrian Executor",
"Castle Nathria",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
},
[173143] = {
"Soul Weaver",
"Maldraxxus Covenant Finale Scenario",
},
[138489] = {
"Shadow of Zul",
"Kings' Rest",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
},
[150254] = {
"Scraphound",
"Operation: Mechagon",
},
[144244] = {
"The Platinum Pummeler",
"Operation: Mechagon",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[27829] = {
"Ebon Gargoyle",
"Alterac Valley",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[165472] = {
"Nathrian Siphoner",
"Castle Nathria",
},
[164705] = {
"Pestilence Slime",
"Plaguefall",
},
[173145] = {
"Gorging Mite",
"Castle Nathria",
},
[61029] = {
"Primal Fire Elemental",
"Alterac Valley",
},
[132481] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[164450] = {
"Dealer Xy'exa",
"De Other Side",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[144246] = {
"K.U.-J.0.",
"Operation: Mechagon",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
},
[173146] = {
"Winged Ravager",
"Castle Nathria",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[164451] = {
"Dessia the Decapitator",
"Theater of Pain",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[126023] = {
"Harbor Saurid",
"The Underrot",
},
[138493] = {
"Minion of Zul",
"Kings' Rest",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[169823] = {
"Gorm Behemoth",
"Torghast, Tower of the Damned",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[133379] = {
"Adderis",
"Temple of Sethraliss",
},
[169696] = {
"Mire Soldier",
"Plaguefall",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[126983] = {
"Harlan Sweete",
"Freehold",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
},
[142587] = {
"Devouring Maggot",
"Waycrest Manor",
},
[175579] = {
"Fae Guardian",
"Temple of Kotmogu",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[53006] = {
"Spirit Link Totem",
"Alterac Valley",
},
[137473] = {
"Guard Captain Atu",
"Kings' Rest",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
},
[164967] = {
"Doctor Ickus",
"Plaguefall",
},
[141566] = {
"Scrimshaw Gutter",
"Siege of Boralus",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
},
[133384] = {
"Merektha",
"Temple of Sethraliss",
},
[165481] = {
"Court Assassin",
"Castle Nathria",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[157809] = {
"Mawsworn Darkcaster",
"Torghast, Tower of the Damned",
},
[10990] = {
"Alterac Ram",
"Alterac Valley",
},
[137989] = {
"Embalming Fluid",
"Kings' Rest",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[135816] = {
"Vilefiend",
"Temple of Kotmogu",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
},
[128649] = {
"Sergeant Bainbridge",
"Siege of Boralus",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[164589] = {
"Regenerating Wildseed",
"Silvershard Mines",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[138247] = {
"Irontide Marauder",
"Siege of Boralus",
},
[13236] = {
"Primalist Thurloga",
"Alterac Valley",
},
[165357] = {
"Pestilence Slime",
"Plaguefall",
},
[140038] = {
"Abyssal Eel",
"Shrine of the Storm",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[13284] = {
"Frostwolf Shaman",
"Alterac Valley",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[156023] = {
"Miniature Soulmass",
"Torghast, Tower of the Damned",
},
[14466] = {
"Horde Battle Standard",
"Temple of Kotmogu",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[173798] = {
"Rat of Unusual Size",
"Castle Nathria",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[173280] = {
"Stone Legion Skirmisher",
"Castle Nathria",
},
[3343] = {
"Grelkor",
"Alterac Valley",
},
[173276] = {
"Stone Legion Commando",
"Castle Nathria",
},
[170474] = {
"Brood Assassin",
"Plaguefall",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
},
[164464] = {
"Xira the Underhanded",
"Theater of Pain",
},
[167406] = {
"Sire Denathrius",
"Castle Nathria",
},
[167534] = {
"Rek the Hardened",
"Theater of Pain",
},
[173800] = {
"Sewer Rat",
"Castle Nathria",
},
[173142] = {
"Dread Feaster",
"Castle Nathria",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[14186] = {
"Ravak Grimtotem",
"Alterac Valley",
},
[143622] = {
"Wild Imp",
"Temple of Kotmogu",
},
[129227] = {
"Azerokk",
"The MOTHERLODE!!",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[165474] = {
"Nathrian Assassin",
"Castle Nathria",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
},
[157807] = {
"Mawsworn Soulweaver",
"Torghast, Tower of the Damned",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[10367] = {
"Shrye Ragefist",
"Alterac Valley",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
},
[156015] = {
"Writhing Soulmass",
"Torghast, Tower of the Damned",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
},
[173802] = {
"Carved Assistant",
"Castle Nathria",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
},
[172899] = {
"Nathrian Enforcer",
"Castle Nathria",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
},
[172142] = {
"Baroness Ninadar",
"Maldraxxus Covenant Finale Scenario",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[130635] = {
"Stonefury",
"The MOTHERLODE!!",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[127119] = {
"Freehold Deckhand",
"Freehold",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[167538] = {
"Dokigg the Brutalizer",
"Theater of Pain",
},
[136976] = {
"T'zala",
"Kings' Rest",
},
[129599] = {
"Cutwater Knife Juggler",
"Freehold",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[122963] = {
"Rezan",
"Atal'Dazar",
},
[128142] = {
"Voidling",
"Rated Eye of the Storm",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[156158] = {
"Adjutant Felipos",
"Torghast, Tower of the Damned",
},
[166644] = {
"Artificer Xy'mox",
"Castle Nathria",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[137233] = {
"Plague Toad",
"Temple of Sethraliss",
},
[156159] = {
"Coldheart Javelineer",
"Torghast, Tower of the Damned",
},
[170452] = {
"Essence Orb",
"Torghast, Tower of the Damned",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
},
[169458] = {
"Hecutis",
"Castle Nathria",
},
[147323] = {
"Springtail Leaper",
"Cooking: Impossible",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
},
[136083] = {
"Forgotten Denizen",
"Shrine of the Storm",
},
[142199] = {
"Alpine Hawk",
"Freehold",
},
[151812] = {
"Detect-o-Bot",
"Operation: Mechagon",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
},
[84155] = {
"Risen Mage",
"Ashran",
},
[129550] = {
"Bilge Rat Padfoot",
"Freehold",
},
[152708] = {
"Mawsworn Seeker",
"Torghast, Tower of the Damned",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[151814] = {
"Deadsoul Shade",
"Torghast, Tower of the Damned",
},
[170228] = {
"Bone Husk",
"Torghast, Tower of the Damned",
},
[63808] = {
"Faintly Glowing Gem",
"Mogu'shan Palace",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
},
[134423] = {
"Abyss Dweller",
"Shrine of the Storm",
},
[129231] = {
"Rixxa Fluxflame",
"The MOTHERLODE!!",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
},
[137487] = {
"Skeletal Hunting Raptor",
"Kings' Rest",
},
[151815] = {
"Deadsoul Echo",
"Torghast, Tower of the Damned",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
},
[3527] = {
"Healing Stream Totem",
"Twin Peaks",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
},
[135192] = {
"Honored Raptor",
"Kings' Rest",
},
[174194] = {
"Court Executor",
"Castle Nathria",
},
[151816] = {
"Deadsoul Scavenger",
"Torghast, Tower of the Damned",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[170486] = {
"Atal'ai Devoted",
"De Other Side",
},
[135322] = {
"The Golden Serpent",
"Kings' Rest",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[130575] = {
"Wandering Axebeak",
"Atal'Dazar",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[151817] = {
"Deadsoul Devil",
"Torghast, Tower of the Damned",
},
[126928] = {
"Irontide Corsair",
"Freehold",
},
[13181] = {
"Wing Commander Mulverick",
"Alterac Valley",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
},
[136984] = {
"Reban",
"Kings' Rest",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
},
[151818] = {
"Deadsoul Miscreation",
"Torghast, Tower of the Damned",
},
[163199] = {
"Fel'endae",
"Maldraxxus Covenant Finale Scenario",
},
[126848] = {
"Captain Eudora",
"Freehold",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
},
[130896] = {
"Blackout Barrel",
"Freehold",
},
[174069] = {
"Hulking Gargon",
"Castle Nathria",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[174325] = {
"Ascended Lich",
"Maldraxxus Covenant Finale Scenario",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[134173] = {
"Animated Droplet",
"Shrine of the Storm",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
},
[174070] = {
"Kennel Overseer",
"Castle Nathria",
},
[136347] = {
"Tidesage Initiate",
"Shrine of the Storm",
},
[127124] = {
"Freehold Barhand",
"Freehold",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[168700] = {
"Pestering Fiend",
"Castle Nathria",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[174071] = {
"Vicious Gargon",
"Castle Nathria",
},
[142454] = {
"Ashtail Bandicoon",
"Freehold",
},
[81725] = {
"Muk'Mar Raz",
"Ashran",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[134686] = {
"Mature Krolusk",
"Temple of Sethraliss",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[3625] = {
"Rarck",
"Alterac Valley",
},
[164857] = {
"Spriggan Mendbender",
"De Other Side",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
},
[168574] = {
"Pestilent Harvester",
"Plaguefall",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
},
[173178] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[155790] = {
"Mawsworn Acolyte",
"Torghast, Tower of the Damned",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
},
[162309] = {
"Kul'tharok",
"Theater of Pain",
},
[2630] = {
"Earthbind Totem",
"Deepwind Gorge",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
},
[105451] = {
"Counterstrike Totem",
"Alterac Valley",
},
[173051] = {
"Suppressor Xelors",
"Torghast, Tower of the Damned",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
},
[163077] = {
"Azules",
"Spires of Ascension",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[150293] = {
"Mechagon Prowler",
"Operation: Mechagon",
},
[174842] = {
"Belligerent Waiter",
"Castle Nathria",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[171342] = {
"Juvenile Runestag",
"De Other Side",
},
[98035] = {
"Dreadstalker",
"Temple of Kotmogu",
},
[154127] = {
"Fire Spirit",
"Torghast, Tower of the Damned",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[104493] = {
"Spitting Cobra",
"Alterac Valley",
},
[84097] = {
"Boneshallow Spider",
"Ashran",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[134691] = {
"Static-charged Dervish",
"Temple of Sethraliss",
},
[169601] = {
"Stone Legion Commando",
"Castle Nathria",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[173949] = {
"Nathrian Soldier",
"Castle Nathria",
},
[168962] = {
"Reborn Phoenix",
"Castle Nathria",
},
[169859] = {
"Observer Zelgar",
"Torghast, Tower of the Damned",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[154129] = {
"Burning Emberguard",
"Torghast, Tower of the Damned",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[135971] = {
"Faithless Conscript",
"Temple of Sethraliss",
},
[150295] = {
"Tank Buster MK1",
"Operation: Mechagon",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[140447] = {
"Demolishing Terror",
"Siege of Boralus",
},
[162058] = {
"Ventunax",
"Spires of Ascension",
},
[174208] = {
"Court Executor",
"Castle Nathria",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[157583] = {
"Forge Keeper",
"Torghast, Tower of the Damned",
},
[173953] = {
"Loyal Gargon",
"Castle Nathria",
},
[155793] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
},
[162059] = {
"Kin-Tara",
"Spires of Ascension",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[173568] = {
"Anima Crazed Worker",
"Castle Nathria",
},
[144231] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[138019] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[168837] = {
"Stealthling",
"Plaguefall",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[174336] = {
"Kennel Overseer",
"Castle Nathria",
},
[168326] = {
"Shattered Visage",
"De Other Side",
},
[164362] = {
"Slimy Morsel",
"Plaguefall",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[134056] = {
"Aqu'sirr",
"Shrine of the Storm",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[135975] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[82310] = {
"Stonehide Riverbeast",
"Ashran",
},
[171396] = {
"Kyrian Goliath",
"Temple of Kotmogu",
},
[164363] = {
"Undying Stonefiend",
"Halls of Atonement",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[168580] = {
"Plagueborer",
"Plaguefall",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[153878] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
},
[163213] = {
"Maw Infernous",
"Maldraxxus Covenant Finale Scenario",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[14282] = {
"Frost Wolf Bloodhound",
"Alterac Valley",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
},
[168968] = {
"Plaguebound Fallen",
"Plaguefall",
},
[175234] = {
"Tractus the Icebreaker",
"Torghast, Tower of the Damned",
},
[153879] = {
"Deadsoul Shadow",
"Torghast, Tower of the Damned",
},
[165260] = {
"Oozing Leftovers",
"Theater of Pain",
},
[166411] = {
"Forsworn Usurper",
"Spires of Ascension",
},
[145185] = {
"Gnomercy 4.U.",
"Operation: Mechagon",
},
[166608] = {
"Mueh'zala",
"De Other Side",
},
[173641] = {
"Nathrian Gargon",
"Castle Nathria",
},
[168969] = {
"Gushing Slime",
"Plaguefall",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
},
[173445] = {
"Sindrel",
"Castle Nathria",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[167691] = {
"Stasis Trap",
"Castle Nathria",
},
[134060] = {
"Lord Stormsong",
"Shrine of the Storm",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[60561] = {
"Earthgrab Totem",
"Alterac Valley",
},
[173446] = {
"Hargitas",
"Castle Nathria",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[167564] = {
"Mal'endra",
"Maldraxxus Covenant Finale Scenario",
},
[135470] = {
"Aka'ali the Conqueror",
"Kings' Rest",
},
[170234] = {
"Oppressive Banner",
"Theater of Pain",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[173191] = {
"Soulstalker V'lara",
"Torghast, Tower of the Damned",
},
[163089] = {
"Disgusting Refuse",
"Theater of Pain",
},
[154010] = {
"Rotting Prisoner",
"Torghast, Tower of the Damned",
},
[134701] = {
"Blood Effigy",
"The Underrot",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[130521] = {
"Freehold Deckhand",
"Freehold",
},
[163857] = {
"Plaguebound Devoted",
"Plaguefall",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[134063] = {
"Brother Ironhull",
"Shrine of the Storm",
},
[173448] = {
"Dragost",
"Castle Nathria",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
},
[167566] = {
"Bleakwing Assassin",
"Castle Nathria",
},
[133935] = {
"Animated Guardian",
"Kings' Rest",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[168973] = {
"High Torturer Darithos",
"Castle Nathria",
},
[165521] = {
"Lady Inerva Darkvein",
"Castle Nathria",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[130522] = {
"Freehold Shipmate",
"Freehold",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[173066] = {
"Kel'Thuzad",
"Maldraxxus Covenant Finale Scenario",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
},
[153885] = {
"Deadsoul Shambler",
"Torghast, Tower of the Damned",
},
[132530] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[26125] = {
"Ribflayer",
"Deepwind Gorge",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
},
[174090] = {
"Nathrian Hierarch",
"Castle Nathria",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[135472] = {
"Zanazal the Wise",
"Kings' Rest",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[151329] = {
"Warden Skoldus",
"Torghast, Tower of the Damned",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
},
[24207] = {
"Army of the Dead",
"Alterac Valley",
},
[81065] = {
"Risen Brute",
"Ashran",
},
[153874] = {
"Mawsworn Sentry",
"Torghast, Tower of the Damned",
},
[157340] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
},
[168337] = {
"Moldovaak",
"Castle Nathria",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
},
[154015] = {
"Escaped Ritualist",
"Torghast, Tower of the Damned",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[174092] = {
"Nathrian Gargon Rider",
"Castle Nathria",
},
[154016] = {
"Prisonbreak Soulmender",
"Torghast, Tower of the Damned",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
},
[14773] = {
"Iceblood Warmaster",
"Alterac Valley",
},
[151331] = {
"Cellblock Sentinel",
"Torghast, Tower of the Damned",
},
[129373] = {
"Dockhound Packmaster",
"Siege of Boralus",
},
[153377] = {
"Goop",
"Operation: Mechagon",
},
[131383] = {
"Sporecaller Zancha",
"The Underrot",
},
[174093] = {
"Nathrian Ranger",
"Castle Nathria",
},
[13798] = {
"Jotek",
"Alterac Valley",
},
[135475] = {
"Kula the Butcher",
"Kings' Rest",
},
[170385] = {
"Writhing Misery",
"Torghast, Tower of the Damned",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[138369] = {
"Footbomb Hooligan",
"The MOTHERLODE!!",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[134069] = {
"Vol'zith the Whisperer",
"Shrine of the Storm",
},
[166933] = {
"Ventun the Ravenous",
"Torghast, Tower of the Damned",
},
[152612] = {
"Subjugator Klontzas",
"Torghast, Tower of the Damned",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[154018] = {
"Prisonbreak Mauler",
"Torghast, Tower of the Damned",
},
[166934] = {
"Lor the Loyal",
"Torghast, Tower of the Damned",
},
[133943] = {
"Minion of Zul",
"Kings' Rest",
},
[151333] = {
"Sentinel Shard",
"Torghast, Tower of the Damned",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[130653] = {
"Wanton Sapper",
"The MOTHERLODE!!",
},
[19668] = {
"Shadowfiend",
"Twin Peaks",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[144301] = {
"Living Waste",
"Operation: Mechagon",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
},
[61056] = {
"Primal Earth Elemental",
"Alterac Valley",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[133944] = {
"Aspix",
"Temple of Sethraliss",
},
[13218] = {
"Grunnda Wolfheart",
"Alterac Valley",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[153382] = {
"Maw of the Maw",
"Torghast, Tower of the Damned",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[173633] = {
"Nathrian Archivist",
"Castle Nathria",
},
[154022] = {
"Prisonbreak Packleader",
"Torghast, Tower of the Damned",
},
[174100] = {
"Nathrian Singuard",
"Castle Nathria",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[136250] = {
"Hoodoo Hexer",
"Temple of Sethraliss",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[165067] = {
"Margore",
"Castle Nathria",
},
[152875] = {
"Massive Crusher",
"Torghast, Tower of the Damned",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
},
[155219] = {
"Gormling Spitter",
"Torghast, Tower of the Damned",
},
[175123] = {
"Warden Arkoban",
"Torghast, Tower of the Damned",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[6112] = {
"Windfury Totem",
"Eye of the Storm",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
},
[173973] = {
"Nathrian Tracker",
"Castle Nathria",
},
[168986] = {
"Skeletal Raptor",
"De Other Side",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[122968] = {
"Yazma",
"Atal'Dazar",
},
[164255] = {
"Globgrog",
"Plaguefall",
},
[169498] = {
"Plague Bomb",
"Plaguefall",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
},
[163915] = {
"Hatchling Nest",
"Plaguefall",
},
[170147] = {
"Volatile Memory",
"De Other Side",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
},
[150190] = {
"HK-8 Aerial Oppression Unit",
"Operation: Mechagon",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[156242] = {
"Animated Prowler",
"Torghast, Tower of the Damned",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[141495] = {
"Kul Tiran Footman",
"Siege of Boralus",
},
[154030] = {
"Oddly Large Mawrat",
"Torghast, Tower of the Damned",
},
[173464] = {
"Deplina",
"Castle Nathria",
},
[165408] = {
"Halkias",
"Halls of Atonement",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[163746] = {
"Walkie Shockie X1",
"Operation: Mechagon",
},
[164897] = {
"Fog Dweller",
"Torghast, Tower of the Damned",
},
[169157] = {
"Mudlump",
"Castle Nathria",
},
[149555] = {
"Abomination",
"Alterac Valley",
},
[150959] = {
"Mawsworn Interceptor",
"Torghast, Tower of the Damned",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[168098] = {
"Empowered Coldheart Agent",
"Torghast, Tower of the Damned",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
},
[165793] = {
"Mal'endra",
"Maldraxxus Covenant Finale Scenario",
},
[135231] = {
"Spectral Brute",
"Kings' Rest",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
},
[173466] = {
"Fara",
"Castle Nathria",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[114565] = {
"Guardian of the Forgotten Queen",
"Alterac Valley",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[122986] = {
"Wild Skyscreamer",
"Atal'Dazar",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
},
[157099] = {
"Imperial Censor",
"Torghast, Tower of the Damned",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[150965] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
},
[11859] = {
"Doomguard",
"Temple of Kotmogu",
},
[164261] = {
"Hungering Destroyer",
"Castle Nathria",
},
[163366] = {
"Magus of the Dead",
"Alterac Valley",
},
[150195] = {
"Gnome-Eating Slime",
"Operation: Mechagon",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
},
[164552] = {
"Rotmarrow Slime",
"Plaguefall",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
},
[69791] = {
"Jibakurei",
"Twin Peaks",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[173469] = {
"Kullan",
"Castle Nathria",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
},
[168102] = {
"Empowered Deadsoul Echo",
"Torghast, Tower of the Damned",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[168099] = {
"Empowered Coldheart Javelineer",
"Torghast, Tower of the Damned",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
},
[168004] = {
"Empowered Imperial Consular",
"Torghast, Tower of the Damned",
},
[165798] = {
"Necromancer Ritualist",
"Maldraxxus Covenant Finale Scenario",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[69792] = {
"Jibakurei",
"Twin Peaks",
},
[2225] = {
"Zora Guthrek",
"Alterac Valley",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[165415] = {
"Toiling Groundskeeper",
"Halls of Atonement",
},
[136006] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
},
[156239] = {
"Dark Ascended Corrus",
"Torghast, Tower of the Damned",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
},
[168101] = {
"Empowered Deadsoul Shade",
"Torghast, Tower of the Damned",
},
[164267] = {
"Margrave Stradama",
"Plaguefall",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
},
[136264] = {
"Half-Finished Mummy",
"Kings' Rest",
},
[136005] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[13176] = {
"Smith Regzar",
"Alterac Valley",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[171171] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
},
[131402] = {
"Underrot Tick",
"The Underrot",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[168361] = {
"Fen Hornet",
"Plaguefall",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[137029] = {
"Ordnance Specialist",
"The MOTHERLODE!!",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[61239] = {
"Glintrok Oracle",
"Mogu'shan Palace",
},
[171172] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[171557] = {
"Shade of Bargast",
"Castle Nathria",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[61399] = {
"Glintrok Scout",
"Mogu'shan Palace",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
},
[171173] = {
"Mawsworn Shadestalker",
"Torghast, Tower of the Damned",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
},
[168106] = {
"Empowered Mawsworn Guard",
"Torghast, Tower of the Damned",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[163501] = {
"Forsworn Skirmisher",
"Spires of Ascension",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[12121] = {
"Drakan",
"Alterac Valley",
},
[13152] = {
"Commander Malgor",
"Alterac Valley",
},
[168105] = {
"Empowered Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[174012] = {
"Executrix Ophelia",
"Castle Nathria",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[133963] = {
"Test Subject",
"The MOTHERLODE!!",
},
[130024] = {
"Soggy Shiprat",
"Freehold",
},
[127019] = {
"Training Dummy",
"Freehold",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[163503] = {
"Etherdiver",
"Spires of Ascension",
},
[157109] = {
"Vampire Bat",
"Torghast, Tower of the Damned",
},
[416] = {
"Quzjub",
"Deepwind Gorge",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
},
[156237] = {
"Imperator Dara",
"Torghast, Tower of the Damned",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[136297] = {
"Forgotten Denizen",
"Shrine of the Storm",
},
[417] = {
"Maanhym",
"Silvershard Mines",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
},
[13328] = {
"Seasoned Guardian",
"Alterac Valley",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[152656] = {
"Deadsoul Stalker",
"Torghast, Tower of the Damned",
},
[168108] = {
"Empowered Lumbering Creation",
"Torghast, Tower of the Damned",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[136160] = {
"King Dazar",
"Kings' Rest",
},
[168107] = {
"Empowered Mawsworn Interceptor",
"Torghast, Tower of the Damned",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
},
[152508] = {
"Dusky Tremorbeast",
"Torghast, Tower of the Damned",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
},
[163506] = {
"Forsworn Stealthclaw",
"Spires of Ascension",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
},
[168110] = {
"Empowered Imperial Duelist",
"Torghast, Tower of the Damned",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
},
[157003] = {
"Imperial Duelist",
"Torghast, Tower of the Damned",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
},
[134991] = {
"Sandfury Stonefist",
"Temple of Sethraliss",
},
[173613] = {
"Nathrian Registrar",
"Castle Nathria",
},
[10467] = {
"Mana Tide Totem",
"Alterac Valley",
},
[172205] = {
"Bone Thrall",
"Maldraxxus Covenant Finale Scenario",
},
[138063] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
},
[132051] = {
"Blood Tick",
"The Underrot",
},
[163892] = {
"Rotting Slimeclaw",
"Plaguefall",
},
[171181] = {
"Territorial Bladebeak",
"De Other Side",
},
[135903] = {
"Manifestation of the Deep",
"Shrine of the Storm",
},
[170414] = {
"Howling Spectre",
"Torghast, Tower of the Damned",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[134993] = {
"Mchimba the Embalmer",
"Kings' Rest",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[138064] = {
"Posh Vacationer",
"The MOTHERLODE!!",
},
[168113] = {
"General Grashaal",
"Castle Nathria",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[173484] = {
"Conjured Manifestation",
"Castle Nathria",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
},
[173114] = {
"Invasive Decayfly",
"Torghast, Tower of the Damned",
},
[61945] = {
"Gurthan Iron Maw",
"Mogu'shan Palace",
},
[170927] = {
"Erupting Ooze",
"Plaguefall",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
},
[169265] = {
"Creepy Crawler",
"Plaguefall",
},
[172858] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[134739] = {
"Purification Construct",
"Kings' Rest",
},
[134612] = {
"Grasping Tentacles",
"Shrine of the Storm",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[170417] = {
"Animated Stygia",
"Torghast, Tower of the Damned",
},
[164407] = {
"Sludgefist",
"Castle Nathria",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[153165] = {
"Custodian Thonar",
"Torghast, Tower of the Damned",
},
[60447] = {
"Krik'thik Saboteur",
"Gate of the Setting Sun",
},
[167806] = {
"Animated Sin",
"Halls of Atonement",
},
[5913] = {
"Tremor Totem",
"Alterac Valley",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[170418] = {
"Goxul the Devourer",
"Torghast, Tower of the Damned",
},
[135764] = {
"Explosive Totem",
"Kings' Rest",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[162329] = {
"Xav the Unfallen",
"Theater of Pain",
},
[132056] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
},
[133463] = {
"Venture Co. War Machine",
"The MOTHERLODE!!",
},
[170419] = {
"Lost Dredger",
"Torghast, Tower of the Damned",
},
[135765] = {
"Torrent Totem",
"Kings' Rest",
},
[99541] = {
"Risen Skulker",
"Deepwind Gorge",
},
[61946] = {
"Harthak Stormcaller",
"Mogu'shan Palace",
},
[67235] = {
"Shadowfiend",
"Twin Peaks",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[11946] = {
"Drek'Thar",
"Alterac Valley",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[137940] = {
"Safety Shark",
"The MOTHERLODE!!",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[156219] = {
"Coldheart Scout",
"Torghast, Tower of the Damned",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
},
[134616] = {
"Krolusk Pup",
"Temple of Sethraliss",
},
[139097] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[61245] = {
"Capacitor Totem",
"Twin Peaks",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[134617] = {
"Krolusk Hatchling",
"Temple of Sethraliss",
},
[100943] = {
"Earthen Wall Totem",
"Temple of Kotmogu",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[13153] = {
"Commander Mulfort",
"Alterac Valley",
},
[12122] = {
"Duros",
"Alterac Valley",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[169912] = {
"Enraged Mask",
"De Other Side",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[167610] = {
"Stonefiend Anklebiter",
"Halls of Atonement",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[167994] = {
"Ossified Conscript",
"Theater of Pain",
},
[164218] = {
"Lord Chamberlain",
"Halls of Atonement",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[167611] = {
"Stoneborn Eviscerator",
"Halls of Atonement",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
},
[135258] = {
"Irontide Marauder",
"Siege of Boralus",
},
[174773] = {
"Spiteful Shade",
"Halls of Atonement",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[168891] = {
"Rigged Plagueborer",
"Plaguefall",
},
[174134] = {
"Lord Evershade",
"Castle Nathria",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
},
[84190] = {
"Boneshallow Spider",
"Ashran",
},
[78116] = {
"Water Elemental",
"Temple of Kotmogu",
},
[167485] = {
"Starving Mawrat",
"Torghast, Tower of the Damned",
},
[150222] = {
"Gunker",
"Operation: Mechagon",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
},
[173360] = {
"Plaguebelcher",
"Plaguefall",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[10364] = {
"Yaelika Farclaw",
"Alterac Valley",
},
[61338] = {
"Glintrok Skulker",
"Mogu'shan Palace",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[5925] = {
"Grounding Totem",
"Alterac Valley",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
},
[164406] = {
"Shriekwing",
"Castle Nathria",
},
[155211] = {
"Gormling Pest",
"Torghast, Tower of the Damned",
},
[167615] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[167999] = {
"Echo of Sin",
"Castle Nathria",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[157002] = {
"Imperial Enforcer",
"Torghast, Tower of the Damned",
},
[134994] = {
"Spectral Headhunter",
"Kings' Rest",
},
[95061] = {
"Greater Fire Elemental",
"Deepwind Gorge",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[105419] = {
"Dire Basilisk",
"Twin Peaks",
},
[168112] = {
"General Kaal",
"Castle Nathria",
},
[135761] = {
"Thundering Totem",
"Kings' Rest",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
},
[29264] = {
"Spirit Raptor",
"Temple of Kotmogu",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[173609] = {
"Nathrian Conservator",
"Castle Nathria",
},
[13448] = {
"Sergeant Yazra Bloodsnarl",
"Alterac Valley",
},
[152253] = {
"The Tarragrue",
"Torghast, Tower of the Damned",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
},
[168001] = {
"Empowered Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[165060] = {
"Animimic",
"Torghast, Tower of the Damned",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
},
[137474] = {
"King Timalji",
"Kings' Rest",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[173756] = {
"Timojin",
"Alterac Valley",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[153552] = {
"Weeping Wraith",
"Torghast, Tower of the Damned",
},
[168002] = {
"Empowered Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[165189] = {
"Wolf",
"Twin Peaks",
},
[14776] = {
"Tower Point Warmaster",
"Alterac Valley",
},
[155215] = {
"Faeleaf Lasher",
"Torghast, Tower of the Damned",
},
[164550] = {
"Slithering Ooze",
"Plaguefall",
},
[173604] = {
"Sinister Antiquarian",
"Castle Nathria",
},
[155828] = {
"Runecarved Colossus",
"Torghast, Tower of the Damned",
},
[168003] = {
"Empowered Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[155216] = {
"Faeleaf Warden",
"Torghast, Tower of the Damned",
},
[1860] = {
"Graz'krast",
"Shrine of the Storm",
},
[168104] = {
"Empowered Flameforge Master",
"Torghast, Tower of the Damned",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
},
[1863] = {
"Nazlissa",
"Silvershard Mines",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[163145] = {
"Necromancer Ritualist",
"Maldraxxus Covenant Finale Scenario",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[129526] = {
"Bilge Rat Swabby",
"Freehold",
},
[168005] = {
"Empowered Deadsoul Shambler",
"Torghast, Tower of the Damned",
},
[63508] = {
"Xuen",
"Twin Peaks",
},
[138048] = {
"Training Dummy",
"Waycrest Manor",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
},
[156241] = {
"Monstrous Guardian",
"Torghast, Tower of the Damned",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
},
[126969] = {
"Trothak",
"Freehold",
},
[152661] = {
"Mawsworn Ward",
"Torghast, Tower of the Damned",
},
[11947] = {
"Captain Galvangar",
"Alterac Valley",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[132713] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[167966] = {
"Experimental Sludge",
"De Other Side",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
},
[165066] = {
"Huntsman Altimor",
"Castle Nathria",
},
[150958] = {
"Mawsworn Guard",
"Torghast, Tower of the Damned",
},
[106041] = {
"Zombie",
"Alterac Valley",
},
[151128] = {
"Lord of Locks",
"Torghast, Tower of the Damned",
},
[164555] = {
"Millificent Manastorm",
"De Other Side",
},
[12051] = {
"Frostwolf Legionnaire",
"Alterac Valley",
},
[141282] = {
"Kul Tiran Footman",
"Siege of Boralus",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[171333] = {
"Atal'ai Devoted",
"De Other Side",
},
[157094] = {
"Imperial Curator",
"Torghast, Tower of the Damned",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[164556] = {
"Millhouse Manastorm",
"De Other Side",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[154663] = {
"Gnome-Eating Droplet",
"Operation: Mechagon",
},
[14185] = {
"Najak Hexxen",
"Alterac Valley",
},
[136552] = {
"Kao-Tien Marauder",
"Atal'Dazar",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[139110] = {
"Spark Channeler",
"Temple of Sethraliss",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[103673] = {
"Darkglare",
"Temple of Kotmogu",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[168394] = {
"Slimy Morsel",
"Plaguefall",
},
[59764] = {
"Healing Tide Totem",
"Alterac Valley",
},
[164558] = {
"Hakkar the Soulflayer",
"De Other Side",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[135562] = {
"Venomous Ophidian",
"Temple of Sethraliss",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[141565] = {
"Kul Tiran Footman",
"Siege of Boralus",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[168907] = {
"Slime Tentacle",
"Plaguefall",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
},
[133663] = {
"Fanatical Headhunter",
"The Underrot",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[130489] = {
"Dazarian Stalker",
"Freehold",
},
[107024] = {
"Fel Lord",
"Temple of Kotmogu",
},
[165905] = {
"Son of Hakkar",
"De Other Side",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
},
[154011] = {
"Armed Prisoner",
"Torghast, Tower of the Damned",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
},
[89] = {
"Infernal",
"Twin Peaks",
},
[101398] = {
"Psyfiend",
"Temple of Kotmogu",
},
[84102] = {
"Cadaverous Vulture",
"Ashran",
},
[135406] = {
"Animated Gold",
"Kings' Rest",
},
[139626] = {
"Dredged Sailor",
"Shrine of the Storm",
},
[168398] = {
"Slimy Morsel",
"Plaguefall",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[134828] = {
"Aqualing",
"Shrine of the Storm",
},
[56884] = {
"Taran Zhu",
"Shado-Pan Monastery",
},
[173444] = {
"Caramain",
"Castle Nathria",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
},
[174338] = {
"Stinky Feedhauler",
"Castle Nathria",
},
[31216] = {
"Lashtron",
"Twin Peaks",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[105427] = {
"Skyfury Totem",
"Deepwind Gorge",
},
[144286] = {
"Asset Manager",
"The MOTHERLODE!!",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[162060] = {
"Oryphrion",
"Spires of Ascension",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
},
[157584] = {
"Flameforge Master",
"Torghast, Tower of the Damned",
},
[167532] = {
"Heavin the Breaker",
"Theater of Pain",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[144232] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[56678] = {
"Jade Staff",
"Shado-Pan Monastery",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[159755] = {
"The Grand Malleare",
"Torghast, Tower of the Damned",
},
[126847] = {
"Captain Raoul",
"Freehold",
},
[154128] = {
"Blazing Elemental",
"Torghast, Tower of the Damned",
},
[17252] = {
"Izikzugul",
"Temple of Kotmogu",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[12053] = {
"Frostwolf Guardian",
"Alterac Valley",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[147431] = {
"Virmen Thumper",
"Cooking: Impossible",
},
[62982] = {
"Mindbender",
"Twin Peaks",
},
[164862] = {
"Weald Shimmermoth",
"De Other Side",
},
[163457] = {
"Forsworn Vanguard",
"Spires of Ascension",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
},
[137485] = {
"Bloodsworn Agent",
"Kings' Rest",
},
[137969] = {
"Interment Construct",
"Kings' Rest",
},
[134005] = {
"Shalebiter",
"The MOTHERLODE!!",
},
[167892] = {
"Tormented Soul",
"Halls of Atonement",
},
[77936] = {
"Greater Storm Elemental",
"Alterac Valley",
},
[163326] = {
"Skeletal Defender",
"Maldraxxus Covenant Finale Scenario",
},
[129214] = {
"Coin-Operated Crowd Pummeler",
"The MOTHERLODE!!",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
},
[81087] = {
"Gor'vosh Necromancer",
"Ashran",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
},
[129598] = {
"Freehold Pack Mule",
"Freehold",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[171474] = {
"Finger Food",
"Plaguefall",
},
[95072] = {
"Greater Earth Elemental",
"Deepwind Gorge",
},
[55659] = {
"Wild Imp",
"Temple of Kotmogu",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[137204] = {
"Hoodoo Hexer",
"Temple of Sethraliss",
},
[168022] = {
"Slime Tentacle",
"Plaguefall",
},
[169173] = {
"Meatball's Tormentor",
"Torghast, Tower of the Damned",
},
[156022] = {
"Bubbling Soulmass",
"Torghast, Tower of the Damned",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[169196] = {
"Crimson Cabalist",
"Castle Nathria",
},
[169457] = {
"Bargast",
"Castle Nathria",
},
[10981] = {
"Frost Wolf",
"Alterac Valley",
},
[170197] = {
"Conjured Manifestation",
"Castle Nathria",
},
[173293] = {
"Lady Audat",
"Torghast, Tower of the Damned",
},
[138740] = {
"Musashitake",
"The Underrot",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[165594] = {
"Coldheart Ambusher",
"Torghast, Tower of the Damned",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[174162] = {
"Countess Gloomveil",
"Castle Nathria",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[173140] = {
"Soldier of the Frozen Wastes",
"Maldraxxus Covenant Finale Scenario",
},
[165339] = {
"Empowered Baroness Ninadar",
"Maldraxxus Covenant Finale Scenario",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[170838] = {
"Unyielding Contender",
"Theater of Pain",
},
[129802] = {
"Earthrager",
"The MOTHERLODE!!",
},
[170071] = {
"Mawsworn Shadestalker",
"Torghast, Tower of the Damned",
},
[170199] = {
"Harnessed Specter",
"Castle Nathria",
},
[137591] = {
"Healing Tide Totem",
"Kings' Rest",
},
[13179] = {
"Wing Commander Guse",
"Alterac Valley",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[125828] = {
"Zetapally",
"Atal'Dazar",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
},
["aura_frame1_anchor"] = {
["y"] = 13.7,
["side"] = 1,
},
["aura_grow_direction"] = 3,
["captured_spells"] = {
[23978] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[25771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bylightburn",
["npcID"] = 0,
},
[6673] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hérós",
["npcID"] = 0,
},
[2580] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hólý-Barthilas",
["npcID"] = 0,
},
[20707] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lockycharm",
["npcID"] = 0,
},
[288074] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rustysaw",
["npcID"] = 0,
},
[65081] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Khanfewshun-Mal'Ganis",
["npcID"] = 0,
},
[195072] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dechu",
["npcID"] = 0,
},
[253595] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Omgfarmed",
["npcID"] = 0,
},
[311474] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alasko",
["npcID"] = 0,
},
[1490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bartholimu-Stormrage",
["npcID"] = 0,
},
[186403] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surin-Saurfang",
["npcID"] = 0,
},
[556] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bixel",
["npcID"] = 0,
},
[331939] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistajeeves-Khaz'goroth",
["npcID"] = 0,
},
[228128] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cambro",
["npcID"] = 0,
},
[102383] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shiftyfakk",
["npcID"] = 0,
},
[258920] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sâuce-Sargeras",
["npcID"] = 0,
},
[333089] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alasko",
["npcID"] = 0,
},
[77489] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jarritø",
["npcID"] = 0,
},
[781] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Druz-Archimonde",
["npcID"] = 0,
},
[339848] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[324867] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Omgfarmed",
["npcID"] = 0,
},
[2983] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ratlips-Stormrage",
["npcID"] = 0,
},
[48778] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plasmosis",
["npcID"] = 0,
},
[311481] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Oberynmartex",
["npcID"] = 0,
},
[317920] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nasowavey",
["npcID"] = 0,
},
[264689] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Valystana",
["npcID"] = 0,
},
[310143] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[335452] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hylo-Tichondrius",
["npcID"] = 0,
},
[783] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Intangibles",
["npcID"] = 0,
},
[311483] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fredsknight",
["npcID"] = 0,
},
[190456] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nováxblader",
["npcID"] = 0,
},
[332777] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[102417] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Intangibles",
["npcID"] = 0,
},
[311486] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hólý-Barthilas",
["npcID"] = 0,
},
[196099] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fonziedot",
["npcID"] = 0,
},
[311487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Retrimuution",
["npcID"] = 0,
},
[32223] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Olsor-Zul'jin",
["npcID"] = 0,
},
[343173] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Itzdaddy",
["npcID"] = 0,
},
[228358] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mistajeeves-Khaz'goroth",
["npcID"] = 0,
},
[22812] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gottapayrent",
["npcID"] = 0,
},
[52174] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azmurogg",
["npcID"] = 0,
},
[5487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Roglington",
["npcID"] = 0,
},
[311492] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kitsusenshi",
["npcID"] = 0,
},
[203720] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glaivhes",
["npcID"] = 0,
},
[248473] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Khanfewshun-Mal'Ganis",
["npcID"] = 0,
},
[308434] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ryúx",
["npcID"] = 0,
},
[227723] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Telelivas",
["npcID"] = 0,
},
[270058] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Farender",
["npcID"] = 0,
},
[131493] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fløat",
["npcID"] = 0,
},
[311496] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bestindabiz",
["npcID"] = 0,
},
[5761] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nurf",
["npcID"] = 0,
},
[281216] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Caronachan",
["npcID"] = 0,
},
[334320] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Meglock",
["npcID"] = 0,
},
[45242] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ërmec-Nemesis",
["npcID"] = 0,
},
[6788] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Khanfewshun-Mal'Ganis",
["npcID"] = 0,
},
[324631] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Omgfarmed",
["npcID"] = 0,
},
[203277] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pistolita-Sargeras",
["npcID"] = 0,
},
[72968] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ryúx",
["npcID"] = 0,
},
[330943] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nasowavey",
["npcID"] = 0,
},
[232698] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Onorah",
["npcID"] = 0,
},
[78674] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kallifleur-Madoran",
["npcID"] = 0,
},
[307166] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Glaivhes",
["npcID"] = 0,
},
[300728] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Audinon",
["npcID"] = 0,
},
[344907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shiròe",
["npcID"] = 0,
},
[108366] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fonziedot",
["npcID"] = 0,
},
[154797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lailasia",
["npcID"] = 0,
},
[329289] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rustysaw",
["npcID"] = 0,
},
[345673] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bigmoosey",
["npcID"] = 0,
},
[167898] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rozzlynn",
["npcID"] = 0,
},
[108446] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[341530] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Itzdaddy",
["npcID"] = 0,
},
[315584] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nurf",
["npcID"] = 0,
},
[345228] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xpliçit",
["npcID"] = 0,
},
[30455] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistajeeves-Khaz'goroth",
["npcID"] = 0,
},
[345230] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nováxblader",
["npcID"] = 0,
},
[345545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Strykah",
["npcID"] = 0,
},
[242551] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultraterra",
["npcID"] = 0,
},
[1459] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Telelivas",
["npcID"] = 0,
},
[21562] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Beautywithin",
["npcID"] = 0,
},
[328210] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Omgfarmed",
["npcID"] = 0,
},
[332514] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Patrickyong",
["npcID"] = 0,
},
[280398] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Emiisa",
["npcID"] = 0,
},
[202164] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Azmurogg",
["npcID"] = 0,
},
[61295] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Silverheal-Quel'Thalas",
["npcID"] = 0,
},
[203819] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Glaivhes",
["npcID"] = 0,
},
[8690] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Minimym",
["npcID"] = 0,
},
[87024] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cambro",
["npcID"] = 0,
},
[93402] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pitufon-Archimonde",
["npcID"] = 0,
},
[308488] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Intangibles",
["npcID"] = 0,
},
[44614] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistajeeves-Khaz'goroth",
["npcID"] = 0,
},
[308514] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistymonkey",
["npcID"] = 0,
},
[260881] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoansage",
["npcID"] = 0,
},
[343594] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gottapayrent",
["npcID"] = 0,
},
[327066] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gudao-Tichondrius",
["npcID"] = 0,
},
[340556] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lazzerchiken",
["npcID"] = 0,
},
[33697] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xpliçit",
["npcID"] = 0,
},
[309627] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackthórn",
["npcID"] = 0,
},
[209746] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kallifleur-Madoran",
["npcID"] = 0,
},
[8679] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surin-Saurfang",
["npcID"] = 0,
},
[32216] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Onjah",
["npcID"] = 0,
},
[3408] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surin-Saurfang",
["npcID"] = 0,
},
[2383] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoansage",
["npcID"] = 0,
},
[1784] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Itzdaddy",
["npcID"] = 0,
},
[330511] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nasowavey",
["npcID"] = 0,
},
[289277] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Moûntâindew",
["npcID"] = 0,
},
[198121] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mistajeeves-Khaz'goroth",
["npcID"] = 0,
},
[6343] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bigmoosey",
["npcID"] = 0,
},
[176151] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ravengoddess",
["npcID"] = 0,
},
[292361] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Criohs",
["npcID"] = 0,
},
[127797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kallifleur-Madoran",
["npcID"] = 0,
},
[2645] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoansage",
["npcID"] = 0,
},
[1850] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rëdnëck",
["npcID"] = 0,
},
[5225] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alokie",
["npcID"] = 0,
},
[338036] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoansage",
["npcID"] = 0,
},
[768] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alokie",
["npcID"] = 0,
},
[8936] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lazzerchiken",
["npcID"] = 0,
},
[157131] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Milkymilky-Darkspear",
["npcID"] = 0,
},
[43308] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rozzlynn",
["npcID"] = 0,
},
[347600] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hérós",
["npcID"] = 0,
},
[465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hólý-Barthilas",
["npcID"] = 0,
},
[53390] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Silverheal-Quel'Thalas",
["npcID"] = 0,
},
[165961] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Intangibles",
["npcID"] = 0,
},
[321527] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Itzdaddy",
["npcID"] = 0,
},
[157228] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pitufon-Archimonde",
["npcID"] = 0,
},
[338617] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bestindabiz",
["npcID"] = 0,
},
[338804] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dechu",
["npcID"] = 0,
},
[164273] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skkrrtx",
["npcID"] = 0,
},
[198793] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Audinon",
["npcID"] = 0,
},
[45181] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Surin-Saurfang",
["npcID"] = 0,
},
[307185] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skkrrtx",
["npcID"] = 0,
},
[207400] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Silverheal-Quel'Thalas",
["npcID"] = 0,
},
[57724] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bixel",
["npcID"] = 0,
},
[162488] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skkrrtx",
["npcID"] = 0,
},
[164815] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kallifleur-Madoran",
["npcID"] = 0,
},
[236502] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surama",
["npcID"] = 0,
},
[17] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Khanfewshun-Mal'Ganis",
["npcID"] = 0,
},
[307187] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Adrenaline",
["npcID"] = 0,
},
[24858] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gottapayrent",
["npcID"] = 0,
},
[325101] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Steward",
["npcID"] = 166663,
},
[131347] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dechu",
["npcID"] = 0,
},
[102793] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kallifleur-Madoran",
["npcID"] = 0,
},
[204596] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glaivhes",
["npcID"] = 0,
},
[298837] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stizzy",
["npcID"] = 0,
},
[323524] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bigmoosey",
["npcID"] = 0,
},
[118922] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Druz-Archimonde",
["npcID"] = 0,
},
[192106] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bixel",
["npcID"] = 0,
},
[156621] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[205636] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pitufon-Archimonde",
["npcID"] = 0,
},
[31661] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sinsemilla-Sargeras",
["npcID"] = 0,
},
[69826] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bylightburn",
["npcID"] = 0,
},
[156064] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shaeri",
["npcID"] = 0,
},
[327704] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cathagad",
["npcID"] = 0,
},
[8921] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kallifleur-Madoran",
["npcID"] = 0,
},
[57723] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shiftyfakk",
["npcID"] = 0,
},
[340094] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Itzdaddy",
["npcID"] = 0,
},
[312372] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Moûntâindew",
["npcID"] = 0,
},
[80354] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Skkrrtx",
["npcID"] = 0,
},
[235313] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kaisén",
["npcID"] = 0,
},
[2823] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Strykah",
["npcID"] = 0,
},
[336135] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fonziedot",
["npcID"] = 0,
},
[311464] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Taréonz",
["npcID"] = 0,
},
[292360] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Celestialann",
["npcID"] = 0,
},
[341682] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Beautywithin",
["npcID"] = 0,
},
[245686] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Scottrr",
["npcID"] = 0,
},
[311465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pistolita-Sargeras",
["npcID"] = 0,
},
[311467] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stitçhès",
["npcID"] = 0,
},
[324088] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dechu",
["npcID"] = 0,
},
[308506] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sebasnano",
["npcID"] = 0,
},
[193475] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Retrimuution",
["npcID"] = 0,
},
[228354] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mistajeeves-Khaz'goroth",
["npcID"] = 0,
},
},
["aura_consolidate"] = true,
["cast_statusbar_color"] = {
nil,
0.85882352941176,
nil,
0.96000000089407,
},
["cast_statusbar_spark_offset"] = -13,
["npc_colors"] = {
[131670] = {
true,
false,
"palegreen",
},
[129602] = {
true,
false,
"navajowhite",
},
[134284] = {
true,
false,
"lightskyblue",
},
[133870] = {
true,
false,
"lightcoral",
},
[134157] = {
true,
false,
"peru",
},
[136006] = {
false,
false,
"blue",
},
[132532] = {
true,
false,
"palegreen",
},
[144071] = {
true,
false,
"lightskyblue",
},
[134158] = {
true,
false,
"navajowhite",
},
[136549] = {
true,
false,
"lightcoral",
},
[134701] = {
true,
false,
"maroon",
},
[136295] = {
true,
false,
"peru",
},
[136934] = {
true,
false,
"navajowhite",
},
[134990] = {
true,
false,
"honeydew",
},
[128967] = {
true,
false,
"palegreen",
},
[138465] = {
true,
false,
"lightcoral",
},
[134417] = {
true,
false,
"lightskyblue",
},
[129366] = {
true,
false,
"goldenrod",
},
[139422] = {
true,
false,
"lightskyblue",
},
[136139] = {
true,
false,
"peru",
},
[137478] = {
true,
false,
"lightskyblue",
},
[133685] = {
true,
false,
"plum",
},
[131677] = {
true,
false,
"lightskyblue",
},
[134514] = {
true,
false,
"lightgreen",
},
[136076] = {
true,
false,
"lightcoral",
},
[127757] = {
true,
false,
"lightcoral",
},
[137511] = {
true,
false,
"navajowhite",
},
[137830] = {
true,
false,
"navajowhite",
},
[129367] = {
true,
false,
"honeydew",
},
[130435] = {
false,
false,
"magenta",
},
[133432] = {
true,
false,
"lightskyblue",
},
[128969] = {
true,
false,
"goldenrod",
},
[139425] = {
false,
false,
"honeydew",
},
[132126] = {
true,
false,
"honeydew",
},
[130404] = {
true,
false,
"peru",
},
[133593] = {
true,
false,
"honeydew",
},
[131585] = {
true,
false,
"navajowhite",
},
[133912] = {
true,
false,
"dodgerblue",
},
[135474] = {
true,
false,
"dodgerblue",
},
[131586] = {
true,
false,
"peru",
},
[134232] = {
true,
false,
"goldenrod",
},
[129369] = {
true,
false,
"lightsalmon",
},
[127106] = {
true,
false,
"peru",
},
[131587] = {
true,
false,
"peru",
},
[137484] = {
true,
false,
"lightskyblue",
},
[137516] = {
true,
false,
"lightsalmon",
},
[130485] = {
true,
false,
"peru",
},
[131492] = {
true,
false,
"lightskyblue",
},
[129529] = {
true,
false,
"goldenrod",
},
[137517] = {
true,
false,
"peru",
},
[137103] = {
true,
false,
"lightsalmon",
},
[130661] = {
true,
false,
"lightgreen",
},
[138187] = {
true,
false,
"paleturquoise",
},
[134139] = {
true,
false,
"lightskyblue",
},
[137486] = {
true,
false,
"lightskyblue",
},
[131685] = {
true,
false,
"lightskyblue",
},
[129227] = {
false,
false,
"maroon",
},
[134331] = {
true,
false,
"lightskyblue",
},
[138061] = {
false,
false,
"magenta",
},
[127315] = {
true,
false,
"plum",
},
[134364] = {
true,
false,
"honeydew",
},
[133345] = {
true,
false,
"goldenrod",
},
[129547] = {
true,
false,
"olivedrab",
},
[134174] = {
true,
false,
"honeydew",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[138063] = {
false,
false,
"blue",
},
[141283] = {
true,
false,
"navajowhite",
},
[136470] = {
true,
false,
"honeydew",
},
[138064] = {
false,
false,
"blue",
},
[131817] = {
false,
false,
"magenta",
},
[141284] = {
true,
false,
"lightskyblue",
},
[131818] = {
false,
false,
"plum",
},
[141285] = {
true,
false,
"lightgreen",
},
[136249] = {
true,
false,
"plum",
},
[131436] = {
true,
false,
"navajowhite",
},
[129788] = {
true,
false,
"honeydew",
},
[136186] = {
true,
false,
"honeydew",
},
[135007] = {
true,
false,
"lightskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[127111] = {
true,
false,
"lightskyblue",
},
[135167] = {
true,
false,
"peru",
},
[128434] = {
true,
false,
"palegreen",
},
[135263] = {
true,
false,
"maroon",
},
[139949] = {
true,
false,
"honeydew",
},
[122984] = {
true,
false,
"peru",
},
[128435] = {
false,
false,
"aqua",
},
[135329] = {
true,
false,
"plum",
},
[134150] = {
true,
false,
"navajowhite",
},
[122969] = {
true,
false,
"honeydew",
},
[134629] = {
true,
false,
"navajowhite",
},
[122973] = {
true,
false,
"lightskyblue",
},
[130436] = {
false,
false,
"aqua",
},
[135235] = {
true,
false,
"goldenrod",
},
[133482] = {
true,
false,
"maroon",
},
[125977] = {
true,
false,
"plum",
},
[134144] = {
true,
false,
"lightgreen",
},
[134012] = {
true,
false,
"lightsalmon",
},
[129559] = {
true,
false,
"navajowhite",
},
[132491] = {
true,
false,
"palegreen",
},
[135204] = {
true,
false,
"honeydew",
},
[131666] = {
true,
false,
"honeydew",
},
[129600] = {
true,
false,
"lightskyblue",
},
[129370] = {
true,
false,
"lightskyblue",
},
[134137] = {
true,
false,
"dodgerblue",
},
[134599] = {
true,
false,
"lightskyblue",
},
[137716] = {
false,
false,
"blue",
},
[131858] = {
true,
false,
"dodgerblue",
},
[126919] = {
true,
false,
"dodgerblue",
},
[137713] = {
true,
false,
"paleturquoise",
},
[135365] = {
true,
false,
"plum",
},
[133835] = {
true,
false,
"goldenrod",
},
[136353] = {
true,
false,
"royalblue",
},
[134600] = {
true,
false,
"peru",
},
[126918] = {
true,
false,
"lightskyblue",
},
[138255] = {
true,
false,
"maroon",
},
[135258] = {
false,
false,
"peru",
},
[136214] = {
true,
false,
"plum",
},
[122971] = {
false,
false,
"magenta",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[133852] = {
true,
false,
"olivedrab",
},
[133436] = {
true,
false,
"lightskyblue",
},
[130488] = {
true,
false,
"lightsalmon",
},
[126928] = {
false,
false,
"navajowhite",
},
[122972] = {
true,
false,
"lightsalmon",
},
[135239] = {
true,
false,
"paleturquoise",
},
[134251] = {
true,
false,
"honeydew",
},
[134418] = {
true,
false,
"dodgerblue",
},
[135241] = {
true,
false,
"peru",
},
[136005] = {
false,
false,
"blue",
},
},
["aura_timer_text_font"] = "Accidental Presidency",
["aura_alpha"] = 0.84999996423721,
["minor_height_scale"] = 0.99999994039536,
["use_ui_parent"] = true,
["not_affecting_combat_alpha"] = 0.799999,
["color_override_colors"] = {
[3] = {
nil,
0.2784313,
0.2078431,
},
[4] = {
1,
0.83921568627451,
0,
},
[5] = {
0.29019607843137,
1,
0.19607843137255,
},
},
["ui_parent_scale_tune"] = 1.406249965948519,
["cast_statusbar_bgtexture"] = "PlaterBackground",
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["aura_height"] = 14,
["cast_statusbar_spark_half"] = true,
["aura_padding"] = 2,
["target_highlight_alpha"] = 1,
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 274,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the color if a unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Attacking Specific Unit [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825291,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 95,
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1553450458,
["Icon"] = 1990989,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 185,
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1551825362,
["Icon"] = 1966587,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["role"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Current Target Color [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "",
["Time"] = 1552354619,
["Icon"] = 878211,
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1603567332,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 254,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Name"] = "Combo Points [Plater]",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 192,
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled and unitFrame.ActorType == \"enemyplayer\") then\n        \n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n        \n    else\n        envTable.BorderFrame:Hide() \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled and unitFrame.ActorType == \"enemyplayer\") then\n        \n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n        \n    else\n        envTable.BorderFrame:Hide() \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Name"] = "Extra Border [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825335,
["Icon"] = 133689,
["PlaterCore"] = 1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 107,
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["Name"] = "Color Automation [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["role"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825317,
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 139,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = true\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --second execute range (UseCustomExecutePercent must be enabled)\n    envTable.SecondRangeStart = 0.999\n    envTable.SecondRangeEnd = 0.8\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame, divisorPercent)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n        \n        if (percent <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.ExecutePercent)\n            envTable.InExecuteRange = true\n            \n        elseif (percent < envTable.SecondRangeStart and percent >= envTable.SecondRangeEnd) then\n            envTable.UnitInExecuteRange (unitFrame, envTable.SecondRangeEnd)\n            envTable.InExecuteRange = true\n            \n        else\n            if (envTable.InExecuteRange) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                Plater.RefreshNameplateColor (unitFrame)\n                Plater.SetBorderColor (unitFrame)\n                envTable.InExecuteRange = false\n            end\n        end\n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Advanced Execute Range",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1551825289,
["Icon"] = 135358,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 236,
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Script for the Jaina encounter on Battle for Dazzar'alor",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Unexploded Ordinance\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.UnexplodedOrdinance) then\n        \n        --make the life percent be bigger than the regular size\n        --so it's better to see the health percent of the barrel\n        local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n        Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize + envTable.UnexplodedOrdinanceTextSizeIncrease)\n    end\n    \n    if (envTable.IncreaseSize [unitFrame.namePlateNpcId]) then\n        local currentHeight = unitFrame.healthBar:GetHeight()\n        Plater.SetNameplateSize (unitFrame, nil, currentHeight + envTable.IncreaseSize [unitFrame.namePlateNpcId])\n    end\n    \nend\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame, nil, envTable.UnexplodedOrdinanceCastBarHeight)\n        Plater:SetFontSize (unitFrame.castBar.percentText, envTable.UnexplodedOrdinanceTimerSize)\n    end\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the health percent text size\n    local currentSize = Plater.db.profile.plate_config.enemynpc.percent_text_size\n    Plater:SetFontSize (unitFrame.healthBar.lifePercent, currentSize)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Override the color\n    if (envTable.Colors [unitFrame.namePlateNpcId]) then\n        Plater.SetNameplateColor (unitFrame, envTable.Colors [unitFrame.namePlateNpcId])\n    end    \n    \n    --Show the name of the unit in the Ice Block nameplate\n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.IceBlock) then\n        --find which player this block are holding\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i\n            if (UnitExists (unit)) then\n                for debuffId = 1, 40 do\n                    local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (unit, debuffId)\n                    \n                    --cancel the loop if there's no more debuffs on the player\n                    if (not name) then \n                        break \n                    end                    \n                    \n                    --check if who casted this debuff is the unit shown on this nameplate\n                    if (UnitIsUnit (caster or \"\", unitId)) then\n                        local unitName = UnitName (unit)\n                        \n                        --color the text by the class\n                        unitName = Plater.SetTextColorByClass (unit, unitName)\n                        \n                        --add the role icon\n                        if (Details) then\n                            local role = UnitGroupRolesAssigned (unit)\n                            unitName = Details:AddRoleIcon (unitName, role, 12)\n                        end\n                        \n                        unitFrame.unitName:SetText (unitName)\n                        unitFrame.castBar.Text:SetText (unitName)\n                        break\n                    end\n                    \n                end\n            else\n                break\n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors [148631] = \"orange\" --Unexploded Ordinance\n    envTable.Colors [148522] = \"white\" --Ice Block\n    \n    --increase the nameplate height for these units\n    envTable.IncreaseSize = {}\n    envTable.IncreaseSize [148522] = 4 --Ice Block (increase in 4 pixels)\n    \n    --increase the size of the life percent for the nameplate of the barrel\n    envTable.UnexplodedOrdinanceTextSizeIncrease = 3\n    \n    --increase the castbar size for the unexploded ordinance explosion cast\n    envTable.UnexplodedOrdinanceCast = true\n    envTable.UnexplodedOrdinanceSpellID = 288221 --12058 --(debug)\n    envTable.UnexplodedOrdinanceCastBarHeight = 18\n    envTable.UnexplodedOrdinanceTimerSize = 18\n    \n    --npcIDs\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.UnexplodedOrdinance = 148631\n    envTable.NpcIDs.IceBlock = 148522\nend\n\n--tests 126023 --harbor saurid - dazar'alor harbor\n--tests 3127 venomtail scorpid - durotar\n--tests 12058 dustwind storm witch - durotar\n--Load Condition: EncounterID 2281\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.UnexplodedOrdinanceCast and envTable._SpellID == envTable.UnexplodedOrdinanceSpellID) then\n        Plater.SetCastBarSize (unitFrame)\n        Plater:SetFontSize (unitFrame.castBar.percentText, Plater.db.profile.plate_config.enemynpc.spellpercent_text_size)\n    end\nend\n\n\n",
},
["Name"] = "Jaina Encounter [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
["1"] = 2281,
["Enabled"] = true,
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551894760,
["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_jaina",
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 81,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Script for Stormwall Blockade encounter on Battle for Dazzar'alor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.Colors.TemptingSiren) then\n            Plater.SetNameplateColor (unitFrame, envTable.Colors.TemptingSiren)\n        end\n        \n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateNpcId == envTable.NpcIDs.TemptingSiren) then\n        \n        if (envTable.NameplateHeight.TemptingSiren) then\n            \n            Plater.SetNameplateSize (unitFrame, nil, envTable.NameplateHeight.TemptingSiren)\n            \n        end\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --nameplate colors for unit\n    envTable.Colors = {}\n    envTable.Colors.TemptingSiren = \"orange\"\n    \n    --npcID\n    envTable.NpcIDs = {}\n    envTable.NpcIDs.TemptingSiren = 146436\n    \n    --nameplate height for each unit\n    envTable.NameplateHeight = {}\n    envTable.NameplateHeight.TemptingSiren = 18\n    \n    \n    \nend\n\n\n",
},
["Name"] = "Stormwall Encounter [Plater]",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1551887545,
["Icon"] = "Interface\\AddOns\\Plater\\images\\encounter_stormwall_blockade",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
["1"] = 2280,
["Enabled"] = true,
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 58,
["HooksTemp"] = {
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 3\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.UpdateBorder (unitFrame, unit)\n        local plateFrame = unitFrame:GetParent()\n        \n        if (UnitIsUnit (\"focus\", unit)) then\n            Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            local borderSize = envTable.BorderThickness\n            unitFrame.healthBar.border:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.border:UpdateSizes()        \n            \n        else\n            Plater.SetBorderColor (unitFrame)\n            Plater.UpdatePlateBorderThickness (unitFrame.PlateFrame)\n            unitFrame.healthBar.border:UpdateSizes()\n        end\n    end\nend\n\n\n\n",
},
["Author"] = "Herith�gue-Proudmoore",
["Desc"] = "Change the border of the focus target.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame, unitId)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.BorderThickness = 3\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.UpdateBorder (unitFrame, unit)\n        local plateFrame = unitFrame:GetParent()\n        \n        if (UnitIsUnit (\"focus\", unit)) then\n            Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            local borderSize = envTable.BorderThickness\n            unitFrame.healthBar.border:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.border:UpdateSizes()        \n            \n        else\n            Plater.SetBorderColor (unitFrame)\n            Plater.UpdatePlateBorderThickness (unitFrame.PlateFrame)\n            unitFrame.healthBar.border:UpdateSizes()\n        end\n    end\nend\n\n\n\n",
},
["Name"] = "Focus Target Border",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1552962607,
["Icon"] = 133006,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 47,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end    \n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Don't Have Aura [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["role"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825334,
["Icon"] = 136207,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 55,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Tint nameplates of Reaping Soul units (Mythic Dungeon Affix) depending on its target and role of the player",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --can detect the reaping souls aggro?\n    if (envTable.detectAggro and Plater.IsInCombat()) then\n        \n        --is this npc a reaping soul?\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            \n            --check if the mob is attacking the player\n            if (UnitIsUnit (unitFrame.targetUnitID, \"player\")) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateAggroColor)\n                \n            else\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateNoAggroColor)\n            end\n            \n        end\n        \n    end\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when the nameplate is added and the npcID matches, cache the color for the nameplate\n    if (envTable.detectAggro) then\n        if (envTable.npcIDs [unitFrame.namePlateNpcId]) then\n            local profile = Plater.db.profile\n            local role = Plater:GetPlayerRole()\n            \n            if (role == \"TANK\") then\n                envTable.NameplateAggroColor = profile.tank.colors.aggro\n                envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            else\n                envTable.NameplateAggroColor = profile.dps.colors.aggro\n                envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            end\n            \n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --npcs affected by this script\n    \n    envTable.npcIDs = {\n        [148716] = true, --risen soul\n        [148893] = true, --tormented soul\n        [148894] = true, --lost soul\n        \n        [127278] = true, --skittering feeder (tests and debug, also need to disable the load conditions)\n    }\n    \n    --detect aggro, if true it will see which group member the soul is attacking and override the color\n    envTable.detectAggro = true\n    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Name"] = "M+ Bwonsamdi Reaping",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["party"] = true,
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
["Enabled"] = true,
["117"] = true,
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["Time"] = 1579030189,
["Icon"] = 2446016,
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = false,
["Revision"] = 35,
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Show the name of the unit current target ",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateSpellNameText (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --max length of the text\n    envTable.TextMaxLength = 100\n    \n    --update the spell name text\n    function envTable.UpdateSpellNameText (unitFrame)\n        \n        local castBar = unitFrame.castBar\n        local textString = castBar.Text\n        local spellName = castBar.SpellName\n        \n        if (unitFrame.targetUnitID) then\n            local targetName = UnitName (unitFrame.targetUnitID)\n            \n            if (targetName) then\n                textString:SetText (spellName .. \" > \" .. targetName) \n                \n                if (envTable.TextMaxLength) then\n                    Plater.LimitTextSize (textString, envTable.TextMaxLength)\n                end\n                \n            else\n                textString:SetText (spellName)\n            end\n        else\n            textString:SetText (spellName)\n        end\n    end\nend",
},
["Name"] = "Cast Target",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1553450703,
["Icon"] = 413580,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 43,
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Zone Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckIfCanShowNameplate (unitFrame)\n        if (Plater.IsInCombat()) then\n            \n            if (not unitFrame.healthBar:IsShown()) then\n                Plater.ShowHealthBar (unitFrame)\n                Plater.EnableHighlight (unitFrame)\n            end\n            \n        else\n            \n            if (unitFrame.healthBar:IsShown()) then\n                Plater.HideHealthBar (unitFrame)\n                Plater.DisableHighlight (unitFrame)\n            end\n            \n        end        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Only show nameplates while in combat, see the constructor for more options.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Zone Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckIfCanShowNameplate (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckIfCanShowNameplate (unitFrame)\n        if (Plater.IsInCombat()) then\n            \n            if (not unitFrame.healthBar:IsShown()) then\n                Plater.ShowHealthBar (unitFrame)\n                Plater.EnableHighlight (unitFrame)\n            end\n            \n        else\n            \n            if (unitFrame.healthBar:IsShown()) then\n                Plater.HideHealthBar (unitFrame)\n                Plater.DisableHighlight (unitFrame)\n            end\n            \n        end        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Only in Combat",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825361,
["Icon"] = 135473,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 35,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local npcColor = Plater.GetNpcColor (unitFrame)\n    if (npcColor) then\n        unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n        unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)        \n        unitFrame.NpcColorCodeTexture:Show()\n        \n    else\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.IconTexture = [[Interface\\AddOns\\Plater\\media\\exclamation_64]]\n    envTable.Alpha = 0.8\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetTexture (envTable.IconTexture)\n        \n        --texture side | anchor to which frame | frame side | x offset | y offset\n        unitFrame.NpcColorCodeTexture:SetPoint (\"right\", unitFrame.healthBar, \"right\", -2, 0)\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an exclamation icon on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local npcColor = Plater.GetNpcColor (unitFrame)\n    if (npcColor) then\n        unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n        unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)        \n        unitFrame.NpcColorCodeTexture:Show()\n        \n    else\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.IconTexture = [[Interface\\AddOns\\Plater\\media\\exclamation_64]]\n    envTable.Alpha = 0.8\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetTexture (envTable.IconTexture)\n        \n        --texture side | anchor to which frame | frame side | x offset | y offset\n        unitFrame.NpcColorCodeTexture:SetPoint (\"right\", unitFrame.healthBar, \"right\", -2, 0)\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Npc Colors Icon",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1553450716,
["Icon"] = "Interface\\AddOns\\Plater\\media\\exclamation_64",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 68,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateColorTag (unitFrame)   \n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateTexture (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Alpha = 0.75\n    \n    envTable.Anchor = {\n        side = 11, --right side inside the nameplate\n        x = -3,\n        y = 0\n    }\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetColorTexture (1, 1, 1, 1)\n        \n    end\n    \n    function  envTable.UpdateColorTag (unitFrame)\n        local npcColor = Plater.GetNpcColor (unitFrame)\n        if (npcColor) then\n            unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n            unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)           \n            unitFrame.NpcColorCodeTexture:Show()        \n        end\n    end\n    \n    function  envTable.UpdateTexture (unitFrame)\n        Plater.SetAnchor (unitFrame.NpcColorCodeTexture, envTable.Anchor)\n        unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight() - 4, unitFrame.healthBar:GetHeight() - 4)\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n        envTable.UpdateColorTag (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Add a color tag on units with color set in the Npc Colors tab with the \"Only Script\" box selected.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateColorTag (unitFrame)   \n    \nend\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateTexture (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Alpha = 0.75\n    \n    envTable.Anchor = {\n        side = 11, --right side inside the nameplate\n        x = -3,\n        y = 0\n    }\n    \n    --private\n    if (not unitFrame.NpcColorCodeTexture) then\n        unitFrame.NpcColorCodeTexture = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        unitFrame.NpcColorCodeTexture:SetColorTexture (1, 1, 1, 1)\n        \n    end\n    \n    function  envTable.UpdateColorTag (unitFrame)\n        local npcColor = Plater.GetNpcColor (unitFrame)\n        if (npcColor) then\n            unitFrame.NpcColorCodeTexture:SetVertexColor (DetailsFramework:ParseColors (npcColor))\n            unitFrame.NpcColorCodeTexture:SetAlpha (envTable.Alpha)           \n            unitFrame.NpcColorCodeTexture:Show()        \n        end\n    end\n    \n    function  envTable.UpdateTexture (unitFrame)\n        Plater.SetAnchor (unitFrame.NpcColorCodeTexture, envTable.Anchor)\n        unitFrame.NpcColorCodeTexture:SetSize (unitFrame.healthBar:GetHeight() - 4, unitFrame.healthBar:GetHeight() - 4)\n        unitFrame.NpcColorCodeTexture:Hide()\n        \n        envTable.UpdateColorTag (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1553450705,
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Name"] = "Npc Colors Tag",
["Icon"] = "Interface\\AddOns\\Plater\\media\\radio_64",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 42,
["LastHookEdited"] = "Constructor",
["Author"] = "Ditador-Azralon",
["Desc"] = "Change the color of the aura timer by it's time left",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1579030177,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["Name"] = "Paint Aura Timers",
["Icon"] = "Interface\\Timer\\Challenges-Logo",
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auras = unitFrame.BuffFrame.PlaterBuffList\n    \n    for _, auraIcon in ipairs (auras) do\n        if (auraIcon:IsVisible()) then\n            if (auraIcon.RemainingTime < envTable.Timers.critical) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.critical)\n                \n            elseif (auraIcon.RemainingTime < envTable.Timers.warning) then\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.warning)\n                \n            else\n                Plater:SetFontColor (auraIcon.TimerText, envTable.Colors.okay)\n            end \n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --colors for each time bracket\n    envTable.Colors = {\n        critical = \"red\",\n        warning = \"yellow\",\n        okay = \"white\",\n    }\n    \n    --time amount to enter in warning or critical state\n    envTable.Timers = {\n        critical = 4.9,\n        warning = 8,\n    }\n    \nend\n\n\n",
},
},
{
["Enabled"] = true,
["Revision"] = 125,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Author"] = "????????-Illidan",
["Desc"] = "Config aura borders",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Name"] = "Advanced Debuff Border",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Nameplate Updated",
["Time"] = 1553450719,
["Icon"] = 133006,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 35,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
},
["Author"] = "�r��ne-Kel'thuzad",
["Desc"] = "Show yellow star for elite; Silver star for rares",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Rarity in the Name",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825364,
["Icon"] = "Interface\\AddOns\\Plater\\media\\star_full_64",
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 65,
["HooksTemp"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
},
["Author"] = "Cyclopes-Turalyon",
["Desc"] = "Add an icon to indicate an unit has Aggro on you. By default only show for units using a custom color from Npc Colors.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.ThreatIcon) then\n        unitFrame.ThreatIcon:Hide()\n    end\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateThreatState (unitFrame, unitId)\n    \nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.Anchor = {side = 11, x = -2, y = 0}\n    envTable.Texture = \"Interface\\\\AddOns\\\\Plater\\\\media\\\\exclamation2_64\"\n    \n    --it'll only use the icon if the nameplate has a color from the Npc Colors tab and \"Only Scripts\" disabled.\n    envTable.OnlyWhenUsingNpcColor = true --if false, it'll always use the icon\n    \n    --private\n    envTable.PlayerRole = \"NONE\" --automatically changed by the script\n    \n    function envTable.CreateIndicator (unitFrame)\n        if (not unitFrame.ThreatIcon) then\n            unitFrame.ThreatIcon = unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n        end\n    end\n    \n    function envTable.UpdateIndicator (unitFrame)\n        envTable.CreateIndicator (unitFrame)\n        \n        unitFrame.ThreatIcon:SetTexture (envTable.Texture)\n        Plater.SetAnchor (unitFrame.ThreatIcon, envTable.Anchor)\n        unitFrame.ThreatIcon:SetSize (unitFrame.healthBar:GetHeight(), unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateThreatState (unitFrame, unitId)\n        if (not unitFrame.ThreatIcon) then --if there's no icon created yet\n            return\n            \n        elseif (not Plater.IsInCombat()) then --not in combat\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (unitFrame.IsSelf) then --personal bar\n            unitFrame.ThreatIcon:Hide()\n            return\n            \n        elseif (envTable.OnlyWhenUsingNpcColor) then --must be using a npc color?\n            if (not unitFrame.UsingCustomColor) then\n                unitFrame.ThreatIcon:Hide()\n                return\n            end\n        end\n        \n        local isTanking, threatStatus, threatpct = UnitDetailedThreatSituation (\"player\", unitId)\n        \n        if (isTanking) then\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Hide()\n            else\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateAggroColor))\n            end\n        else\n            if (envTable.PlayerRole == \"TANK\") then\n                unitFrame.ThreatIcon:Show()\n                unitFrame.ThreatIcon:SetVertexColor (unpack (envTable.NameplateNoAggroColor))                \n            else\n                unitFrame.ThreatIcon:Hide()                \n            end\n        end\n    end\n    \n    function envTable.UpdatePlayerRole (unitFrame)\n        local profile = Plater.db.profile\n        local role = Plater:GetPlayerRole()\n        \n        if (role == \"TANK\") then\n            envTable.PlayerRole = \"TANK\"\n            envTable.NameplateAggroColor = profile.tank.colors.aggro\n            envTable.NameplateNoAggroColor = profile.tank.colors.noaggro\n            \n        else\n            envTable.PlayerRole = \"DAMAGER\"\n            envTable.NameplateAggroColor = profile.dps.colors.aggro\n            envTable.NameplateNoAggroColor = profile.dps.colors.noaggro\n            \n        end        \n    end\n    \n    envTable.UpdatePlayerRole (unitFrame)\n    \nend",
},
["Prio"] = 99,
["Time"] = 1579030500,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Name"] = "Aggro Indicator",
["Icon"] = 132344,
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = false,
["Revision"] = 20,
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Edit the Constructor script setting the font you want in the FONT = \"\", then /reload.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --added this event just to run the constructor script\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --insert here the font you want to change then /reeload\n    --after the reload, check if the font has changed and disable this script\n    \n    local FONT = \"Accidental Presidency\"\n    \n    local profile = Plater.db.profile\n    local actorTables = profile.plate_config\n    \n    for plateType, plateTable in pairs (actorTables) do\n        \n        plateTable.actorname_text_font = FONT\n        plateTable.spellname_text_font = FONT\n        plateTable.spellpercent_text_font = FONT\n        plateTable.level_text_font = FONT\n        plateTable.percent_text_font = FONT\n        plateTable.big_actortitle_text_font = FONT\n        plateTable.big_actorname_text_font = FONT\n        plateTable.power_percent_text_font = FONT\n        \n    end\n    \n    profile.castbar_target_font = FONT\n    profile.aura_timer_text_font = FONT    \n    profile.aura_stack_font = FONT    \n    \nend\n\n\n",
},
["Name"] = "Change All Fonts",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1551825316,
["Icon"] = 134331,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 50,
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\") then\n        \n        local arenaEnemies = GetNumArenaOpponentSpecs()\n        local found = false\n        for i = 1, arenaEnemies do\n            local guid = UnitGUID (\"arena\" .. i)\n            print (guid)\n            if (guid == unitFrame.namePlateUnitGUID) then\n                \n                local spec = GetArenaOpponentSpec (i)\n                print (spec)\n                if (spec) then\n                    local id, name, description, icon, role, class = GetSpecializationInfoByID (spec)\n                    print (name)\n                    if (role == \"HEALER\") then\n                        envTable.UpdatePowerBar (unitFrame)\n                    end\n                    print (role)\n                end\n                \n                break\n            end\n        end\n        \n        return\n    end\n    \n    --show for enemy players\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        envTable.UpdatePowerBar (unitFrame)\n        return\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.PowerBarAnchor = {side = 4, x = 0, y = -10}\n    \n    function envTable.UpdatePowerBar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        Plater.SetAnchor (unitFrame.powerBar, envTable.PowerBarAnchor)\n        \n    end\n    \nend\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the power bar for specific units",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (Plater.ZoneInstanceType == \"arena\") then\n        \n        local arenaEnemies = GetNumArenaOpponentSpecs()\n        local found = false\n        for i = 1, arenaEnemies do\n            local guid = UnitGUID (\"arena\" .. i)\n            print (guid)\n            if (guid == unitFrame.namePlateUnitGUID) then\n                \n                local spec = GetArenaOpponentSpec (i)\n                print (spec)\n                if (spec) then\n                    local id, name, description, icon, role, class = GetSpecializationInfoByID (spec)\n                    print (name)\n                    if (role == \"HEALER\") then\n                        envTable.UpdatePowerBar (unitFrame)\n                    end\n                    print (role)\n                end\n                \n                break\n            end\n        end\n        \n        return\n    end\n    \n    --show for enemy players\n    if (unitFrame.ActorType == \"enemyplayer\") then\n        envTable.UpdatePowerBar (unitFrame)\n        return\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.PowerBarAnchor = {side = 4, x = 0, y = -10}\n    \n    function envTable.UpdatePowerBar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        Plater.SetAnchor (unitFrame.powerBar, envTable.PowerBarAnchor)\n        \n    end\n    \nend\n\n\n",
},
["Name"] = "Power Bar",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1553450521,
["Icon"] = 1375677,
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 131,
["LastHookEdited"] = "Constructor",
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
},
["Prio"] = 99,
["Time"] = 1579035896,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 1\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", -1, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 1, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\nend",
},
},
{
["Enabled"] = true,
["Revision"] = 62,
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", -1, 0)\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\", -1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 1, 0)\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\", 1, 0)\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Name"] = "Cast Icon Border",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["Time"] = 1579031533,
["Icon"] = 133004,
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = true,
["Revision"] = 85,
["LastHookEdited"] = "Constructor",
["Author"] = "Izimode-Azralon",
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Prio"] = 99,
["Time"] = 1579035954,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["Name"] = "Cast Bar Border",
["Icon"] = 133004,
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
},
{
["Enabled"] = true,
["Revision"] = 42,
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
},
["Author"] = "????????-Illidan",
["Desc"] = "Debuff timer show decimal values",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then\n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            if (auraIcon.RemainingTime < envTable.MinTime) then            \n                auraIcon.TimerText:SetText (format (\"%.1f\", auraIcon.RemainingTime))\n            end\n        end        \n    end    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --minimum time left to take effect\n    envTable.MinTime = 9.999\n    \nend",
},
["Name"] = "Decimal Debuff Timer",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["role"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551894761,
["Icon"] = 609811,
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 81,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    \nend\n\n\n",
},
["Author"] = "?????-Illidan",
["Desc"] = "Format Buff Special icons like the regular aura icons.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --    if false then return end\n    \n    for _, iconFrame in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n        \n        unitFrame.ExtraIconFrame.options.show_text = true\n        \n        local profile = Plater.db.profile\n        \n        Plater.SetAnchor (iconFrame.CountdownText, profile.aura_timer_text_anchor)\n        Plater:SetFontSize (iconFrame.CountdownText, profile.aura_timer_text_size)\n        Plater:SetFontFace (iconFrame.CountdownText, profile.aura_timer_text_font)\n        \n        Plater.SetFontOutlineAndShadow (iconFrame.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n        \n        iconFrame.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n        iconFrame.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n        iconFrame.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)        \n        \n    end\n    \nend",
},
["Name"] = "Buff Special Mod",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Nameplate Updated",
["Time"] = 1552962644,
["Icon"] = 136139,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 29,
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Adds two arrows into the target indicators options.",
["Hooks"] = {
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --after editing this script, save it and /reload\n    \n    --adds two target indicators in arrow format\n    --to change the texture you may replace the path with another texture path\n    --or you can copy and paste more options here\n    \n    Plater.TargetIndicators    [\"SmallArrow\"] = {\n        path = [[Interface\\MONEYFRAME\\Arrow-Right-Up]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 12,\n        height = 12,\n        x = 8,\n        y = 0,\n        blend = \"ADD\",\n    }\n    \n    Plater.TargetIndicators    [\"BigArrow\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 18,\n        height = 16,\n        x = 24,\n        y = 0,\n        blend = \"ADD\",\n        color = \"yellow\",\n    }\n    \n    \n    \nend\n\n\n",
},
["Name"] = "Arrow Target Indicators",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["LastHookEdited"] = "Player Talent Update",
["Time"] = 1551887544,
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_right_64",
["PlaterCore"] = 1,
},
{
["Enabled"] = true,
["Revision"] = 11,
["HooksTemp"] = {
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Set the unit name to be above the target shading texture.",
["Hooks"] = {
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.unitName:SetDrawLayer (\"overlay\", 7)\nend\n\n\n\n\n\n\n\n\n",
},
["Name"] = "Unit Name Over Target Shading",
["PlaterCore"] = 1,
["LastHookEdited"] = "Target Changed",
["Time"] = 1551894756,
["Icon"] = 237377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = true,
["Revision"] = 22,
["HooksTemp"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Set the spark height to the same size of the cast bar.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.Spark:SetHeight (self:GetHeight())\n    \nend\n\n\n",
},
["Prio"] = 99,
["Name"] = "Adjust Spark Size",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1579035959,
["Icon"] = "Interface\\AddOns\\Plater\\images\\spark6",
["LastHookEdited"] = "Cast Update",
},
{
["Enabled"] = true,
["Revision"] = 69,
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show power bar for some units.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShowPowerBarForUnit (unitFrame)    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --power bar options:\n    \n    --for which units it should\n    envTable.ShowForEnemyPlayers = true\n    envTable.ShowForEnemyNpcs = false\n    \n    --specific npcs, can be the npc name or npcId\n    --this list work even if the ShowForEnemyNpcs is false\n    envTable.SpecificNpcs = {\n        [\"the rock\"] = true, --npc name\n        [225] = true, --npcId\n    }\n    \n    --anchor the power bar to\n    envTable.Anchor = {\n        side = 13, --inside the healthbar, bottom side\n        x = 0, \n        y = 0,\n    }\n    \n    --power bar height\n    envTable.Height = 1\n    \n    --power bar percent text\n    envTable.PercentTextEnabled = false\n    envTable.PercentTextAnchor = {\n        side = 7, --top right\n        x = 2, \n        y = 0,\n    }\n    \n    \n    --private\n    function envTable.ShowPowerbar (unitFrame)\n        unitFrame.powerBar:SetUnit (unitFrame.unit)\n        envTable.UpdatePowerbar (unitFrame)\n    end\n    \n    function envTable.UpdatePowerbar (unitFrame)\n        local powerBar = unitFrame.powerBar\n        Plater.SetAnchor (powerBar, envTable.Anchor, unitFrame.healthBar)\n        powerBar:SetSize (unitFrame.healthBar:GetWidth(), envTable.Height)\n        \n        envTable.SavePowerBarSize (unitFrame, envTable.Height)\n        \n        if (envTable.PercentTextEnabled) then\n            powerBar.percentText:Show()\n            --copy the font from the health percent\n            Plater:SetFontFace (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_font)\n            Plater:SetFontSize (powerBar.percentText, Plater.GetConfig (unitFrame).percent_text_size)\n            Plater.SetAnchor (powerBar.percentText, envTable.PercentTextAnchor)\n        else\n            powerBar.percentText:Hide()\n        end\n    end\n    \n    function envTable.CanShowPowerBarForUnit (unitFrame)\n        --check if the is in the special list to force show\n        local forceShowPowerBar = envTable.SpecificNpcs [unitFrame.namePlateNpcId] or envTable.SpecificNpcs [unitFrame.namePlateUnitName] or envTable.SpecificNpcs [unitFrame.namePlateUnitNameLower]\n        if (forceShowPowerBar) then\n            envTable.ShowPowerbar (unitFrame)\n            \n            --check if the unit is a enemy player\n        elseif (unitFrame.ActorType == \"enemyplayer\") then\n            if (envTable.ShowForEnemyPlayers) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n            \n            --check if the unit is a enemy npc\n        elseif (unitFrame.ActorType == \"enemynpc\") then\n            if (envTable.ShowForEnemyNpcs) then\n                envTable.ShowPowerbar (unitFrame)\n            end\n        end\n    end\n    \n    function envTable.SavePowerBarSize (unitFrame, height)\n        local plateConfigs = Plater.db.profile.plate_config [unitFrame.ActorType]\n        plateConfigs.mana[1] = plateConfigs.health[1]\n        plateConfigs.mana[2] = height\n        plateConfigs.mana_incombat[1] = plateConfigs.health_incombat[1]\n        plateConfigs.mana_incombat[2] = height\n    end\nend\n\n\n\n\n\n",
},
["Prio"] = 99,
["Name"] = "Power Bar",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["Time"] = 1579030177,
["Icon"] = "Interface/Addons/Plater/Media/fire_64",
["LastHookEdited"] = "Constructor",
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["version"] = -1,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Name"] = "Cast Bar Icon Settings [P]",
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["semver"] = "",
},
},
["last_news_time"] = 1551553489,
["cast_statusbar_fadeout_time"] = 0.48999997973442,
["aura_width2"] = 22,
["health_statusbar_bgtexture"] = "PlaterBackground",
["semver"] = "1.0.4",
["target_highlight_height"] = 18,
["target_shady_alpha"] = 0.59999996423721,
["castbar_target_font"] = "Accidental Presidency",
["update_throttle"] = 0.099999994039535,
["aura_width"] = 22,
["aura_height2"] = 14,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateResourceOnTarget"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.82",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.15",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "0",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "0.085",
["nameplateSelfBottomInset"] = "0.17",
["nameplateShowFriendlyGuardians"] = "0",
["NamePlateHorizontalScale"] = "1",
["nameplatePersonalShowAlways"] = "1",
["nameplateOccludedAlphaMult"] = "1",
["nameplateSelfAlpha"] = "1",
},
["health_statusbar_bgcolor"] = {
0.0431372,
0.0431372,
0.0431372,
1,
},
["resources"] = {
["scale"] = 0.79999995231628,
["y_offset"] = 1,
["y_offset_target"] = 9,
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1548957216,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = false --change to true to change the color\n    envTable.NameplateColor = \"pink\"\n    envTable.NameplateSizeOffset = 6 --increase the nameplate height by this value\n    envTable.GlowAlpha = 0.5 --amount of alpha in the outside glow effect\n    \n    --create a glow effect around the nameplate\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar, envTable.NameplateColor)\n    envTable.glowEffect:SetOffset (-27, 25, 9, -11)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() --\n    \n    --set the glow effect alpha\n    envTable.glowEffect:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n--[=[\nUsing spellIDs for multi-language support\n\n135029 - A Knot of Snakes (Temple of Sethraliss)\n135388 - A Knot of Snakes (Temple of Sethraliss)\n134612 - Grasping Tentacles (Shrine of the Storm)\n133361 - Wasting Servant (Waycrest Manor)\n136330 - Soul Thorns (Waycrest Manor)\n130896 - Blackout Barrel (Freehold)\n129758 - Irontide Grenadier (Freehold)\n131009 - Spirit of Gold (Atal`Dazar)\n--]=]",
["Icon"] = 135996,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n",
["Revision"] = 162,
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Name"] = "Unit - Important [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
},
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
"135029",
"134388",
"134612",
"133361",
"136330",
"130896",
"129758",
"Healing Tide Totem",
"131009",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1551467254,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self)\n    \nend",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Hide()\n    \nend",
["Revision"] = 432,
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.buffIconGlow:Show()\n    \nend",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Add the buff name in the trigger box.",
["SpellIds"] = {
275826,
272888,
272659,
267901,
267830,
265393,
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1548349245,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_BORDER_GLOW_ALPHA = 0.3 --0.3\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (self)\n    envTable.glowEffect:SetOffset (-32, 30, 7, -9)\n    envTable.glowEffect:SetAlpha (CONFIG_BORDER_GLOW_ALPHA)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, true)    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Hide()\n    \n    envTable.BackgroundFlash:Stop()\n    \n    self:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 399,
["Author"] = "Bombad�o-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["SpellIds"] = {
257785,
267237,
266951,
267273,
267433,
263066,
255577,
255371,
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3 --increases the size of the healthBar\n    envTable.GlowAlpha = 0.45 --from zero to one, is the percent of transparency of the glowing border\n    envTable.ShowArrow = true --or 'false' to hide the arrow above the healthBar\n    envTable.ArrowAlpha = 0.45 --transparent of the arrow above the healthBar\n    envTable.HealthBarColor = \"orange\" --color of the healthBar\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
["Time"] = 1550589212,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = 3 --increases the size of the healthBar\n    envTable.GlowAlpha = 0.45 --from zero to one, is the percent of transparency of the glowing border\n    envTable.ShowArrow = true --or 'false' to hide the arrow above the healthBar\n    envTable.ArrowAlpha = 0.45 --transparent of the arrow above the healthBar\n    envTable.HealthBarColor = \"orange\" --color of the healthBar\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    envTable.glowEffect:SetOffset (-27, 25, 6, -8)\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 32\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 8\n    envTable.topArrow.height = 8\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.glowEffect:Hide()\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["Revision"] = 335,
["Author"] = "Bombad�o-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.glowEffect:Show()\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 32\n    \n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \n    \nend\n\n\n\n\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-16, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\n    envTable.glowEffect.Texture:SetAlpha (envTable.GlowAlpha)\n    \nend\n\n\n",
["Name"] = "Explosion Affix M+ [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
240446,
273577,
},
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1551466091,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --creates a glow around the icon\n    envTable.debuffIconGlow = envTable.debuffIconGlow or Plater.CreateIconGlow (self)\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Hide()\n    \nend\n\n\n",
["Revision"] = 247,
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.debuffIconGlow:Show()\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Add the debuff name in the trigger box.",
["SpellIds"] = {
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    self:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1551892410,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --https://www.wowhead.com/spell=253583/fiery-enchant\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = \"darkorange\"\n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.4\n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = 5\n    \n    \n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (self, 0.2, 5, 35, false, false, 0, 1, 0.05, 0.1, true)\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()        \n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    --stop the camera shake\n    self:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \nend\n\n\n\n\n\n",
["Revision"] = 581,
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \nend\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Cast - Big Alert [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
258153,
258313,
257069,
274569,
278020,
261635,
272700,
280404,
268030,
265368,
263891,
264520,
265407,
278567,
278602,
258128,
257791,
258938,
265089,
272183,
256060,
257397,
257899,
269972,
270901,
270492,
268129,
268709,
263215,
268797,
262540,
262554,
253517,
255041,
252781,
250368,
258777,
72286,
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1548349245,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = 0.6\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["Revision"] = 387,
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \nend\n\n\n",
["Name"] = "Cast - Small Alert [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["SpellIds"] = {
275192,
265912,
274438,
268317,
268375,
276767,
264105,
265876,
270464,
266106,
272180,
278961,
278755,
265468,
256405,
256897,
264101,
280604,
268702,
281621,
262515,
255824,
253583,
250096,
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1549120808,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Revision"] = 164,
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
},
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Time"] = 1548349245,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    envTable.movingArrow:SetAlpha (0.275)\n    --envTable.movingArrow:SetDesaturated (true)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    local animation = Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.2, self:GetWidth()-16, 0)\n    \n    \n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["Revision"] = 192,
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable)\n			\n		end\n	",
["Name"] = "Cast - Frontal Cone [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["SpellIds"] = {
255952,
257426,
274400,
272609,
269843,
269029,
272827,
269266,
263912,
264923,
258864,
256955,
265540,
260793,
270003,
270507,
257337,
268415,
275907,
268865,
260669,
260280,
253239,
265541,
250258,
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
["Time"] = 1550595071,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 197,
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Show();\n    envTable.FixateIcon:Show();\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n    end    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
272584,
244653,
},
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        \n        [288038] = \"Marked Target\", --marine jaina encounter on battle of dazar'alor\n        [282209] = \"Mark of Prey\", --ravenous stalker conclave encounter on battle of dazar'alor\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n146753: Kul Tiran Marine from jaina encounter on battle of dazar'alor\n144807: Ravenous Stalker conclave encounter on battle of dazar'alor\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1548105751,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [268074] = \"Dark Purpose\", --G'huun Mythic Add\n        [260954] = \"Iron Gaze\", --Sergeant Bainbridge - Siege of Boralus\n        [257739] = \"Blind Rage\", --Blacktooth Scrapper - Freehold\n        [257314] = \"Black Powder Bomb\", --Irontide Grenadier - Freehold\n        [266107] = \"Thirst For Blood\", --Feral Bloodswarmer - The Underrot\n        [257582] = \"Raging Gaze\", --Earthrager - The MOTHERLODE!!\n        [262377] = \"Seek and Destroy\", --Crawler Mine - The MOTHERLODE!!\n        [257407] = \"Pursuit\", --Rezan - Atal'Dazar\n        \n        [288038] = \"Marked Target\", --marine jaina encounter\n        --[] = \"\" --       \n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n146753: kul tiran marine from jaina encounter\n--]=]\n\n\n\n\n",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 208,
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["__TrashAt"] = 1613296814,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["Enabled"] = true,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
"136461",
},
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
"136461",
"146753",
"144807",
},
},
},
["login_counter"] = 499,
["version"] = 5,
["aura_cooldown_show_swipe"] = false,
["pet_width_scale"] = 0.99999994039536,
["use_health_animation"] = true,
["castbar_target_anchor"] = {
["side"] = 11,
},
["hook_data_trash"] = {
{
["Enabled"] = false,
["Revision"] = 190,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = namePlateWidth / comboPoints\n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace * (i-1), 0)\n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["__TrashAt"] = 1613296814,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["LastHookEdited"] = "Constructor",
["Time"] = 1551825317,
["Icon"] = 135426,
["PlaterCore"] = 1,
},
{
["Enabled"] = false,
["Revision"] = 90,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    buffFrame1:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame1, \"bottom\", unitFrame, \"top\", profile.aura_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura_y_offset)\n    \n    buffFrame2:ClearAllPoints()\n    PixelUtil.SetPoint (buffFrame2, \"bottom\", unitFrame, \"top\", profile.aura2_x_offset,  plateConfigs.buff_frame_y_offset + profile.aura2_y_offset)    \n    \nend\n\n\n",
},
["__TrashAt"] = 1613296814,
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["LastHookEdited"] = "Nameplate Added",
["Time"] = 1551825364,
["Icon"] = 574574,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
{
["Enabled"] = false,
["Revision"] = 273,
["OptionsValues"] = {
},
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            firstIcon:ClearAllPoints()\n            firstIcon:SetPoint (\"center\", anchorPoint, \"center\", 0, 5)\n            \n            --check the consolidaded stacks, this is not the regular buff stacks\n            local firstIconStacks = aurasShown[1][3]\n            if (firstIconStacks and firstIconStacks > 1) then\n                firstIcon.StackText:SetText (firstIconStacks)\n                firstIcon.StackText:Show()\n            end\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                end        \n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 2, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == framersPerRow) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding)\n                        framersPerRow = framersPerRow + framersPerRow\n                        \n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                end                    \n            end\n            \n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
},
["__TrashAt"] = 1613296814,
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["Time"] = 1559665989,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
},
},
["ui_parent_cast_strata"] = "DIALOG",
["quick_hide"] = true,
["patch_version"] = 13,
["aura_stack_font"] = "Accidental Presidency",
["script_auto_imported"] = {
["Unit - Important"] = 11,
["Aura - Buff Alert"] = 13,
["Cast - Very Important"] = 11,
["Explosion Affix M+"] = 11,
["Aura - Debuff Alert"] = 11,
["Blink by Time Left"] = 1,
["Cast - Big Alert"] = 11,
["Unit - Show Energy"] = 11,
["Cast - Small Alert"] = 11,
["Color Change"] = 1,
["Aura - Invalidate Unit"] = 1,
["Spiteful Affix"] = 3,
["Unit Power"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 12,
["Aura Border Color"] = 1,
["Countdown"] = 11,
["Unit - Health Markers"] = 12,
["Cast - Frontal Cone"] = 11,
["Fixate"] = 11,
["Cast - Tank Interrupt"] = 11,
["Cast - Ultra Important"] = 11,
["Auto Set Skull"] = 11,
["Fixate On You"] = 11,
},
["no_spellname_length_limit"] = true,
["aura_timer_text_size"] = 10,
["extra_icon_anchor"] = {
["x"] = 4,
},
["extra_icon_show_timer"] = false,
["extra_icon_auras_mine"] = {
["224991"] = true,
},
["number_region_first_run"] = true,
["indicator_raidmark_scale"] = 0.69999998807907,
["extra_icon_caster_name"] = false,
["range_check_alpha"] = 0.5,
["click_space"] = {
115,
},
["extra_icon_auras"] = {
277242,
},
["aura2_grow_direction"] = 1,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["castbar_target_outline"] = "NONE",
["aura_tracker"] = {
["debuff"] = {
224991,
277950,
},
["buff_tracked"] = {
["280001"] = true,
},
["buff_banned"] = {
["206150"] = true,
["61574"] = true,
["61573"] = true,
},
},
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.79781,
},
["dps"] = {
["colors"] = {
["aggro"] = {
nil,
0.047058823529412,
},
["pulling"] = {
nil,
0.96078431372549,
0.95294117647059,
},
},
},
["health_animation_time_dilatation"] = 2.8699998855591,
["aura_frame2_anchor"] = {
["y"] = 13.7,
["side"] = 7,
},
["extra_icon_show_enrage"] = true,
["pet_height_scale"] = 0.99999994039536,
["cast_statusbar_texture"] = "Skyline",
["indicator_rare"] = false,
["health_selection_overlay_alpha"] = 0.29999998211861,
["aura_cooldown_reverse"] = false,
["cast_statusbar_spark_width"] = 25,
["cast_statusbar_spark_color"] = {
0.98823529411765,
[3] = 0.94117647058823,
},
},
["Default"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604599472,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 355,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Skull Texture",
["Name"] = "Skull Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Skull Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Important [Plater]",
["NpcNames"] = {
"164362",
"168882",
"168988",
"170234",
"165905",
"170452",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1605214963,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 607,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
323149,
324392,
340544,
342189,
333227,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604674264,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 695,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
["SpellIds"] = {
321247,
334522,
320232,
319962,
325879,
324427,
322999,
325360,
322903,
324103,
333294,
333540,
319521,
326021,
326450,
322711,
329104,
295000,
242391,
320197,
329608,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
["Time"] = 1604698647,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 462,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1604454032,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 351,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
337220,
337253,
337251,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
["Time"] = 1604617977,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 513,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
["SpellIds"] = {
332329,
320103,
321406,
335817,
321061,
320141,
326171,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Health Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the health bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604696442,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 970,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
338353,
334748,
334749,
320784,
341352,
341520,
341522,
336005,
339777,
331933,
326617,
324914,
324776,
326046,
340634,
319070,
328295,
317936,
327413,
319654,
323821,
320772,
324293,
330562,
330868,
341902,
342139,
342675,
323190,
332836,
327648,
328217,
322938,
340544,
325876,
325700,
323552,
332666,
332612,
332706,
340026,
294171,
292910,
294165,
338871,
330813,
335694,
327461,
329787,
304946,
15245,
276754,
304831,
277036,
320657,
294362,
270248,
292926,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1604617585,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 595,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
320170,
320171,
320462,
330712,
332170,
333875,
326836,
342135,
333861,
341969,
317963,
327481,
328331,
322614,
325701,
326438,
323538,
321764,
296523,
330755,
295929,
296019,
335685,
170751,
342207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = true,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604607993,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 406,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Unit - Main Target [P]",
["NpcNames"] = {
"156212",
"168098",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1611856720,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1606506781,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 109,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Health Markers [P]",
["NpcNames"] = {
"164451",
"164463",
"164461",
"165946",
"164501",
"164218",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
["Time"] = 1604599443,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 460,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
323489,
323496,
319941,
319592,
334266,
325258,
334913,
326221,
322936,
323236,
321834,
336752,
325418,
324667,
327233,
324368,
324205,
323943,
319713,
320596,
320729,
323608,
330614,
320063,
332708,
334023,
317231,
317943,
320966,
334053,
328458,
321968,
331718,
325793,
330453,
326997,
334051,
292903,
330843,
294173,
189200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.275,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Name"] = "Animation Speed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604593143,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
["Enabled"] = true,
["Revision"] = 833,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
321828,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Tank Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
},
["aura2_y_offset"] = 5,
["npc_cache"] = {
[164815] = {
"Zolramus Siphoner",
"The Necrotic Wake",
},
[53134] = {
"Ancient Core Hound",
"Firelands",
},
[34775] = {
"Demolisher",
"Isle of Conquest",
},
[168398] = {
"Slimy Morsel",
"Plaguefall",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
},
[26799] = {
"Horde Berserker",
"The Nexus",
},
[73101] = {
"Cursed Wolf",
"SMV Alliance Garrison Level 1",
},
[77579] = {
"Mongrethod",
"Teron'gor's Confrontation",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
},
[78731] = {
"Khatuun",
"Auchindoun",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[159190] = {
"Synod",
"Torghast, Tower of the Damned",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[171474] = {
"Finger Food",
"Plaguefall",
},
[167892] = {
"Tormented Soul",
"Halls of Atonement",
},
[30286] = {
"Frostbringer",
"Ahn'kahet: The Old Kingdom",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[169173] = {
"Meatball's Tormentor",
"Torghast, Tower of the Damned",
},
[416] = {
"Zilnar",
"Theater of Pain",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
},
[417] = {
"Flaadhun",
"Temple of Kotmogu",
},
[26672] = {
"Bloodthirsty Tundra Wolf",
"Utgarde Pinnacle",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
},
[53648] = {
"Inferno Hawk",
"Firelands",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
},
[170199] = {
"Harnessed Specter",
"Castle Nathria",
},
[165594] = {
"Coldheart Ambusher",
"Torghast, Tower of the Damned",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[152033] = {
"Inconspicuous Plant",
"Operation: Mechagon",
},
[79631] = {
"Iron Shieldbearer",
"Defense of Karabor",
},
[167898] = {
"Manifestation of Envy",
"Halls of Atonement",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[19668] = {
"Shadowfiend",
"Warsong Gulch",
},
[79632] = {
"Grom'kar Grunt",
"Defense of Karabor",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[30287] = {
"Plundering Geist",
"Ahn'kahet: The Old Kingdom",
},
[30319] = {
"Twilight Darkcaster",
"Ahn'kahet: The Old Kingdom",
},
[52498] = {
"Beth'tilac",
"Firelands",
},
[28368] = {
"Ymirjar Necromancer",
"Utgarde Pinnacle",
},
[58959] = {
"Istarik",
"Temple of Kotmogu",
},
[79633] = {
"Iron Boltblaster",
"Defense of Karabor",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
},
[24722] = {
"Fel Crystal",
"Magisters' Terrace",
},
[26801] = {
"Horde Ranger",
"The Nexus",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
},
[29264] = {
"Spirit Wolf",
"Twin Peaks",
},
[150249] = {
"Pistonhead Scrapper",
"Operation: Mechagon",
},
[27281] = {
"Ritual Channeler",
"Utgarde Pinnacle",
},
[136688] = {
"Fanatical Driller",
"The MOTHERLODE!!",
},
[169696] = {
"Mire Soldier",
"Plaguefall",
},
[172255] = {
"Gravestalker",
"Torghast, Tower of the Damned",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[79507] = {
"Felguard",
"Auchindoun",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[173280] = {
"Stone Legion Skirmisher",
"Castle Nathria",
},
[79508] = {
"Felborne Abyssal",
"Auchindoun",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[30416] = {
"Bound Fire Elemental",
"Ahn'kahet: The Old Kingdom",
},
[137204] = {
"Hoodoo Hexer",
"Temple of Sethraliss",
},
[150254] = {
"Scraphound",
"Operation: Mechagon",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
},
[75927] = {
"Azzakel",
"Auchindoun",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[172005] = {
"Furrowed Colossus",
"Torghast, Tower of the Damned",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
},
[79510] = {
"Cackling Pyromaniac",
"Auchindoun",
},
[31216] = {
"Wanzer",
"Silvershard Mines",
},
[60561] = {
"Earthgrab Totem",
"Silvershard Mines",
},
[173798] = {
"Rat of Unusual Size",
"Castle Nathria",
},
[77080] = {
"Sargerei Arbiter",
"Auchindoun",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[79511] = {
"Blazing Trickster",
"Auchindoun",
},
[53141] = {
"Molten Surger",
"Firelands",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
},
[5913] = {
"Tremor Totem",
"Silvershard Mines",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
},
[173800] = {
"Sewer Rat",
"Castle Nathria",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[170474] = {
"Brood Assassin",
"Plaguefall",
},
[164589] = {
"Regenerating Wildseed",
"Warsong Gulch",
},
[156913] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[165357] = {
"Pestilence Slime",
"Plaguefall",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
},
[98831] = {
"Jagganoth",
"Dreadscar Rift",
},
[169196] = {
"Crimson Cabalist",
"Castle Nathria",
},
[173802] = {
"Carved Assistant",
"Castle Nathria",
},
[58963] = {
"Delrylin",
"Silvershard Mines",
},
[87317] = {
"Training Dummy",
"SMV Alliance Garrison Level 3",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
},
[53206] = {
"Hell Hound",
"Firelands",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[26803] = {
"Horde Cleric",
"The Nexus",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[87318] = {
"Dungeoneer's Training Dummy",
"SMV Alliance Garrison Level 3",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
},
[81817] = {
"Burning Legionnaire",
"Teron'gor's Confrontation",
},
[69791] = {
"Southrend",
"Temple of Kotmogu",
},
[92564] = {
"Mo'arg Painbringer",
"Broken Shore Scenario",
},
[58964] = {
"Kermek",
"The Battle for Gilneas",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[169457] = {
"Bargast",
"Castle Nathria",
},
[81818] = {
"Legion Hunter-Killer",
"Teron'gor's Confrontation",
},
[69792] = {
"Southrend",
"Temple of Kotmogu",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[169458] = {
"Hecutis",
"Castle Nathria",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[166644] = {
"Artificer Xy'mox",
"Castle Nathria",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[30418] = {
"Bound Air Elemental",
"Ahn'kahet: The Old Kingdom",
},
[58965] = {
"Kaz-amal",
"Warsong Gulch",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[65362] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[162041] = {
"Grubby Dirtcruncher",
"Sanguine Depths",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
},
[107024] = {
"Fel Lord",
"Silvershard Mines",
},
[133384] = {
"Merektha",
"Temple of Sethraliss",
},
[170486] = {
"Atal'ai Devoted",
"De Other Side",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[164857] = {
"Spriggan Mendbender",
"De Other Side",
},
[174069] = {
"Hulking Gargon",
"Castle Nathria",
},
[174070] = {
"Kennel Overseer",
"Castle Nathria",
},
[170488] = {
"Son of Hakkar",
"De Other Side",
},
[63508] = {
"Xuen",
"Temple of Kotmogu",
},
[143622] = {
"Wild Imp",
"Silvershard Mines",
},
[119052] = {
"War Banner",
"Deepwind Gorge",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
},
[170234] = {
"Oppressive Banner",
"Theater of Pain",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[75426] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
},
[102293] = {
"Dread Admiral Eliza",
"Azsuna",
},
[133389] = {
"Galvazzt",
"Temple of Sethraliss",
},
[168700] = {
"Pestering Fiend",
"Castle Nathria",
},
[164862] = {
"Weald Shimmermoth",
"De Other Side",
},
[30419] = {
"Bound Water Elemental",
"Ahn'kahet: The Old Kingdom",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[101398] = {
"Psyfiend",
"Eye of the Storm",
},
[174842] = {
"Belligerent Waiter",
"Castle Nathria",
},
[173051] = {
"Suppressor Xelors",
"Torghast, Tower of the Damned",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[109587] = {
"Fel Lord Zardak",
"Broken Shore Scenario",
},
[101527] = {
"Blingtron 6000",
"Warsong Gulch",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[2630] = {
"Earthbind Totem",
"Silvershard Mines",
},
[151816] = {
"Deadsoul Scavenger",
"Torghast, Tower of the Damned",
},
[90525] = {
"Eredar Chaos Guard",
"Broken Shore Scenario",
},
[163331] = {
"Stone Legion Nightblade",
"Revendreth Scenario",
},
[151817] = {
"Deadsoul Devil",
"Torghast, Tower of the Damned",
},
[164355] = {
"Manifestation of Pride",
"Revendreth Scenario",
},
[137233] = {
"Plague Toad",
"Temple of Sethraliss",
},
[151818] = {
"Deadsoul Miscreation",
"Torghast, Tower of the Damned",
},
[78116] = {
"Water Elemental",
"Deepwind Gorge",
},
[168962] = {
"Reborn Phoenix",
"Castle Nathria",
},
[163077] = {
"Azules",
"Spires of Ascension",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
},
[174336] = {
"Kennel Overseer",
"Castle Nathria",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
},
[74023] = {
"Commander Vorka",
"Defense of Karabor",
},
[174338] = {
"Stinky Feedhauler",
"Castle Nathria",
},
[26550] = {
"Dragonflayer Deathseeker",
"Utgarde Pinnacle",
},
[102298] = {
"Dread Squallshaper",
"Azsuna",
},
[110614] = {
"Malificus",
"Broken Shore Scenario",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
},
[159755] = {
"The Grand Malleare",
"Torghast, Tower of the Damned",
},
[162058] = {
"Ventunax",
"Spires of Ascension",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[83620] = {
"Bloodmaul Earthbreaker",
"Bloodmaul Slag Mines",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[110615] = {
"Argent Dawnbringer",
"Broken Shore Scenario",
},
[162059] = {
"Kin-Tara",
"Spires of Ascension",
},
[164362] = {
"Slimy Morsel",
"Plaguefall",
},
[168968] = {
"Plaguebound Fallen",
"Plaguefall",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
},
[109592] = {
"Felguard Legionnaire",
"Broken Shore Scenario",
},
[162060] = {
"Oryphrion",
"Spires of Ascension",
},
[164363] = {
"Undying Stonefiend",
"Halls of Atonement",
},
[168969] = {
"Gushing Slime",
"Plaguefall",
},
[83621] = {
"Bloodmaul Magma Binder",
"Bloodmaul Slag Mines",
},
[102300] = {
"Raging Current",
"Azsuna",
},
[110616] = {
"Dark Worshipper",
"Broken Shore Scenario",
},
[162061] = {
"Devos",
"Spires of Ascension",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[150547] = {
"Scrapbone Grunter",
"Operation: Mechagon",
},
[167691] = {
"Stasis Trap",
"Castle Nathria",
},
[153874] = {
"Mawsworn Sentry",
"Torghast, Tower of the Damned",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[83622] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
},
[19962] = {
"Blue Seedling",
"Tempest Keep: The Botanica",
},
[110617] = {
"Shadowsworn Harbinger",
"Broken Shore Scenario",
},
[150293] = {
"Mechagon Prowler",
"Operation: Mechagon",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
},
[174090] = {
"Nathrian Hierarch",
"Castle Nathria",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[168973] = {
"High Torturer Darithos",
"Castle Nathria",
},
[83623] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
},
[134686] = {
"Mature Krolusk",
"Temple of Sethraliss",
},
[110618] = {
"Anchoring Crystal",
"Broken Shore Scenario",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
},
[163089] = {
"Disgusting Refuse",
"Theater of Pain",
},
[174092] = {
"Nathrian Gargon Rider",
"Castle Nathria",
},
[153878] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
},
[83624] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
},
[75820] = {
"Vengeful Magma Elemental",
"Bloodmaul Slag Mines",
},
[153879] = {
"Deadsoul Shadow",
"Torghast, Tower of the Damned",
},
[52447] = {
"Cinderweb Spiderling",
"Firelands",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
},
[134691] = {
"Static-charged Dervish",
"Temple of Sethraliss",
},
[173840] = {
"Plaguebound Devoted",
"Plaguefall",
},
[151579] = {
"Shield Generator",
"Operation: Mechagon",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[135971] = {
"Faithless Conscript",
"Temple of Sethraliss",
},
[171794] = {
"Armed Scavenger",
"Warsong Gulch",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
},
[166933] = {
"Ventun the Ravenous",
"Torghast, Tower of the Damned",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
},
[166934] = {
"Lor the Loyal",
"Torghast, Tower of the Damned",
},
[145185] = {
"Gnomercy 4.U.",
"Operation: Mechagon",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[153885] = {
"Deadsoul Shambler",
"Torghast, Tower of the Damned",
},
[162329] = {
"Xav the Unfallen",
"Theater of Pain",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
},
[175123] = {
"Warden Arkoban",
"Torghast, Tower of the Damned",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
},
[174100] = {
"Nathrian Singuard",
"Castle Nathria",
},
[101667] = {
"Shielded Anchor",
"Broken Shore Scenario",
},
[135975] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[83628] = {
"Lunarfall Goren",
"SMV Alliance Garrison Level 3",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[56799] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
},
[83629] = {
"Lunarfall Goren Hatchling",
"SMV Alliance Garrison Level 3",
},
[153377] = {
"Goop",
"Operation: Mechagon",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
},
[168986] = {
"Skeletal Raptor",
"De Other Side",
},
[169498] = {
"Plague Bomb",
"Plaguefall",
},
[151331] = {
"Cellblock Sentinel",
"Torghast, Tower of the Damned",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[166684] = {
"Warden Arkoban",
"Torghast, Tower of the Damned",
},
[19964] = {
"Red Seedling",
"Tempest Keep: The Botanica",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[78001] = {
"Cloudburst Totem",
"Temple of Kotmogu",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
},
[151333] = {
"Sentinel Shard",
"Torghast, Tower of the Damned",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[26553] = {
"Dragonflayer Fanatic",
"Utgarde Pinnacle",
},
[167966] = {
"Experimental Sludge",
"De Other Side",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
},
[24762] = {
"Sunblade Keeper",
"Magisters' Terrace",
},
[165408] = {
"Halkias",
"Halls of Atonement",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[164897] = {
"Fog Dweller",
"Torghast, Tower of the Damned",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[60447] = {
"Krik'thik Saboteur",
"Gate of the Setting Sun",
},
[29240] = {
"Stormforged Lieutenant",
"Halls of Lightning",
},
[29304] = {
"Slad'ran",
"Gundrak",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[82354] = {
"Seacliff Kaliri",
"SMV Alliance Garrison Level 2",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
},
[152875] = {
"Massive Crusher",
"Torghast, Tower of the Damned",
},
[163366] = {
"Magus of the Dead",
"Silvershard Mines",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
},
[13153] = {
"Commander Mulfort",
"Alterac Valley",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
},
[56930] = {
"Krik'thik Swarm Bringer",
"Gate of the Setting Sun",
},
[75191] = {
"Bloodmaul Slaver",
"Bloodmaul Slag Mines",
},
[26554] = {
"Dragonflayer Seer",
"Utgarde Pinnacle",
},
[165415] = {
"Toiling Groundskeeper",
"Halls of Atonement",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
},
[28825] = {
"Cyclone",
"Halls of Lightning",
},
[171557] = {
"Shade of Bargast",
"Castle Nathria",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[133944] = {
"Aspix",
"Temple of Sethraliss",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[29305] = {
"Moorabi",
"Gundrak",
},
[52581] = {
"Cinderweb Drone",
"Firelands",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
},
[75193] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
},
[136250] = {
"Hoodoo Hexer",
"Temple of Sethraliss",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[173609] = {
"Nathrian Conservator",
"Castle Nathria",
},
[102701] = {
"Mo'arg Painbringer",
"Broken Shore Scenario",
},
[175401] = {
"Warden of Souls",
"Torghast, Tower of the Damned",
},
[162096] = {
"Adept Necromancer",
"Maldraxxus Covenant Finale Scenario",
},
[53094] = {
"Patriarch Fire Turtle",
"Firelands",
},
[53222] = {
"Flamewaker Centurion",
"Firelands",
},
[104493] = {
"Spitting Cobra",
"Alterac Valley",
},
[26683] = {
"Frenzied Worgen",
"Utgarde Pinnacle",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[28826] = {
"Stormfury Revenant",
"Halls of Lightning",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
},
[173613] = {
"Nathrian Registrar",
"Castle Nathria",
},
[102703] = {
"Fel Lord Dukaz",
"Broken Shore Scenario",
},
[29306] = {
"Gal'darah",
"Gundrak",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[174126] = {
"Baron Duskhollow",
"Castle Nathria",
},
[162100] = {
"Kryxis the Voracious",
"Sanguine Depths",
},
[77244] = {
"Iron Grunt",
"SMV Alliance Garrison Level 3",
},
[169265] = {
"Creepy Crawler",
"Plaguefall",
},
[102192] = {
"Dread Sharpshooter",
"Azsuna",
},
[53223] = {
"Flamewaker Beast Handler",
"Firelands",
},
[163892] = {
"Rotting Slimeclaw",
"Plaguefall",
},
[102704] = {
"Fel Lord Zarnoz",
"Broken Shore Scenario",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
},
[173360] = {
"Plaguebelcher",
"Plaguefall",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
},
[162102] = {
"Grand Proctor Beryllia",
"Sanguine Depths",
},
[75198] = {
"Bloodmaul Geomancer",
"Bloodmaul Slag Mines",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[164406] = {
"Shriekwing",
"Castle Nathria",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[151613] = {
"Anti-Personnel Squirrel",
"Operation: Mechagon",
},
[164407] = {
"Sludgefist",
"Castle Nathria",
},
[136005] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[53096] = {
"Fire Turtle Hatchling",
"Firelands",
},
[102194] = {
"Dread Crewman",
"Azsuna",
},
[53224] = {
"Flamewaker Taskmaster",
"Firelands",
},
[75839] = {
"Vigilant Kaathar",
"Auchindoun",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
},
[26716] = {
"Azure Warder",
"The Nexus",
},
[136006] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
},
[28923] = {
"Loken",
"Halls of Lightning",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[81725] = {
"Muk'Mar Raz",
"Ashran",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[174134] = {
"Lord Evershade",
"Castle Nathria",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[167994] = {
"Ossified Conscript",
"Theater of Pain",
},
[133963] = {
"Test Subject",
"The MOTHERLODE!!",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[77889] = {
"Grom'tash the Destructor",
"Auchindoun",
},
[162111] = {
"Crumbling Skeleton",
"Maldraxxus Covenant Finale Scenario",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[172858] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[167485] = {
"Starving Mawrat",
"Torghast, Tower of the Damned",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[26685] = {
"Massive Jormungar",
"Utgarde Pinnacle",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
},
[14466] = {
"Horde Battle Standard",
"Warsong Gulch",
},
[167999] = {
"Echo of Sin",
"Castle Nathria",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[29308] = {
"Prince Taldaram",
"Ahn'kahet: The Old Kingdom",
},
[159301] = {
"General Kaal",
"Revendreth Scenario",
},
[168001] = {
"Empowered Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[168002] = {
"Empowered Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
},
[90686] = {
"Felstalker Dreadhound",
"Broken Shore Scenario",
},
[168003] = {
"Empowered Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[81091] = {
"Shadowmoon Voidaxe",
"Defense of Karabor",
},
[165189] = {
"MeuPinkFloyd",
"Silvershard Mines",
},
[173633] = {
"Nathrian Archivist",
"Castle Nathria",
},
[19969] = {
"Green Seedling",
"Tempest Keep: The Botanica",
},
[168004] = {
"Empowered Imperial Consular",
"Torghast, Tower of the Damned",
},
[52524] = {
"Cinderweb Spinner",
"Firelands",
},
[157002] = {
"Imperial Enforcer",
"Torghast, Tower of the Damned",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[168005] = {
"Empowered Deadsoul Shambler",
"Torghast, Tower of the Damned",
},
[157003] = {
"Imperial Duelist",
"Torghast, Tower of the Damned",
},
[153165] = {
"Custodian Thonar",
"Torghast, Tower of the Damned",
},
[133463] = {
"Venture Co. War Machine",
"The MOTHERLODE!!",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
},
[171333] = {
"Atal'ai Devoted",
"De Other Side",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[29309] = {
"Elder Nadox",
"Ahn'kahet: The Old Kingdom",
},
[152656] = {
"Deadsoul Stalker",
"Torghast, Tower of the Damned",
},
[155215] = {
"Faeleaf Lasher",
"Torghast, Tower of the Damned",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
},
[164171] = {
"Honored Duelist",
"Revendreth Scenario",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
},
[75209] = {
"Molten Earth Elemental",
"Bloodmaul Slag Mines",
},
[155216] = {
"Faeleaf Warden",
"Torghast, Tower of the Damned",
},
[135002] = {
"Demonic Tyrant",
"Silvershard Mines",
},
[139097] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[156241] = {
"Monstrous Guardian",
"Torghast, Tower of the Damned",
},
[75210] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
},
[173641] = {
"Nathrian Gargon",
"Castle Nathria",
},
[156242] = {
"Animated Prowler",
"Torghast, Tower of the Damned",
},
[155219] = {
"Gormling Spitter",
"Torghast, Tower of the Damned",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[75211] = {
"Magma Lord",
"Bloodmaul Slag Mines",
},
[152661] = {
"Mawsworn Ward",
"Torghast, Tower of the Damned",
},
[26687] = {
"Gortok Palehoof",
"Utgarde Pinnacle",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[28926] = {
"Spark of Ionar",
"Halls of Lightning",
},
[164177] = {
"Royal Nightcloak",
"Revendreth Scenario",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[156501] = {
"Ravnyr",
"Darkmaul Citadel",
},
[171342] = {
"Juvenile Runestag",
"De Other Side",
},
[151128] = {
"Lord of Locks",
"Torghast, Tower of the Damned",
},
[73805] = {
"Corrupted Toad",
"SMV Alliance Garrison Level 1",
},
[29310] = {
"Jedoga Shadowseeker",
"Ahn'kahet: The Old Kingdom",
},
[173134] = {
"Darksworn Goliath",
"Torghast, Tower of the Damned",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[56877] = {
"Raigonn",
"Gate of the Setting Sun",
},
[17252] = {
"Jhuughun",
"Silvershard Mines",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
},
[53167] = {
"Unbound Pyrelord",
"Firelands",
},
[82378] = {
"Moonbark Ancient",
"SMV Alliance Garrison Level 1",
},
[173136] = {
"Blightsmasher",
"Torghast, Tower of the Damned",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
},
[155225] = {
"Faeleaf Grovesinger",
"Torghast, Tower of the Damned",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
},
[77133] = {
"Sargerei Hoplite",
"Auchindoun",
},
[10981] = {
"Frost Wolf",
"Alterac Valley",
},
[155226] = {
"Verdant Keeper",
"Torghast, Tower of the Damned",
},
[174161] = {
"Lady Sinsear",
"Castle Nathria",
},
[170323] = {
"General Grashaal",
"Revendreth Scenario",
},
[155483] = {
"Faeleaf Shimmerwing",
"Torghast, Tower of the Damned",
},
[174162] = {
"Countess Gloomveil",
"Castle Nathria",
},
[77134] = {
"Sargerei Cleric",
"Auchindoun",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
},
[168022] = {
"Slime Tentacle",
"Plaguefall",
},
[3343] = {
"Grelkor",
"Alterac Valley",
},
[72785] = {
"Twisted Ancient",
"SMV Alliance Garrison Level 1",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[170838] = {
"Unyielding Contender",
"Theater of Pain",
},
[132713] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[139110] = {
"Spark Channeler",
"Temple of Sethraliss",
},
[29311] = {
"Herald Volazj",
"Ahn'kahet: The Old Kingdom",
},
[173142] = {
"Dread Feaster",
"Castle Nathria",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
},
[144231] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[30111] = {
"Twilight Worshipper",
"Ahn'kahet: The Old Kingdom",
},
[165469] = {
"Nathrian Enforcer",
"Castle Nathria",
},
[3527] = {
"Healing Stream Totem",
"Temple of Kotmogu",
},
[144232] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
},
[173146] = {
"Winged Ravager",
"Castle Nathria",
},
[165470] = {
"Nathrian Executor",
"Castle Nathria",
},
[164191] = {
"Noble Courtier",
"Revendreth Scenario",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[151654] = {
"Deuce Mecha-Buffer",
"Operation: Mechagon",
},
[24674] = {
"Phoenix",
"Magisters' Terrace",
},
[165472] = {
"Nathrian Siphoner",
"Castle Nathria",
},
[164705] = {
"Pestilence Slime",
"Plaguefall",
},
[169823] = {
"Gorm Behemoth",
"Torghast, Tower of the Damned",
},
[164450] = {
"Dealer Xy'exa",
"De Other Side",
},
[165474] = {
"Nathrian Assassin",
"Castle Nathria",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[14772] = {
"East Frostwolf Warmaster",
"Alterac Valley",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[1860] = {
"Zhar'gore",
"The Battle for Gilneas",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
},
[151659] = {
"Rocket Tonk",
"Operation: Mechagon",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
},
[30176] = {
"Ahn'kahar Guardian",
"Ahn'kahet: The Old Kingdom",
},
[153451] = {
"Kosarus the Fallen",
"Torghast, Tower of the Damned",
},
[134005] = {
"Shalebiter",
"The MOTHERLODE!!",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[172899] = {
"Nathrian Enforcer",
"Castle Nathria",
},
[164967] = {
"Doctor Ickus",
"Plaguefall",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[26690] = {
"Ymirjar Warrior",
"Utgarde Pinnacle",
},
[24675] = {
"Phoenix Egg",
"Magisters' Terrace",
},
[28961] = {
"Titanium Siegebreaker",
"Halls of Lightning",
},
[31104] = {
"Ahn'kahar Watcher",
"Ahn'kahet: The Old Kingdom",
},
[165481] = {
"Court Assassin",
"Castle Nathria",
},
[129214] = {
"Coin-Operated Crowd Pummeler",
"The MOTHERLODE!!",
},
[144244] = {
"The Platinum Pummeler",
"Operation: Mechagon",
},
[90705] = {
"Dread Commander Arganoth",
"Broken Shore Scenario",
},
[60849] = {
"Jade Serpent Statue",
"The Battle for Gilneas",
},
[156015] = {
"Writhing Soulmass",
"Torghast, Tower of the Damned",
},
[172647] = {
"Parasitic Infestor",
"Mists of Tirna Scithe",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[157807] = {
"Mawsworn Soulweaver",
"Torghast, Tower of the Damned",
},
[5925] = {
"Grounding Totem",
"Temple of Kotmogu",
},
[105419] = {
"Dire Basilisk",
"Twin Peaks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[167532] = {
"Heavin the Breaker",
"Theater of Pain",
},
[157809] = {
"Mawsworn Darkcaster",
"Torghast, Tower of the Damned",
},
[160112] = {
"Stone Legion Nightblade",
"Revendreth Scenario",
},
[144248] = {
"Head Machinist Sparkflux",
"Operation: Mechagon",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[28546] = {
"Ionar",
"Halls of Lightning",
},
[28578] = {
"Hardened Steel Reaver",
"Halls of Lightning",
},
[170093] = {
"Mawsworn Seeker",
"Torghast, Tower of the Damned",
},
[26691] = {
"Ymirjar Witch Doctor",
"Utgarde Pinnacle",
},
[26723] = {
"Keristrasza",
"The Nexus",
},
[100943] = {
"Earthen Wall Totem",
"Silvershard Mines",
},
[157300] = {
"Tunk",
"Darkmaul Citadel",
},
[156022] = {
"Bubbling Soulmass",
"Torghast, Tower of the Damned",
},
[171887] = {
"Slimy Smorgasbord",
"Plaguefall",
},
[156023] = {
"Miniature Soulmass",
"Torghast, Tower of the Damned",
},
[14773] = {
"Iceblood Warmaster",
"Alterac Valley",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[167538] = {
"Dokigg the Brutalizer",
"Theater of Pain",
},
[138369] = {
"Footbomb Hooligan",
"The MOTHERLODE!!",
},
[59764] = {
"Healing Tide Totem",
"The Battle for Gilneas",
},
[150396] = {
"Aerial Unit R-21/X",
"Operation: Mechagon",
},
[30114] = {
"Twilight Initiate",
"Ahn'kahet: The Old Kingdom",
},
[30178] = {
"Ahn'kahar Swarmer",
"Ahn'kahet: The Old Kingdom",
},
[150397] = {
"King Mechagon",
"Operation: Mechagon",
},
[95061] = {
"Greater Fire Elemental",
"The Battle for Gilneas",
},
[174194] = {
"Court Executor",
"Castle Nathria",
},
[166262] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[28547] = {
"Storming Vortex",
"Halls of Lightning",
},
[28579] = {
"Hardened Steel Berserker",
"Halls of Lightning",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
},
[26692] = {
"Ymirjar Harpooner",
"Utgarde Pinnacle",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[28835] = {
"Stormforged Construct",
"Halls of Lightning",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
},
[75360] = {
"Searing Ember",
"Bloodmaul Slag Mines",
},
[102227] = {
"Dread Harpooner",
"Azsuna",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[164218] = {
"Lord Chamberlain",
"Halls of Atonement",
},
[135816] = {
"Vilefiend",
"Warsong Gulch",
},
[100820] = {
"Spirit Wolf",
"Eye of the Storm",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
},
[99541] = {
"Risen Skulker",
"Warsong Gulch",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[13798] = {
"Jotek",
"Alterac Valley",
},
[120651] = {
"Explosives",
"Spires of Ascension",
},
[168058] = {
"Infused Quill-feather",
"Sanguine Depths",
},
[135562] = {
"Venomous Ophidian",
"Temple of Sethraliss",
},
[57783] = {
"Ghost Iron Dragonling",
"Temple of Kotmogu",
},
[105427] = {
"Skyfury Totem",
"Silvershard Mines",
},
[62005] = {
"Beast",
"Isle of Conquest",
},
[85341] = {
"Lunarfall Raccoon",
"SMV Alliance Garrison Level 2",
},
[30179] = {
"Twilight Apostle",
"Ahn'kahet: The Old Kingdom",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[163966] = {
"Dread Siphonist",
"Revendreth Scenario",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[173178] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[95577] = {
"Void Tendril",
"The Battle for Gilneas",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
},
[28580] = {
"Hardened Steel Skycaller",
"Halls of Lightning",
},
[167806] = {
"Animated Sin",
"Halls of Atonement",
},
[26693] = {
"Skadi the Ruthless",
"Utgarde Pinnacle",
},
[168574] = {
"Pestilent Harvester",
"Plaguefall",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
},
[28836] = {
"Stormforged Runeshaper",
"Halls of Lightning",
},
[163457] = {
"Forsworn Vanguard",
"Spires of Ascension",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[163969] = {
"Tyrant Soul",
"Revendreth Scenario",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[173949] = {
"Nathrian Soldier",
"Castle Nathria",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
},
[53115] = {
"Molten Lord",
"Firelands",
},
[169601] = {
"Stone Legion Commando",
"Castle Nathria",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
},
[53691] = {
"Shannox",
"Firelands",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[53819] = {
"Crystal Prison",
"Firelands",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[130635] = {
"Stonefury",
"The MOTHERLODE!!",
},
[169859] = {
"Observer Zelgar",
"Torghast, Tower of the Damned",
},
[30276] = {
"Ahn'kahar Web Winder",
"Ahn'kahet: The Old Kingdom",
},
[168580] = {
"Plagueborer",
"Plaguefall",
},
[78437] = {
"Gul'kosh",
"Auchindoun",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
},
[168837] = {
"Stealthling",
"Plaguefall",
},
[28581] = {
"Stormforged Tactician",
"Halls of Lightning",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[168326] = {
"Shattered Visage",
"De Other Side",
},
[76263] = {
"Sargerei Magus",
"Auchindoun",
},
[28837] = {
"Stormforged Sentinel",
"Halls of Lightning",
},
[173444] = {
"Caramain",
"Castle Nathria",
},
[28965] = {
"Titanium Thunderer",
"Halls of Lightning",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[173445] = {
"Sindrel",
"Castle Nathria",
},
[155790] = {
"Mawsworn Acolyte",
"Torghast, Tower of the Damned",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[173446] = {
"Hargitas",
"Castle Nathria",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
},
[175238] = {
"Arch-Tyrant Zerios",
"Torghast, Tower of the Damned",
},
[29637] = {
"Crafty Snake",
"Gundrak",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[157583] = {
"Forge Keeper",
"Torghast, Tower of the Damned",
},
[129231] = {
"Rixxa Fluxflame",
"The MOTHERLODE!!",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
},
[165260] = {
"Oozing Leftovers",
"Theater of Pain",
},
[95072] = {
"Greater Earth Elemental",
"Twin Peaks",
},
[157584] = {
"Flameforge Master",
"Torghast, Tower of the Damned",
},
[155793] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
},
[168843] = {
"Klotos",
"Spires of Ascension",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[168844] = {
"Lakesis",
"Spires of Ascension",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
},
[168845] = {
"Astronos",
"Spires of Ascension",
},
[28582] = {
"Stormforged Mender",
"Halls of Lightning",
},
[167566] = {
"Bleakwing Assassin",
"Castle Nathria",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
},
[28838] = {
"Titanium Vanguard",
"Halls of Lightning",
},
[79672] = {
"Grom'kar Shieldbearer",
"Defense of Karabor",
},
[59835] = {
"Krik'thik Swarmer",
"Gate of the Setting Sun",
},
[79560] = {
"Krull",
"Defense of Karabor",
},
[173145] = {
"Gorging Mite",
"Castle Nathria",
},
[133379] = {
"Adderis",
"Temple of Sethraliss",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
},
[156821] = {
"Darkmaul Shadowcaller",
"Darkmaul Citadel",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[102239] = {
"Lord Brinebeard",
"Azsuna",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[30414] = {
"Forgotten One",
"Ahn'kahet: The Old Kingdom",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
},
[171919] = {
"Ayeleth's Torturer",
"Torghast, Tower of the Damned",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[168337] = {
"Moldovaak",
"Castle Nathria",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
},
[102696] = {
"Felslag Imp",
"Broken Shore Scenario",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
},
[53119] = {
"Flamewaker Forward Guard",
"Firelands",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
},
[29830] = {
"Living Mojo",
"Gundrak",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
},
[53631] = {
"Cinderweb Spiderling",
"Firelands",
},
[53695] = {
"Rageface",
"Firelands",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
},
[24552] = {
"Sliver",
"Magisters' Terrace",
},
[156825] = {
"Darkmaul Centurion",
"Darkmaul Citadel",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[24656] = {
"Fizzle",
"Magisters' Terrace",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[73967] = {
"Niuzao",
"Deepwind Gorge",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
},
[29874] = {
"Drakkari Inciter",
"Gundrak",
},
[154129] = {
"Burning Emberguard",
"Torghast, Tower of the Damned",
},
[144246] = {
"K.U.-J.0.",
"Operation: Mechagon",
},
[164451] = {
"Dessia the Decapitator",
"Theater of Pain",
},
[77890] = {
"Durag the Dominator",
"Auchindoun",
},
[78734] = {
"Zipteq",
"Auchindoun",
},
[77734] = {
"Teron'gor",
"Auchindoun",
},
[78735] = {
"Zar'shuul",
"Auchindoun",
},
[76177] = {
"Soulbinder Nyami",
"Auchindoun",
},
[28583] = {
"Blistering Steamrager",
"Halls of Lightning",
},
[157083] = {
"Stonewing Ravager",
"Torghast, Tower of the Damned",
},
[76220] = {
"Blazing Trickster",
"Auchindoun",
},
[77131] = {
"Sargerei Spirit-Tender",
"Auchindoun",
},
[76595] = {
"Sargerei Soulpriest",
"Auchindoun",
},
[26696] = {
"Ymirjar Berserker",
"Utgarde Pinnacle",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[24745] = {
"Pure Energy",
"Magisters' Terrace",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
},
[157340] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[77130] = {
"Sargerei Ritualist",
"Auchindoun",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[77132] = {
"Sargerei Zealot",
"Auchindoun",
},
[170197] = {
"Conjured Manifestation",
"Castle Nathria",
},
[98783] = {
"Shinfel Blightsworn",
"Dreadscar Rift",
},
[98775] = {
"Jubeka Shadowbreaker",
"Dreadscar Rift",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[173973] = {
"Nathrian Tracker",
"Castle Nathria",
},
[77935] = {
"Sargerei Warden",
"Auchindoun",
},
[154015] = {
"Escaped Ritualist",
"Torghast, Tower of the Damned",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[98836] = {
"Beshtal",
"Dreadscar Rift",
},
[171159] = {
"Unraveling Soul Remnant",
"Torghast, Tower of the Damned",
},
[98771] = {
"Ritssyn Flamescowl",
"Dreadscar Rift",
},
[136407] = {
"Wrathguard",
"Silvershard Mines",
},
[102305] = {
"Dreadguard",
"Azsuna",
},
[173604] = {
"Sinister Antiquarian",
"Castle Nathria",
},
[154016] = {
"Prisonbreak Soulmender",
"Torghast, Tower of the Damned",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[61245] = {
"Capacitor Totem",
"Silvershard Mines",
},
[53121] = {
"Flamewaker Cauterizer",
"Firelands",
},
[53185] = {
"Flamewaker Overseer",
"Firelands",
},
[12053] = {
"Frostwolf Guardian",
"Alterac Valley",
},
[102191] = {
"Dreadhound",
"Azsuna",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[90506] = {
"Felfire Imp",
"Broken Shore Scenario",
},
[173464] = {
"Deplina",
"Castle Nathria",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[30625] = {
"Rhydiindh",
"Ahn'kahet: The Old Kingdom",
},
[154018] = {
"Prisonbreak Mauler",
"Torghast, Tower of the Damned",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
},
[151658] = {
"Strider Tonk",
"Operation: Mechagon",
},
[53732] = {
"Unbound Smoldering Elemental",
"Firelands",
},
[91967] = {
"Infernal Siegebreaker",
"Broken Shore Scenario",
},
[152703] = {
"Walkie Shockie X1",
"Operation: Mechagon",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[74355] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[173466] = {
"Fara",
"Castle Nathria",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[137940] = {
"Safety Shark",
"The MOTHERLODE!!",
},
[164255] = {
"Globgrog",
"Plaguefall",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[77042] = {
"Sargerei Defender",
"Auchindoun",
},
[28584] = {
"Unbound Firestorm",
"Halls of Lightning",
},
[30385] = {
"Twilight Volunteer",
"Ahn'kahet: The Old Kingdom",
},
[24554] = {
"Eramas Brightblaze",
"Magisters' Terrace",
},
[176026] = {
"Dancing Fools",
"Castle Nathria",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[111074] = {
"Grinning Shadowstalker",
"Broken Shore Scenario",
},
[26729] = {
"Steward",
"The Nexus",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
},
[109586] = {
"Fel Lord Rakkan",
"Broken Shore Scenario",
},
[109604] = {
"Felguard Legionnaire",
"Broken Shore Scenario",
},
[154022] = {
"Prisonbreak Packleader",
"Torghast, Tower of the Damned",
},
[173469] = {
"Kullan",
"Castle Nathria",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[144299] = {
"Workshop Defender",
"Operation: Mechagon",
},
[171166] = {
"Unraveling Soul Remnant",
"Torghast, Tower of the Damned",
},
[171422] = {
"Arch-Suppressor Laguas",
"Torghast, Tower of the Damned",
},
[74787] = {
"Slave Watcher Crushto",
"Bloodmaul Slag Mines",
},
[163746] = {
"Walkie Shockie X1",
"Operation: Mechagon",
},
[171587] = {
"Reanimated Shambling Horror",
"Silvershard Mines",
},
[28695] = {
"Molten Golem",
"Halls of Lightning",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[98793] = {
"Zinnin Smythe",
"Dreadscar Rift",
},
[74357] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[157094] = {
"Imperial Curator",
"Torghast, Tower of the Damned",
},
[129802] = {
"Earthrager",
"The MOTHERLODE!!",
},
[25354] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[152644] = {
"Deadsoul Drifter",
"Torghast, Tower of the Damned",
},
[154128] = {
"Blazing Elemental",
"Torghast, Tower of the Damned",
},
[144301] = {
"Living Waste",
"Operation: Mechagon",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[102248] = {
"Ravenous Hunter",
"Azsuna",
},
[53187] = {
"Flamewaker Animator",
"Firelands",
},
[77812] = {
"Sargerei Soulbinder",
"Auchindoun",
},
[168098] = {
"Empowered Coldheart Agent",
"Torghast, Tower of the Damned",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
},
[170228] = {
"Bone Husk",
"Torghast, Tower of the Damned",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
},
[53635] = {
"Cinderweb Drone",
"Firelands",
},
[99178] = {
"Calydus",
"Dreadscar Rift",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[168099] = {
"Empowered Coldheart Javelineer",
"Torghast, Tower of the Damned",
},
[164261] = {
"Hungering Destroyer",
"Castle Nathria",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
},
[144303] = {
"G.U.A.R.D.",
"Operation: Mechagon",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
},
[153003] = {
"Soul Fragment",
"Torghast, Tower of the Damned",
},
[19949] = {
"Sapling",
"Tempest Keep: The Botanica",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
},
[170147] = {
"Volatile Memory",
"De Other Side",
},
[53006] = {
"Spirit Link Totem",
"Isle of Conquest",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
},
[165030] = {
"Lady Inerva Darkvein",
"Castle Nathria Scenario",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
},
[26730] = {
"Mage Slayer",
"The Nexus",
},
[84978] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
},
[168101] = {
"Empowered Deadsoul Shade",
"Torghast, Tower of the Damned",
},
[160169] = {
"Honored Duelist",
"Revendreth Scenario",
},
[150190] = {
"HK-8 Aerial Oppression Unit",
"Operation: Mechagon",
},
[81396] = {
"Stonetooth",
"SMV Alliance Garrison Level 3",
},
[171172] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[150958] = {
"Mawsworn Guard",
"Torghast, Tower of the Damned",
},
[53188] = {
"Flamewaker Subjugator",
"Firelands",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
},
[168102] = {
"Empowered Deadsoul Echo",
"Torghast, Tower of the Damned",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
},
[171173] = {
"Mawsworn Shadestalker",
"Torghast, Tower of the Damned",
},
[150959] = {
"Mawsworn Interceptor",
"Torghast, Tower of the Damned",
},
[171171] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
},
[114565] = {
"Guardian of the Forgotten Queen",
"Warsong Gulch",
},
[53120] = {
"Flamewaker Pathfinder",
"Firelands",
},
[154030] = {
"Oddly Large Mawrat",
"Torghast, Tower of the Damned",
},
[56912] = {
"Krik'thik Engulfer",
"Gate of the Setting Sun",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[130653] = {
"Wanton Sapper",
"The MOTHERLODE!!",
},
[155250] = {
"Decayspeaker",
"Torghast, Tower of the Damned",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[173276] = {
"Stone Legion Commando",
"Castle Nathria",
},
[168104] = {
"Empowered Flameforge Master",
"Torghast, Tower of the Damned",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
},
[162051] = {
"Frenzied Ghoul",
"Sanguine Depths",
},
[171431] = {
"Suppressor Vellon",
"Torghast, Tower of the Damned",
},
[172282] = {
"Web Wrap",
"Plaguefall",
},
[26536] = {
"Mindless Servant",
"Utgarde Pinnacle",
},
[168105] = {
"Empowered Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[168361] = {
"Fen Hornet",
"Plaguefall",
},
[173114] = {
"Invasive Decayfly",
"Torghast, Tower of the Damned",
},
[151814] = {
"Deadsoul Shade",
"Torghast, Tower of the Damned",
},
[167406] = {
"Sire Denathrius",
"Castle Nathria",
},
[171432] = {
"Suppressor Hersi",
"Torghast, Tower of the Damned",
},
[102252] = {
"Dread Lookout",
"Azsuna",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
},
[156134] = {
"Ghastly Charger",
"Torghast, Tower of the Damned",
},
[150195] = {
"Gnome-Eating Slime",
"Operation: Mechagon",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[171433] = {
"Suppressor Cer",
"Torghast, Tower of the Damned",
},
[163501] = {
"Forsworn Skirmisher",
"Spires of Ascension",
},
[105451] = {
"Counterstrike Totem",
"Deepwind Gorge",
},
[168107] = {
"Empowered Mawsworn Interceptor",
"Torghast, Tower of the Damned",
},
[11946] = {
"Drek'Thar",
"Alterac Valley",
},
[174071] = {
"Vicious Gargon",
"Castle Nathria",
},
[30278] = {
"Ahn'kahar Spell Flinger",
"Ahn'kahet: The Old Kingdom",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
},
[153011] = {
"Binder Baritas",
"Torghast, Tower of the Damned",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[168108] = {
"Empowered Lumbering Creation",
"Torghast, Tower of the Damned",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[26861] = {
"King Ymiron",
"Utgarde Pinnacle",
},
[53642] = {
"Cinderweb Spinner",
"Firelands",
},
[12122] = {
"Duros",
"Alterac Valley",
},
[150965] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[163503] = {
"Etherdiver",
"Spires of Ascension",
},
[168106] = {
"Empowered Mawsworn Guard",
"Torghast, Tower of the Damned",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[129227] = {
"Azerokk",
"The MOTHERLODE!!",
},
[150295] = {
"Tank Buster MK1",
"Operation: Mechagon",
},
[28586] = {
"General Bjarngrim",
"Halls of Lightning",
},
[73468] = {
"Gul'var Grunt",
"SMV Alliance Garrison Level 1",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
},
[26669] = {
"Ymirjar Savage",
"Utgarde Pinnacle",
},
[168110] = {
"Empowered Imperial Duelist",
"Torghast, Tower of the Damned",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
},
[26763] = {
"Anomalus",
"The Nexus",
},
[171181] = {
"Territorial Bladebeak",
"De Other Side",
},
[173484] = {
"Conjured Manifestation",
"Castle Nathria",
},
[24558] = {
"Ellrys Duskhallow",
"Magisters' Terrace",
},
[151812] = {
"Detect-o-Bot",
"Operation: Mechagon",
},
[168111] = {
"Empowered Imperial Curator",
"Torghast, Tower of the Damned",
},
[170414] = {
"Howling Spectre",
"Torghast, Tower of the Damned",
},
[155828] = {
"Runecarved Colossus",
"Torghast, Tower of the Damned",
},
[162309] = {
"Kul'tharok",
"Theater of Pain",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[153015] = {
"Bound Soul",
"Torghast, Tower of the Damned",
},
[163506] = {
"Forsworn Stealthclaw",
"Spires of Ascension",
},
[168112] = {
"General Kaal",
"Castle Nathria",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[82425] = {
"Luminous Orchid",
"SMV Alliance Garrison Level 2",
},
[170927] = {
"Erupting Ooze",
"Plaguefall",
},
[76284] = {
"Spiteful Arbiter",
"Auchindoun",
},
[149555] = {
"Abomination",
"Silvershard Mines",
},
[30279] = {
"Deep Crawler",
"Ahn'kahet: The Old Kingdom",
},
[166608] = {
"Mueh'zala",
"De Other Side",
},
[162317] = {
"Gorechop",
"Theater of Pain",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[160181] = {
"Royal Arcanist",
"Revendreth Scenario",
},
[152708] = {
"Mawsworn Seeker",
"Torghast, Tower of the Damned",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[53127] = {
"Fire Scorpion",
"Firelands",
},
[30283] = {
"Plague Walker",
"Ahn'kahet: The Old Kingdom",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
},
[170417] = {
"Animated Stygia",
"Torghast, Tower of the Damned",
},
[134991] = {
"Sandfury Stonefist",
"Temple of Sethraliss",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[53639] = {
"Flamewaker Cauterizer",
"Firelands",
},
[105199] = {
"Felstalker Dreadhound",
"Broken Shore Scenario",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[152612] = {
"Subjugator Klontzas",
"Torghast, Tower of the Damned",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[167956] = {
"Dark Acolyte",
"Sanguine Depths",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
},
[98035] = {
"Dreadstalker",
"Silvershard Mines",
},
[166524] = {
"Deathwalker",
"Theater of Pain",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
},
[154663] = {
"Gnome-Eating Droplet",
"Operation: Mechagon",
},
[152508] = {
"Dusky Tremorbeast",
"Torghast, Tower of the Damned",
},
[166411] = {
"Forsworn Usurper",
"Spires of Ascension",
},
[105200] = {
"Felguard Invader",
"Broken Shore Scenario",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[11859] = {
"Doomguard",
"Castle Nathria",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[171188] = {
"Plaguebound Devoted",
"Plaguefall",
},
[152253] = {
"The Tarragrue",
"Torghast, Tower of the Damned",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
},
[28587] = {
"Volkhan",
"Halls of Lightning",
},
[53128] = {
"Giant Fire Scorpion",
"Firelands",
},
[157016] = {
"Imperial Archivist",
"Torghast, Tower of the Damned",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
},
[26668] = {
"Svala Sorrowgrave",
"Utgarde Pinnacle",
},
[165905] = {
"Son of Hakkar",
"De Other Side",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
},
[53640] = {
"Flamewaker Sentinel",
"Firelands",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[28585] = {
"Slag",
"Halls of Lightning",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[163915] = {
"Hatchling Nest",
"Plaguefall",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
},
[168878] = {
"Rigged Plagueborer",
"Plaguefall",
},
[88314] = {
"Dungeoneer's Training Dummy",
"SMV Alliance Garrison Level 3",
},
[174773] = {
"Spiteful Shade",
"Mists of Tirna Scithe",
},
[153174] = {
"Watchers of Death",
"Torghast, Tower of the Damned",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[157118] = {
"Royal Advisor",
"Torghast, Tower of the Damned",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
},
[169912] = {
"Enraged Mask",
"De Other Side",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[163857] = {
"Plaguebound Devoted",
"Plaguefall",
},
[128142] = {
"Voidling",
"Temple of Kotmogu",
},
[89] = {
"Infernal",
"Isle of Conquest",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[171448] = {
"Dreadful Huntmaster",
"Sanguine Depths",
},
[167610] = {
"Stonefiend Anklebiter",
"Halls of Atonement",
},
[13359] = {
"Frostwolf Bowman",
"Alterac Valley",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[162056] = {
"Rockbound Sprite",
"Sanguine Depths",
},
[53095] = {
"Matriarch Fire Turtle",
"Firelands",
},
[74356] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[173191] = {
"Soulstalker V'lara",
"Torghast, Tower of the Damned",
},
[167611] = {
"Stoneborn Eviscerator",
"Halls of Atonement",
},
[157328] = {
"Darkmaul Channeler",
"Darkmaul Citadel",
},
[173448] = {
"Dragost",
"Castle Nathria",
},
[11947] = {
"Captain Galvangar",
"Alterac Valley",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[168891] = {
"Rigged Plagueborer",
"Plaguefall",
},
[173568] = {
"Anima Crazed Worker",
"Castle Nathria",
},
[19920] = {
"Thorn Flayer",
"Tempest Keep: The Botanica",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[26125] = {
"Glacierbreaker",
"Warsong Gulch",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
},
[82175] = {
"Silverwing Kaliri",
"SMV Alliance Garrison Level 2",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[168113] = {
"General Grashaal",
"Castle Nathria",
},
[157122] = {
"Patrician Cromwell",
"Torghast, Tower of the Damned",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[157099] = {
"Imperial Censor",
"Torghast, Tower of the Damned",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[160161] = {
"Fog Dweller",
"Torghast, Tower of the Damned",
},
[173953] = {
"Loyal Gargon",
"Castle Nathria",
},
[169753] = {
"Famished Tick",
"Sanguine Depths",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[76283] = {
"Malefic Defender",
"Auchindoun",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
},
[174208] = {
"Court Executor",
"Castle Nathria",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
},
[156159] = {
"Coldheart Javelineer",
"Torghast, Tower of the Damned",
},
[151329] = {
"Warden Skoldus",
"Torghast, Tower of the Damned",
},
[105205] = {
"Mo'arg Spinebreaker",
"Broken Shore Scenario",
},
[167615] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[174012] = {
"Executrix Ophelia",
"Castle Nathria",
},
[26686] = {
"Ferocious Rhino",
"Utgarde Pinnacle",
},
[26555] = {
"Scourge Hulk",
"Utgarde Pinnacle",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[174093] = {
"Nathrian Ranger",
"Castle Nathria",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
},
[165597] = {
"Patchwerk Soldier",
"The Necrotic Wake",
},
[154011] = {
"Armed Prisoner",
"Torghast, Tower of the Damned",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
},
[91704] = {
"Anchoring Crystal",
"Broken Shore Scenario",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[164267] = {
"Margrave Stradama",
"Plaguefall",
},
[34922] = {
"Overlord Agmar",
"Isle of Conquest",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[105206] = {
"Wrathguard Dreadblade",
"Broken Shore Scenario",
},
[53694] = {
"Riplimb",
"Firelands",
},
[62982] = {
"Mindbender",
"Warsong Gulch",
},
[137029] = {
"Ordnance Specialist",
"The MOTHERLODE!!",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[164464] = {
"Xira the Underhanded",
"Theater of Pain",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
},
[165059] = {
"Crimson Protector",
"Castle Nathria Scenario",
},
[12121] = {
"Drakan",
"Alterac Valley",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
},
[24555] = {
"Garaxxas",
"Magisters' Terrace",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
},
[165060] = {
"Animimic",
"Torghast, Tower of the Damned",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[162046] = {
"Famished Tick",
"Sanguine Depths",
},
[26684] = {
"Ravenous Furbolg",
"Utgarde Pinnacle",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
},
[155251] = {
"Elder Longbranch",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[165061] = {
"Crimson Assassin",
"Castle Nathria Scenario",
},
[169330] = {
"Mucky Grunt",
"Revendreth Scenario",
},
[144300] = {
"Mechagon Citizen",
"Operation: Mechagon",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[156814] = {
"Gor'groth",
"Darkmaul Citadel",
},
[30284] = {
"Bonegrinder",
"Ahn'kahet: The Old Kingdom",
},
[164550] = {
"Slithering Ooze",
"Plaguefall",
},
[24207] = {
"Army of the Dead",
"Silvershard Mines",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
},
[156239] = {
"Dark Ascended Corrus",
"Torghast, Tower of the Damned",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
},
[28920] = {
"Stormforged Giant",
"Halls of Lightning",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
},
[103673] = {
"Darkglare",
"The Battle for Gilneas",
},
[150222] = {
"Gunker",
"Operation: Mechagon",
},
[97510] = {
"Soulbound Destructor",
"Broken Shore Scenario",
},
[169157] = {
"Mudlump",
"Castle Nathria",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[24559] = {
"Warlord Salaris",
"Magisters' Terrace",
},
[169925] = {
"Begrudging Waiter",
"Castle Nathria",
},
[26670] = {
"Ymirjar Flesh Hunter",
"Utgarde Pinnacle",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
},
[132056] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[26798] = {
"Commander Kolurg",
"The Nexus",
},
[102705] = {
"Fel Lord Rakaz",
"Broken Shore Scenario",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
},
[155211] = {
"Gormling Pest",
"Torghast, Tower of the Damned",
},
[30277] = {
"Ahn'kahar Slasher",
"Ahn'kahet: The Old Kingdom",
},
[134389] = {
"Venomous Ophidian",
"Temple of Sethraliss",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
},
[75272] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[134616] = {
"Krolusk Pup",
"Temple of Sethraliss",
},
[102185] = {
"First Mate DeGauza",
"Azsuna",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[120527] = {
"Jhorantia",
"Warsong Gulch",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[102706] = {
"Grinning Shadowstalker",
"Broken Shore Scenario",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[165066] = {
"Huntsman Altimor",
"Castle Nathria",
},
[134617] = {
"Krolusk Hatchling",
"Temple of Sethraliss",
},
[144249] = {
"Omega Buster",
"Operation: Mechagon",
},
[153552] = {
"Weeping Wraith",
"Torghast, Tower of the Damned",
},
[55659] = {
"Wild Imp",
"Silvershard Mines",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[164555] = {
"Millificent Manastorm",
"De Other Side",
},
[156142] = {
"Seeker of Souls",
"Torghast, Tower of the Damned",
},
[165067] = {
"Margore",
"Castle Nathria",
},
[76259] = {
"Felguard",
"Auchindoun",
},
[156219] = {
"Coldheart Scout",
"Torghast, Tower of the Damned",
},
[76260] = {
"Cackling Pyromaniac",
"Auchindoun",
},
[109591] = {
"Felguard Legionnaire",
"Broken Shore Scenario",
},
[168394] = {
"Slimy Morsel",
"Plaguefall",
},
[164556] = {
"Millhouse Manastorm",
"De Other Side",
},
[174550] = {
"Myskia",
"Revendreth Scenario",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
},
[80818] = {
"Luminous Orchid",
"SMV Alliance Garrison Level 2",
},
[78728] = {
"Shaadum",
"Auchindoun",
},
[26694] = {
"Ymirjar Dusk Shaman",
"Utgarde Pinnacle",
},
[91588] = {
"Fel Lord Kurduz",
"Broken Shore Scenario",
},
[53901] = {
"Unstable Magma",
"Firelands",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[168907] = {
"Slime Tentacle",
"Plaguefall",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[91970] = {
"Felguard Invader",
"Broken Shore Scenario",
},
[102702] = {
"Wrathguard Dreadblade",
"Broken Shore Scenario",
},
[1863] = {
"Helora",
"Warsong Gulch",
},
[30285] = {
"Eye of Taldaram",
"Ahn'kahet: The Old Kingdom",
},
[164558] = {
"Hakkar the Soulflayer",
"De Other Side",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
},
[100621] = {
"Mother Virila",
"Broken Shore Scenario",
},
[90544] = {
"Krosus",
"Broken Shore Scenario",
},
[165521] = {
"Lady Inerva Darkvein",
"Castle Nathria",
},
[151815] = {
"Deadsoul Echo",
"Torghast, Tower of the Damned",
},
[17977] = {
"Warp Splinter",
"Tempest Keep: The Botanica",
},
[6112] = {
"Windfury Totem",
"Twin Peaks",
},
[169425] = {
"Felhound",
"Mists of Tirna Scithe",
},
},
["hook_data_trash"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --ATTENTION: after enabling this script, you may have to adjust the anchor point at the Buff Settings tab\n    \n    --space between each aura icon\n    envTable.padding = 2\n    \n    --space between each row of icons\n    envTable.rowPadding = 12\n    \n    --amount of icons in the row, it'll breakline and start a new row after reach the threshold\n    envTable.maxAurasPerRow = 5\n    \n    --stack auras of the same name that arent stacked by default from the game\n    envTable.consolidadeRepeatedAuras = true    \n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    envTable.priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n    }\n    \nend \n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        local aurasShown = {}\n        local aurasDuplicated = {}\n        \n        --build the list of auras shown in the buff frame and check for each aura priority\n        --also check if the consolidate (stack) auras with the same name is enabled\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown()) then\n                if (envTable.consolidadeRepeatedAuras) then\n                    --is this aura already shown?\n                    local iconShownIndex = aurasDuplicated [auraIcon.SpellName]\n                    if (iconShownIndex) then\n                        --get the table with information about the shown icon\n                        local auraShownTable = aurasShown [iconShownIndex]\n                        --get the icon already in the table\n                        local icon = auraShownTable[1]\n                        --increase the amount of stacks\n                        auraShownTable[3] = auraShownTable[3] + 1\n                        \n                        --check if the remaining time of the icon already added in the table is lower than the current\n                        if (auraIcon.RemainingTime > icon.RemainingTime) then\n                            --replace the icon for the icon with bigger duration\n                            auraShownTable[1] = auraIcon\n                            icon:Hide()\n                        else\n                            auraIcon:Hide()\n                        end\n                    else    \n                        local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                        tinsert (aurasShown, {auraIcon, priority, 1}) --icon frame, priority, stack amount\n                        aurasDuplicated [auraIcon.SpellName] = #aurasShown\n                    end\n                else\n                    --not stacking similar auras\n                    local priority = envTable.priority[auraIcon.SpellName] or envTable.priority[auraIcon.spellId] or 1\n                    tinsert (aurasShown, {auraIcon, priority})\n                    \n                end           \n            end\n        end\n        \n        --sort auras by priority\n        table.sort (aurasShown, DetailsFramework.SortOrder2)\n        \n        local growDirection\n        if (containerID == 1) then --debuff container\n            growDirection = Plater.db.profile.aura_grow_direction\n            --force to grow to right if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 3\n            end\n            -- \"Left\", \"Center\", \"Right\" - 1  2  3\n            \n        elseif (containerID == 2) then --buff container\n            growDirection = Plater.db.profile.aura2_grow_direction\n            --force to grow to left if it is anchored to center\n            if (growDirection == 2) then\n                growDirection = 1\n            end\n            \n        end\n        \n        local padding = envTable.padding\n        local framersPerRow = envTable.maxAurasPerRow + 1\n        local horizontalLength = (-padding or 0)\n        \n        --first icon is where the row starts\n        local firstIcon = aurasShown[1] and aurasShown[1][1]\n        \n        if (firstIcon) then\n            local anchorPoint = firstIcon:GetParent() --anchor point is the BuffFrame\n            anchorPoint:SetSize (1, 1)\n            \n            --> left to right\n            if (growDirection == 3) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomleft\", anchorPoint, \"bottomleft\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomleft\", firstIcon, \"topleft\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topleft\", aurasShown [i-1][1], \"topright\", padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end\n                \n                --right to left\n            elseif (growDirection == 1) then\n                --> iterate among all aura icons\n                for i = 1, #aurasShown do\n                    local auraIcon = aurasShown [i][1]\n                    auraIcon:ClearAllPoints()\n                    \n                    if (i == 1) then\n                        auraIcon:SetPoint (\"bottomright\", anchorPoint, \"bottomright\", 0, 0)\n                    elseif (i % framersPerRow == 0) then\n                        auraIcon:SetPoint (\"bottomright\", firstIcon, \"topright\", 0, envTable.rowPadding or 0)\n                        framersPerRow = framersPerRow + framersPerRow\n                    else\n                        auraIcon:SetPoint (\"topright\", aurasShown [i-1][1], \"topleft\", -padding, 0)\n                    end\n                    \n                    local stacks = aurasShown[i][3]\n                    if (stacks and stacks > 1) then\n                        auraIcon.StackText:SetText (stacks)\n                        auraIcon.StackText:Show()\n                    end\n                    \n                    horizontalLength = horizontalLength + auraIcon:GetWidth() + padding\n                end                    \n            end\n            \n            --set the size of the buff frame\n            anchorPoint:SetWidth (horizontalLength)\n            anchorPoint:SetHeight (firstIcon:GetHeight())\n            \n        end\n    end\nend\n\n\n",
},
["__TrashAt"] = 1609179061,
["Time"] = 1596741775,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 295,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Combo Points"] = 4,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Extra Border"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 1,
},
["captured_spells"] = {
[196342] = {
["source"] = "Valentine-Dalvengyr",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329172] = {
["encounterID"] = 2381,
["source"] = "Sinstone Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165737,
},
[8122] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rojblake",
["npcID"] = 0,
},
[97668] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cordana Felsong",
["npcID"] = 72806,
},
[263648] = {
["type"] = "BUFF",
["source"] = "Domitian-Gurubashi",
["encounterID"] = 2391,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[316890] = {
["source"] = "Ogre Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153239,
},
[16870] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lembear",
["npcID"] = 0,
},
[161533] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80699,
},
[304606] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Fadedmoon",
["npcID"] = 0,
},
[145152] = {
["source"] = "Potatoast-Mal'Ganis",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[273892] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runestalker",
["npcID"] = 169915,
},
[209658] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[114052] = {
["source"] = "Inshoxicated-Rivendare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[304611] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Fadedmoon",
["npcID"] = 0,
},
[256757] = {
["source"] = "Screwdriver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[304612] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Fadedmoon",
["npcID"] = 0,
},
[339424] = {
["source"] = "Saravia-Terenas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34761] = {
["encounterID"] = 1926,
["source"] = "High Botanist Freywinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17975,
},
[51399] = {
["source"] = "Drakeyy-Frostmourne",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323043] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[345569] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323044] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 160345,
},
[325092] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331237] = {
["source"] = "Soulforged Bonereaver",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162763,
},
[31589] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[331238] = {
["source"] = "Remnant of Glutharn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171092,
},
[316904] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[321000] = {
["source"] = "Baron Vyraz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169901,
},
[115078] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[343527] = {
["source"] = "Liqht-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160517] = {
["source"] = "Void Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78798,
},
[34762] = {
["encounterID"] = 1926,
["source"] = "High Botanist Freywinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17975,
},
[60103] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[310765] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Depraved Soulflayer",
["npcID"] = 159659,
},
[36554] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[321005] = {
["source"] = "Ingra Maloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[325101] = {
["source"] = "Steward",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166663,
},
[54216] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ribbot",
["npcID"] = 165189,
},
[321006] = {
["source"] = "Ingra Maloch",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164567,
},
[333293] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170882,
},
[102793] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fadedmoon",
["npcID"] = 0,
},
[333294] = {
["source"] = "Nefarious Darkspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169893,
},
[172807] = {
["source"] = "Sor the Eradicator",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80691,
},
[323057] = {
["encounterID"] = 2397,
["source"] = "Ingra Maloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[224001] = {
["source"] = "Skoalmintchu",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321010] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 164567,
},
[323058] = {
["source"] = "Salvage Dredger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165609,
},
[335345] = {
["type"] = "DEBUFF",
["source"] = "Lord Chamberlain",
["encounterID"] = 2381,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164218,
},
[323059] = {
["encounterID"] = 2397,
["source"] = "Droman Oulfarran",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[321012] = {
["source"] = "Themajher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[194310] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "ßîghîtz-Ner'zhul",
["npcID"] = 0,
},
[15284] = {
["source"] = "Nethervine Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19512,
},
[101260] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkmoon Faire Mystic Mage",
["npcID"] = 54334,
},
[1079] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Udofire",
["npcID"] = 0,
},
[212743] = {
["source"] = "Kàrina-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329210] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327164] = {
["source"] = "Ibaraky",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[37836] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345595] = {
["source"] = "Valargh-Windrunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[316927] = {
["source"] = "Barrow Spider",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 160394,
},
[271877] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[4987] = {
["source"] = "Olumasp-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[213771] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[292359] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jamieb",
["npcID"] = 0,
},
[22120] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82047,
},
[308742] = {
["source"] = "Dahammer-Hellscream",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[321029] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lailasia",
["npcID"] = 0,
},
[292361] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Svyr",
["npcID"] = 0,
},
[316935] = {
["source"] = "Stoneborn Rebel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156084,
},
[156436] = {
["source"] = "Caiia-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339461] = {
["source"] = "Lilcoaco-Dalaran",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[292363] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sadmayo",
["npcID"] = 0,
},
[236299] = {
["source"] = "Frostcambur-Kalecgos",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1543] = {
["source"] = "Pregnantboyx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339463] = {
["source"] = "Mahbubble",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[275983] = {
["source"] = "Magmic Flamebinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176426,
},
[34254] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18422,
},
[325130] = {
["source"] = "Voiddene-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[331274] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Diseased Remnant",
["npcID"] = 167923,
},
[158486] = {
["source"] = "Elynissa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331275] = {
["source"] = "Advent Nevermore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167533,
},
[316942] = {
["source"] = "Stone Legion Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168631,
},
[1719] = {
["source"] = "Arlaus-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[13877] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[271896] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[29544] = {
["type"] = "DEBUFF",
["source"] = "Warlord Salaris",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24559,
},
[34767] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Miakhalifaa",
["npcID"] = 0,
},
[106898] = {
["source"] = "Pãpêrcût",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[273947] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[1943] = {
["source"] = "Kàrina-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[278045] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blossoming Dreadshade",
["npcID"] = 164759,
},
[114066] = {
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[343574] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[82326] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depleted-Tichondrius",
["npcID"] = 0,
},
[331288] = {
["source"] = "Heavin the Breaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167532,
},
[2094] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[343575] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[260881] = {
["source"] = "Aperturelabs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[171804] = {
["source"] = "Brinnley",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[207640] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lembear",
["npcID"] = 0,
},
[52174] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Finswall",
["npcID"] = 0,
},
[341530] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cozzeffect-Tichondrius",
["npcID"] = 0,
},
[290337] = {
["source"] = "Hajakizol",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[316958] = {
["source"] = "Mathiass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329245] = {
["source"] = "Orb Holder",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169268,
},
[19434] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[216857] = {
["source"] = "Allyeoan-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329247] = {
["source"] = "Orb Holder",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169268,
},
[210714] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[319010] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Verdant Prowler",
["npcID"] = 161917,
},
[319011] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Basin Vulpin",
["npcID"] = 163093,
},
[323107] = {
["encounterID"] = 2365,
["source"] = "Oozing Leftovers",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165260,
},
[319012] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Basin Vulpin",
["npcID"] = 163093,
},
[2782] = {
["source"] = "Mysticalsage-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[158499] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corrupted Toad",
["npcID"] = 73805,
},
[209693] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323110] = {
["encounterID"] = 2365,
["source"] = "Oozing Leftovers",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165260,
},
[47568] = {
["source"] = "Thardïac",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[214814] = {
["source"] = "Justuravgpal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[271920] = {
["source"] = "Toying-Sargeras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341544] = {
["source"] = "Niya, As Xavius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166146,
},
[329258] = {
["type"] = "DEBUFF",
["source"] = "Sinstone Statue",
["encounterID"] = 2381,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165737,
},
[325163] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171772,
},
[185123] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sinshiki",
["npcID"] = 0,
},
[343594] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Myrlindian",
["npcID"] = 0,
},
[173861] = {
["source"] = "Harvester Ommru",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84373,
},
[319022] = {
["source"] = "Abomination",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 158259,
},
[271924] = {
["type"] = "DEBUFF",
["source"] = "Toying-Sargeras",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[13750] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[188196] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[329262] = {
["type"] = "DEBUFF",
["source"] = "Lord Chamberlain",
["encounterID"] = 2381,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164218,
},
[341550] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[161577] = {
["source"] = "Lernaea Vilescale",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85693,
},
[109977] = {
["source"] = "Mola",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54601,
},
[205604] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[273977] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[15286] = {
["source"] = "Floofae-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331316] = {
["source"] = "Dokigg the Brutalizer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167538,
},
[3934] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[31850] = {
["source"] = "Mitslfd-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[4094] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[115098] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surefang",
["npcID"] = 0,
},
[327225] = {
["source"] = "Mitslfd-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323130] = {
["encounterID"] = 2365,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[17] = {
["source"] = "Ballindah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154415] = {
["encounterID"] = 1685,
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76177,
},
[321085] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[27243] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[153392] = {
["type"] = "DEBUFF",
["source"] = "Samoanbeast",
["encounterID"] = 1678,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77216] = {
["source"] = "Kharanos Rifleman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41182,
},
[325183] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ara'lon",
["npcID"] = 170522,
},
[337470] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ryúx",
["npcID"] = 0,
},
[5116] = {
["source"] = "Fuldar-Hydraxis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323137] = {
["encounterID"] = 2397,
["source"] = "Droman Oulfarran",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[323138] = {
["encounterID"] = 2397,
["source"] = "Ingra Maloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164567,
},
[319045] = {
["source"] = "Temel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163565,
},
[131894] = {
["source"] = "Earnings",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[45524] = {
["source"] = "Smor-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319046] = {
["source"] = "Temel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163565,
},
[145205] = {
["source"] = "With",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323143] = {
["type"] = "BUFF",
["source"] = "Lord Chamberlain",
["encounterID"] = 2381,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164218,
},
[174898] = {
["source"] = "Enraged Gembiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81729,
},
[149302] = {
["source"] = "Terrorfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73062,
},
[12471] = {
["encounterID"] = 1895,
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[319050] = {
["source"] = "Temel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163565,
},
[329289] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Oaksu",
["npcID"] = 0,
},
[331337] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[173876] = {
["source"] = "Steamscar Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81738,
},
[345673] = {
["source"] = "Priimus-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323150] = {
["encounterID"] = 2381,
["source"] = "Sinstone Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165737,
},
[159544] = {
["source"] = "Void-Torn Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82220,
},
[317009] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[122783] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surefang",
["npcID"] = 0,
},
[161593] = {
["source"] = "Volatile Spore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80018,
},
[325202] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[204596] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[274009] = {
["source"] = "Kstargazer-Barthilas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325203] = {
["source"] = "Floofae-Draka",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329299] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Avowed Guarantor",
["npcID"] = 159001,
},
[235313] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[310870] = {
["source"] = "Riddal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[149308] = {
["source"] = "Iron Boltblaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79633,
},
[310871] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krakensgift",
["npcID"] = 0,
},
[204598] = {
["source"] = "Samoanbatman",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335446] = {
["source"] = "Gorbik-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[8092] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[312924] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[44503] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24690,
},
[130465] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[212792] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[107428] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[335452] = {
["source"] = "Allender-Azralon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329310] = {
["source"] = "Avowed Guarantor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164220,
},
[149313] = {
["source"] = "Iron Boltblaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79633,
},
[199483] = {
["source"] = "Lovespell",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[225080] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Blairi",
["npcID"] = 0,
},
[325216] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[157505] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76263,
},
[343648] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345696] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wilbertlock",
["npcID"] = 0,
},
[44504] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24690,
},
[196414] = {
["source"] = "Edgarpoe-Quel'Thalas",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[205629] = {
["source"] = "Loolah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[167746] = {
["source"] = "Grom'kar Captive",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84414,
},
[337508] = {
["source"] = "Suka-Hydraxis",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[205630] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[325223] = {
["source"] = "Mistveil Stinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166304,
},
[12024] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Elysian Bulwark",
["npcID"] = 174561,
},
[329319] = {
["source"] = "Brethlun the Brand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166670,
},
[325224] = {
["source"] = "Mistveil Stinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166304,
},
[337511] = {
["source"] = "Mõjö-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323177] = {
["type"] = "BUFF",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164804,
},
[12472] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337512] = {
["source"] = "Oldladydruid-Dalaran",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170820] = {
["source"] = "Ferzhus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[292463] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cröökz",
["npcID"] = 0,
},
[345705] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44505] = {
["type"] = "BUFF",
["source"] = "Wretched Husk",
["encounterID"] = 1897,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24690,
},
[130469] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[335467] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[329324] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Gargon",
["npcID"] = 164563,
},
[174917] = {
["source"] = "Infested Behemoth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82841,
},
[53] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[337516] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[284275] = {
["source"] = "Manele",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[261947] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[337517] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170823] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[310898] = {
["source"] = "Vitcon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345710] = {
["source"] = "Cczar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308851] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[29166] = {
["source"] = "Bakwah-Caelestrasz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[209731] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Coloz",
["npcID"] = 0,
},
[331377] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Echo of the Magus",
["npcID"] = 162401,
},
[170824] = {
["source"] = "Khargax the Devourer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81537,
},
[205636] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[207684] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[335474] = {
["source"] = "Essence of Desperation",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158924,
},
[22127] = {
["source"] = "Sunseeker Herbalist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19508,
},
[170825] = {
["source"] = "Corruptor Kurgoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72647,
},
[343666] = {
["source"] = "Øbsidian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321141] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Elysian Bulwark",
["npcID"] = 174561,
},
[207685] = {
["source"] = "Samoanbatman",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[206662] = {
["source"] = "Phurîan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[112042] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Barmon",
["npcID"] = 1860,
},
[347765] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170827] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81537,
},
[174923] = {
["source"] = "Infested Orc",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81617,
},
[66] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Broyarx-TheScryers",
["npcID"] = 0,
},
[100780] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[337529] = {
["source"] = "Missfit-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323195] = {
["type"] = "DEBUFF",
["source"] = "Oryphrion",
["encounterID"] = 2358,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162060,
},
[329340] = {
["source"] = "High Adjudicator Aleez",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165410,
},
[174925] = {
["source"] = "Infested Orc",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81617,
},
[258883] = {
["source"] = "Tite-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[118699] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[165711] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 82263,
},
[193356] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165712] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Durphorn the Bullheaded",
["npcID"] = 82016,
},
[33757] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fingerina",
["npcID"] = 0,
},
[193357] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[205644] = {
["source"] = "Treant",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 103822,
},
[165713] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Durphorn the Bullheaded",
["npcID"] = 82016,
},
[158546] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lunarfall Matriarch",
["npcID"] = 79285,
},
[193358] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[30831] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 86075,
},
[165714] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 82263,
},
[207693] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Exaff-Azshara",
["npcID"] = 0,
},
[193359] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[132951] = {
["source"] = "Fangling",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 161207,
},
[23920] = {
["source"] = "Arlaus-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335494] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Conjured Wings",
["npcID"] = 161588,
},
[337542] = {
["source"] = "Vanhelsingh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[194384] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Snakesdoctor",
["npcID"] = 0,
},
[325256] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ara'lon",
["npcID"] = 170522,
},
[329352] = {
["source"] = "Kanya",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323209] = {
["encounterID"] = 2381,
["source"] = "Sinstone Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165737,
},
[166740] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 79708,
},
[100784] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[153430] = {
["type"] = "DEBUFF",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75839,
},
[276112] = {
["source"] = "Megadwarf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[310924] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kamenari",
["npcID"] = 0,
},
[205648] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[165717] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alya",
["npcID"] = 82002,
},
[321164] = {
["source"] = "Glaimana",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[306830] = {
["source"] = "Kanya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44765] = {
["source"] = "Sunblade Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24762,
},
[6685] = {
["source"] = "Kharanos Rifleman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41182,
},
[227151] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[170838] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[347788] = {
["source"] = "Ainur-Whisperwind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[174934] = {
["source"] = "Voice of Iyu",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81634,
},
[312977] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[165720] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Archon",
["npcID"] = 82014,
},
[337552] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[300693] = {
["source"] = "Aimerspriest",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[116] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[174936] = {
["source"] = "Voice of Iyu",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81634,
},
[128943] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317077] = {
["source"] = "Harpy Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 155192,
},
[120] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323221] = {
["type"] = "DEBUFF",
["source"] = "Sinstone Statue",
["encounterID"] = 2381,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165737,
},
[122] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[46302] = {
["source"] = "Samoanbeast",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319127] = {
["source"] = "Protective Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164007,
},
[337557] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[165723] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johnny Oshimo",
["npcID"] = 82264,
},
[325271] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bootus",
["npcID"] = 157956,
},
[32752] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Norml",
["npcID"] = 0,
},
[263840] = {
["source"] = "Globo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[182106] = {
["source"] = "Rangari Scout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90186,
},
[133] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Racket-EarthenRing",
["npcID"] = 0,
},
[136] = {
["source"] = "Pregnantboyx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[166749] = {
["source"] = "Sargerei Hoplite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77133,
},
[229206] = {
["type"] = "BUFF",
["source"] = "Chainer-Drak'Tharon",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323229] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Highland Runestag",
["npcID"] = 170856,
},
[62173] = {
["source"] = "Tiniest-Ravenholdt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2367] = {
["source"] = "Cosimara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2383] = {
["source"] = "Dankpuss",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[93622] = {
["source"] = "Muroka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[290467] = {
["source"] = "Somedaysoon-Whisperwind",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[150369] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Prettyneet",
["npcID"] = 0,
},
[337567] = {
["source"] = "Tite-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308899] = {
["source"] = "Doaran",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34785] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18405,
},
[339617] = {
["source"] = "Hopecrusher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166679,
},
[172] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[321188] = {
["source"] = "Quilboar Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 150238,
},
[323236] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[349857] = {
["source"] = "Hollus-Nagrand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327332] = {
["source"] = "Forsworn Mender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163459,
},
[339619] = {
["source"] = "Hopecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166679,
},
[11450] = {
["source"] = "Bagherah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[211805] = {
["source"] = "Priimus-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23922] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329383] = {
["source"] = "Drifting Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158029,
},
[146278] = {
["source"] = "Voidstamp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131944] = {
["source"] = "Injured Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81774,
},
[339623] = {
["source"] = "Hopecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166679,
},
[325289] = {
["source"] = "Edgarpoe-Quel'Thalas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[343719] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Malacan",
["npcID"] = 0,
},
[126389] = {
["source"] = "Toolbît",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343721] = {
["source"] = "Saladinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[133994] = {
["source"] = "Loolah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[3391] = {
["encounterID"] = 1927,
["source"] = "Laj",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17980,
},
[317103] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343724] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vaniller-Kel'Thuzad",
["npcID"] = 0,
},
[345772] = {
["source"] = "Fae Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175579,
},
[165735] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Anruin",
["npcID"] = 81998,
},
[345773] = {
["source"] = "Thewizarrd-Azralon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[161640] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sun-Charged Eel",
["npcID"] = 90071,
},
[81340] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329392] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forbidden Trapper",
["npcID"] = 157576,
},
[165736] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anruin",
["npcID"] = 81998,
},
[33763] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lembear",
["npcID"] = 0,
},
[323250] = {
["type"] = "DEBUFF",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164804,
},
[162665] = {
["source"] = "Iron Rearguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 89952,
},
[85948] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329394] = {
["source"] = "Forbidden Trapper",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157576,
},
[325299] = {
["source"] = "Edgarpoe-Quel'Thalas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[263867] = {
["source"] = "Core Hound",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[162666] = {
["source"] = "Iron Rearguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 89952,
},
[329396] = {
["source"] = "Forbidden Researcher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157579,
},
[300728] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Morphìous-Zul'jin",
["npcID"] = 0,
},
[313015] = {
["type"] = "DEBUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331445] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77758] = {
["source"] = "Walmartshoes",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165739] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Barbery the Crazy Cat Lady",
["npcID"] = 82009,
},
[154477] = {
["encounterID"] = 1685,
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76177,
},
[329401] = {
["source"] = "Pallaval the Biased",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159151,
},
[130489] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66367,
},
[267972] = {
["source"] = "Owenz-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[202602] = {
["source"] = "Braunwealde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165743] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Challe Tebrilinde",
["npcID"] = 82005,
},
[321216] = {
["source"] = "Architect Xeeli",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165007,
},
[290500] = {
["source"] = "Fungusfunk-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[114108] = {
["source"] = "Tinkerbizzle-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[272071] = {
["source"] = "Endelva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165744] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corselle",
["npcID"] = 81994,
},
[5246] = {
["source"] = "Scabbylette-Duskwood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[315075] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[77761] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315076] = {
["source"] = "Morbid Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164273,
},
[150387] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cursed Tentacle",
["npcID"] = 73105,
},
[30451] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[190319] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[315079] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Necromantic Scourer",
["npcID"] = 161388,
},
[179057] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[319175] = {
["source"] = "Kàrina-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[370] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165747] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vindicator Maraad",
["npcID"] = 78554,
},
[327367] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[258920] = {
["source"] = "Syssare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165748] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 78556,
},
[116670] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gozaimasu",
["npcID"] = 0,
},
[165749] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Etubrute",
["npcID"] = 82187,
},
[327371] = {
["source"] = "Tastytreats",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345801] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[290512] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dízz-Frostmourne",
["npcID"] = 0,
},
[114111] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Secutor Mevix",
["npcID"] = 160959,
},
[165750] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Etubrute",
["npcID"] = 82187,
},
[13819] = {
["source"] = "Daveous",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165751] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Etubrute",
["npcID"] = 82187,
},
[345805] = {
["source"] = "Owenz-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[258925] = {
["source"] = "Valargh-Windrunner",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339664] = {
["source"] = "Saladinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34791] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18405,
},
[142204] = {
["source"] = "Afflictios",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[177016] = {
["source"] = "Krull",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79560,
},
[44518] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24686,
},
[139133] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165754] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yoori",
["npcID"] = 82025,
},
[142205] = {
["source"] = "Afflictios",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[7870] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Aliersia",
["npcID"] = 58963,
},
[300761] = {
["source"] = "Aimerspriest",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[498] = {
["source"] = "Covfefe-Gurubashi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165755] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lupas",
["npcID"] = 82189,
},
[333526] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[321240] = {
["encounterID"] = 2325,
["source"] = "Tunk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157300,
},
[331479] = {
["source"] = "Flawed Rancor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169992,
},
[267999] = {
["source"] = "Vilefiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135816,
},
[343766] = {
["source"] = "Alexandros Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172657,
},
[288477] = {
["source"] = "Jintae",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[528] = {
["source"] = "Digasauruspr-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[337624] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[331481] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infectious Monstrosity",
["npcID"] = 167948,
},
[313052] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[255858] = {
["source"] = "Grove Prowler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172722,
},
[199545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pyraell-TwistingNether",
["npcID"] = 0,
},
[329435] = {
["source"] = "Congealed Torment",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165640,
},
[44519] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24686,
},
[333531] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Doctor Hivvil",
["npcID"] = 159707,
},
[596] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Foxcoin",
["npcID"] = 0,
},
[102341] = {
["source"] = "Enemy Tonk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54642,
},
[313056] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337631] = {
["source"] = "Living Bulwark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158985,
},
[165760] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moriccalas",
["npcID"] = 81990,
},
[242551] = {
["source"] = "Vinakalon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[102342] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[270058] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Doomcorpse",
["npcID"] = 0,
},
[209788] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44520] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24686,
},
[148356] = {
["source"] = "Grom'kar Captive",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84414,
},
[339683] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[155524] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77131,
},
[313064] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[190336] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Addleatus-TheVentureCo",
["npcID"] = 0,
},
[313065] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[153477] = {
["encounterID"] = 1685,
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76177,
},
[768] = {
["source"] = "Kimba",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[106951] = {
["source"] = "Cleorapta",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[224125] = {
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[34026] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[331497] = {
["source"] = "Taann",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[195457] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zenonta",
["npcID"] = 0,
},
[34794] = {
["type"] = "DEBUFF",
["source"] = "Commander Sarannis",
["encounterID"] = 1925,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17976,
},
[224126] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[53480] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[323309] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Strategist Ocra",
["npcID"] = 160883,
},
[224127] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[208769] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[27638] = {
["source"] = "Forsworn Stealthclaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163506,
},
[165767] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Northpaul",
["npcID"] = 82011,
},
[270070] = {
["source"] = "Quenthel-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165768] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 81997,
},
[116680] = {
["source"] = "Ÿàng",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337648] = {
["source"] = "Essence of Desperation",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158924,
},
[69070] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Keilyss",
["npcID"] = 0,
},
[198533] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 60849,
},
[208772] = {
["source"] = "Micooh-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165770] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 81993,
},
[327413] = {
["source"] = "Forsworn Goliath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168318,
},
[980] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[70095] = {
["source"] = "Iron Rearguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 89952,
},
[165771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Starcaller Astrylian",
["npcID"] = 81993,
},
[337654] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fjara",
["npcID"] = 0,
},
[161676] = {
["source"] = "Stronguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327416] = {
["source"] = "Forsworn Goliath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168318,
},
[164748] = {
["source"] = "Assistant Brightstone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84455,
},
[337656] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fjara",
["npcID"] = 0,
},
[165773] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thrend",
["npcID"] = 82259,
},
[44267] = {
["encounterID"] = 1895,
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[210824] = {
["source"] = "Frostcambur-Kalecgos",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319229] = {
["source"] = "The Accuser",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171916,
},
[172941] = {
["source"] = "Sor the Eradicator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80691,
},
[138130] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[337661] = {
["source"] = "Playfortnite",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315136] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[48107] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shanado",
["npcID"] = 0,
},
[347901] = {
["source"] = "Mayvend",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319233] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[182158] = {
["source"] = "Deadroll",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[5215] = {
["source"] = "Faeliyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[202636] = {
["source"] = "Adeanâ",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101838] = {
["source"] = "Manele",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34797] = {
["source"] = "Bloodwarder Greenkeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18419,
},
[205708] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Grablett-Barthilas",
["npcID"] = 0,
},
[44268] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[331523] = {
["source"] = "Endelva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[325381] = {
["source"] = "Gñome-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1464] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[102351] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48108] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[32375] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kothev",
["npcID"] = 0,
},
[186257] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157589] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 74373,
},
[345863] = {
["source"] = "Coracinlux",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[186258] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[102352] = {
["source"] = "Tinkerbizzle-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319245] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115151] = {
["source"] = "Airen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[290577] = {
["source"] = "Abomination",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 149555,
},
[341771] = {
["source"] = "Bone Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170882,
},
[177045] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[19577] = {
["source"] = "Rectalbreach",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[190356] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[154521] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kliaa",
["npcID"] = 76438,
},
[311058] = {
["source"] = "Ghettostar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[68054] = {
["source"] = "Jeeves",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 35642,
},
[169880] = {
["source"] = "Vicious Felhunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84095,
},
[34799] = {
["encounterID"] = 1925,
["source"] = "Commander Sarannis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17976,
},
[337682] = {
["source"] = "Ðx-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315157] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 161880,
},
[329492] = {
["source"] = "Vynlenin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[149404] = {
["source"] = "Podling Spitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84539,
},
[150428] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85082,
},
[31224] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23161] = {
["source"] = "Nikodaemons",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[210837] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319255] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[150429] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Prettyneet",
["npcID"] = 0,
},
[169883] = {
["source"] = "Vicious Felhunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84095,
},
[2096] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wew",
["npcID"] = 0,
},
[34800] = {
["source"] = "Bloodwarder Greenkeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18419,
},
[44271] = {
["encounterID"] = 1895,
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24555,
},
[153503] = {
["source"] = "Brownshugar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[154527] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77812,
},
[204697] = {
["type"] = "BUFF",
["source"] = "Volatile Scorpid",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 103224,
},
[26745] = {
["source"] = "Mazaeus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2336] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cilno",
["npcID"] = 0,
},
[171934] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86080,
},
[150433] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[185245] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[56814] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Uglyoldman",
["npcID"] = 0,
},
[278310] = {
["source"] = "Firstlight-SteamwheedleCartel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[333600] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Enraged Glutton",
["npcID"] = 163415,
},
[319266] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steelskin Vanguard",
["npcID"] = 157669,
},
[236440] = {
["source"] = "Aurinar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34801] = {
["source"] = "Rykna-Stormrage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79833] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zen'Kiki",
["npcID"] = 52239,
},
[333604] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tabulator Hymeris",
["npcID"] = 169312,
},
[327461] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Indomitable Schmitd",
["npcID"] = 161105,
},
[102359] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sassukee",
["npcID"] = 0,
},
[266030] = {
["source"] = "Darkmalekk-Quel'Thalas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108503] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Norml",
["npcID"] = 0,
},
[168868] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325418] = {
["source"] = "Spinemaw Acidgullet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167113,
},
[319275] = {
["source"] = "Stoneborn Skystalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159601,
},
[150439] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "All-Seeing Eye",
["npcID"] = 72783,
},
[104408] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostìtutê",
["npcID"] = 0,
},
[201633] = {
["source"] = "Earthen Wall Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100943,
},
[290608] = {
["source"] = "Boomlight-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329516] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sicklethorn Slicer",
["npcID"] = 161878,
},
[134058] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Block Warden Carmine",
["npcID"] = 124024,
},
[3408] = {
["source"] = "Rilafae",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317231] = {
["encounterID"] = 2366,
["source"] = "Xav the Unfallen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162329,
},
[325423] = {
["source"] = "Mawsworn Myrmidon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170628,
},
[201635] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cilno",
["npcID"] = 0,
},
[278326] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[3600] = {
["source"] = "Earthbind Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 2630,
},
[321330] = {
["source"] = "Darkmaul Channeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157328,
},
[325426] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167065,
},
[304949] = {
["source"] = "Deslan the Torturer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166987,
},
[333618] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tabulator Hymeris",
["npcID"] = 169312,
},
[156587] = {
["source"] = "Tinytatas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[201638] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Valdrys",
["npcID"] = 0,
},
[315192] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spinning Bookshelf",
["npcID"] = 161972,
},
[65008] = {
["source"] = "Mõjö-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[228260] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rojblake",
["npcID"] = 0,
},
[323385] = {
["source"] = "Edgarpoe-Quel'Thalas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327481] = {
["encounterID"] = 2357,
["source"] = "Kin-Tara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162059,
},
[169900] = {
["source"] = "Vicious Voidwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84099,
},
[313148] = {
["encounterID"] = 2397,
["source"] = "Porkadobo-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[223143] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lucidbtw",
["npcID"] = 0,
},
[325437] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[319294] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162817,
},
[211881] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[323392] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[57330] = {
["source"] = "Phurîan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[321345] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[255909] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[319298] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162817,
},
[242599] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dethixia",
["npcID"] = 0,
},
[341824] = {
["source"] = "Infectoria",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[80353] = {
["source"] = "Voiddene-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[298823] = {
["source"] = "Asiimov",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341826] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[11327] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[5760] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brukuthu",
["npcID"] = 0,
},
[193455] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maghrak",
["npcID"] = 0,
},
[335686] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[304970] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[186289] = {
["source"] = "Fastshoot",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[278350] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Caliente-Feathermoon",
["npcID"] = 0,
},
[304971] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[199600] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34550] = {
["type"] = "BUFF",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17975,
},
[104416] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostìtutê",
["npcID"] = 0,
},
[298831] = {
["source"] = "Mawsworn Sentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176402,
},
[150456] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323406] = {
["encounterID"] = 2365,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[304977] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[199603] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fusassin",
["npcID"] = 0,
},
[337742] = {
["source"] = "Pallaval the Biased",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159151,
},
[298836] = {
["source"] = "Friendzonë",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[7328] = {
["source"] = "Covfefe-Gurubashi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[298837] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Arcanlin-Proudmoore",
["npcID"] = 0,
},
[34551] = {
["type"] = "BUFF",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17975,
},
[319315] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329554] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321364] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165030,
},
[44534] = {
["source"] = "Wretched Bruiser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24689,
},
[61684] = {
["source"] = "Turtle",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[15487] = {
["encounterID"] = 2403,
["source"] = "Floofae-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[116705] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[264029] = {
["source"] = "Forbidden Dissector",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157577,
},
[298841] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pragmadik",
["npcID"] = 0,
},
[327510] = {
["type"] = "BUFF",
["source"] = "Mitslfd-Frostmourne",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331606] = {
["type"] = "DEBUFF",
["source"] = "Oppressive Banner",
["encounterID"] = 2366,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170234,
},
[176058] = {
["source"] = "Nûr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[8512] = {
["source"] = "Daloka-Lightninghoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[335706] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Conjured Wings",
["npcID"] = 171960,
},
[256948] = {
["source"] = "Ombra",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[266087] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Georonia",
["npcID"] = 0,
},
[130530] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66274,
},
[245686] = {
["source"] = "Asiimov",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[288613] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[57846] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 82188,
},
[34809] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 19633,
},
[321379] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thio",
["npcID"] = 0,
},
[198589] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zelx",
["npcID"] = 0,
},
[96231] = {
["source"] = "Mathiass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[198590] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Caliente-Feathermoon",
["npcID"] = 0,
},
[22910] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qiana Moonshadow",
["npcID"] = 81672,
},
[319334] = {
["source"] = "Jugnug",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153583,
},
[235450] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[331623] = {
["type"] = "BUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131044] = {
["source"] = "Sha Harbinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66424,
},
[331624] = {
["source"] = "Lilcoaco-Dalaran",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[12544] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 32724,
},
[321388] = {
["source"] = "Octöber",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115175] = {
["source"] = "Caiia-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323437] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[321390] = {
["source"] = "Shihar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323438] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greater Ardenmoth",
["npcID"] = 166073,
},
[228287] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dízz-Frostmourne",
["npcID"] = 0,
},
[329582] = {
["source"] = "Shunk-Quel'Thalas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[79852] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lupas",
["npcID"] = 82189,
},
[251837] = {
["source"] = "Söphië-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154569] = {
["source"] = "Biolante",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75207,
},
[115176] = {
["type"] = "BUFF",
["source"] = "Brewzree-Proudmoore",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79853] = {
["source"] = "Nethersworn Assassin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 116311,
},
[251839] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Oaksu",
["npcID"] = 0,
},
[329589] = {
["source"] = "Magickalelf-Whisperwind",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323446] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Withering Ardenmoth",
["npcID"] = 170769,
},
[77806] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Roague",
["npcID"] = 81997,
},
[321399] = {
["source"] = "Architect Lye",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165009,
},
[157644] = {
["source"] = "Onlyfatnugz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164812] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ber",
["npcID"] = 0,
},
[255937] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethudor",
["npcID"] = 0,
},
[242627] = {
["source"] = "Khadä",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203720] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[204744] = {
["encounterID"] = 1849,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315260] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 161936,
},
[190411] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oaksu",
["npcID"] = 0,
},
[37628] = {
["source"] = "Felsworn Prophet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91596,
},
[77808] = {
["source"] = "Frostmane Warrior",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41258,
},
[173006] = {
["source"] = "Beremus the Overgrowth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80700,
},
[87023] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Racket-EarthenRing",
["npcID"] = 0,
},
[163792] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[5217] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Udofire",
["npcID"] = 0,
},
[34557] = {
["encounterID"] = 1926,
["source"] = "High Botanist Freywinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17975,
},
[87024] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Fraan",
["npcID"] = 0,
},
[345985] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Valaraice",
["npcID"] = 0,
},
[171985] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345986] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Valaraice",
["npcID"] = 0,
},
[53755] = {
["source"] = "Iskinmobs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325509] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shard of Halkias",
["npcID"] = 164557,
},
[5761] = {
["source"] = "Loktan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101871] = {
["source"] = "Shriven-TheScryers",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[102383] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Celdah",
["npcID"] = 0,
},
[157652] = {
["source"] = "Auchenai Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77694,
},
[272272] = {
["source"] = "Ravenous Gorger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161692,
},
[339848] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 58965,
},
[101872] = {
["source"] = "Shriven-TheScryers",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[188370] = {
["source"] = "Themariachi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[268178] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Exaff-Azshara",
["npcID"] = 0,
},
[160726] = {
["source"] = "Khaelen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[45053] = {
["type"] = "BUFF",
["source"] = "Rageruu-EchoIsles",
["encounterID"] = 1894,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307087] = {
["source"] = "Kerbette",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333708] = {
["source"] = "Maniacal Soulbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160495,
},
[13953] = {
["source"] = "Kharanos Mountaineer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41181,
},
[153561] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[148442] = {
["source"] = "Shadowmoon Voidbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80220,
},
[270232] = {
["source"] = "Sfw-Draenor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307093] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cranjii",
["npcID"] = 0,
},
[325523] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Darkblade",
["npcID"] = 165515,
},
[319380] = {
["source"] = "Sinstone Construct",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159233,
},
[44286] = {
["encounterID"] = 1895,
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24555,
},
[311190] = {
["source"] = "Devourer Mite",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 156061,
},
[307095] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inertiia",
["npcID"] = 0,
},
[167898] = {
["source"] = "Brumos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307096] = {
["source"] = "Dalasarian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165851] = {
["source"] = "Bloom Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81630,
},
[79862] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Warlord Shoju",
["npcID"] = 82191,
},
[307098] = {
["source"] = "Nullz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[8258] = {
["source"] = "Kharanos Mountaineer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41181,
},
[83958] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[343960] = {
["source"] = "Nirio",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307101] = {
["source"] = "Crazzypasta",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[79863] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Roague",
["npcID"] = 81997,
},
[18562] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307103] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Winzling",
["npcID"] = 0,
},
[317343] = {
["source"] = "Georonia",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325535] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Houndmaster",
["npcID"] = 164562,
},
[130546] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[317346] = {
["source"] = "Georonia",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2641] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ozpreyii",
["npcID"] = 0,
},
[325538] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159424,
},
[185311] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brukuthu",
["npcID"] = 0,
},
[44544] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317349] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[337827] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wild Flayedwing",
["npcID"] = 172876,
},
[325541] = {
["source"] = "Highlord Darion Mograine",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 172323,
},
[2881] = {
["source"] = "Bastiah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333733] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204766] = {
["encounterID"] = 1849,
["source"] = "Crystalline Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108361,
},
[213981] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[198623] = {
["source"] = "Seona Fireweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108765,
},
[79866] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Warlord Shoju",
["npcID"] = 82191,
},
[185313] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[24450] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[333736] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "First Apprentice Malkrex",
["npcID"] = 165477,
},
[337832] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wild Flayedwing",
["npcID"] = 172876,
},
[25602] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maelgwyn",
["npcID"] = 81995,
},
[43265] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[307118] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thrandon",
["npcID"] = 0,
},
[115191] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[231390] = {
["source"] = "Jamesdoakes",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3377] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[3409] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[307120] = {
["source"] = "Bodà",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307121] = {
["source"] = "Inertiia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[79868] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alya",
["npcID"] = 82002,
},
[264119] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[113656] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[317361] = {
["source"] = "Transpriest",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[188389] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[115192] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[307123] = {
["source"] = "Bodà",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307124] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thrandon",
["npcID"] = 0,
},
[327602] = {
["source"] = "Dustwilt Scythehorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163992,
},
[14914] = {
["source"] = "Sonata-EarthenRing",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[223202] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kuyog-Illidan",
["npcID"] = 0,
},
[313269] = {
["source"] = "Lindie Springstock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149899,
},
[162794] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[321461] = {
["source"] = "Faralissë-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[223203] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kuyog-Illidan",
["npcID"] = 0,
},
[3953] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319417] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pilfer Bur'tok",
["npcID"] = 157036,
},
[75775] = {
["source"] = "Frostmane Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41146,
},
[168940] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77020,
},
[126457] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Everdrayn-Lightninghoof",
["npcID"] = 0,
},
[35076] = {
["source"] = "A'dal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18481,
},
[51714] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vigarst-Azralon",
["npcID"] = 0,
},
[309181] = {
["source"] = "Beastmastrr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44291] = {
["type"] = "BUFF",
["source"] = "Priestess Delrissa",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24560,
},
[44547] = {
["source"] = "Sister of Torment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24697,
},
[309182] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rednose",
["npcID"] = 0,
},
[199658] = {
["source"] = "Warios-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311231] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Susieq",
["npcID"] = 0,
},
[333757] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vecutis",
["npcID"] = 0,
},
[118779] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[321471] = {
["type"] = "BUFF",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164501,
},
[341949] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[104445] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostìtutê",
["npcID"] = 0,
},
[20484] = {
["encounterID"] = 2401,
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[115196] = {
["source"] = "Adrenaline",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[168944] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77020,
},
[34821] = {
["source"] = "Bloodwarder Steward",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18404,
},
[127483] = {
["source"] = "Deslan the Torturer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166987,
},
[190446] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323524] = {
["source"] = "Edgarpoe-Quel'Thalas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317381] = {
["source"] = "Houndmaster Loksey",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162955,
},
[307143] = {
["source"] = "Willard-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[317383] = {
["source"] = "Quilboar Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 150237,
},
[331718] = {
["source"] = "Mistveil Defender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171772,
},
[11971] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Etubrute",
["npcID"] = 82187,
},
[331721] = {
["source"] = "Mistveil Defender",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171772,
},
[51460] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315341] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[126462] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vitcon",
["npcID"] = 0,
},
[346060] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Imadk",
["npcID"] = 0,
},
[154617] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[20741] = {
["source"] = "Sunblade Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24762,
},
[125439] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[323538] = {
["encounterID"] = 2403,
["source"] = "High Adjudicator Aleez",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165410,
},
[35079] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Romulus",
["npcID"] = 165189,
},
[153595] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[45062] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fadespaladin",
["npcID"] = 0,
},
[90628] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[123904] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surefang",
["npcID"] = 0,
},
[166906] = {
["source"] = "Mawsworn Outrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175882,
},
[323542] = {
["type"] = "BUFF",
["source"] = "Unknown",
["encounterID"] = 2365,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165260,
},
[329686] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[190456] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brént",
["npcID"] = 0,
},
[175098] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 83945,
},
[155646] = {
["encounterID"] = 1686,
["source"] = "Vigilant Kaathar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75839,
},
[197625] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fadedmoon",
["npcID"] = 0,
},
[323547] = {
["source"] = "Adrenaline",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[341977] = {
["source"] = "Diseased Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170690,
},
[193530] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[307166] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Araxica",
["npcID"] = 0,
},
[154623] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77131,
},
[115203] = {
["encounterID"] = 2380,
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[87559] = {
["source"] = "Mammani",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331743] = {
["source"] = "Mistveil Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166276,
},
[327648] = {
["source"] = "Forsworn Inquisitor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168418,
},
[197628] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[290790] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Beautywithin",
["npcID"] = 0,
},
[321507] = {
["source"] = "Frostcambur-Kalecgos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[30213] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zig'arad",
["npcID"] = 58965,
},
[197630] = {
["source"] = "Eldrith-Nagrand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[30981] = {
["source"] = "Rangari Erdanii",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 84740,
},
[325605] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blighted Beast",
["npcID"] = 170087,
},
[321510] = {
["source"] = "Inshivia",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323559] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vardans-Ragnaros",
["npcID"] = 0,
},
[11972] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66282,
},
[327655] = {
["source"] = "Forsworn Champion",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168420,
},
[329703] = {
["source"] = "Dominance Soulbender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159106,
},
[323560] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Swrv",
["npcID"] = 0,
},
[32645] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319465] = {
["source"] = "Ambitious Duelist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164184,
},
[329704] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169447,
},
[339943] = {
["source"] = "Heavyhooves-Kael'thas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329706] = {
["source"] = "Mawsworn Outrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175882,
},
[348136] = {
["source"] = "Treewisperer-Cenarius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[193538] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fusassin",
["npcID"] = 0,
},
[339946] = {
["source"] = "Harambehealz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325612] = {
["source"] = "Ezello",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327661] = {
["source"] = "Melydie-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[348139] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[321519] = {
["source"] = "Chainer-Drak'Tharon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307185] = {
["source"] = "Bässcannon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[80396] = {
["source"] = "Rethôs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[309234] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Joraga",
["npcID"] = 0,
},
[20615] = {
["type"] = "DEBUFF",
["source"] = "Warlord Salaris",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24559,
},
[307187] = {
["source"] = "Walapalusa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34827] = {
["source"] = "Murktide Squallweaver",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 92901,
},
[313332] = {
["source"] = "Deslan the Torturer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166987,
},
[228354] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321525] = {
["source"] = "Mor'Bitan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163431,
},
[15620] = {
["encounterID"] = 1895,
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24555,
},
[307192] = {
["source"] = "Valargh-Windrunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203782] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[321527] = {
["source"] = "Dankpuss",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[32390] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[309242] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Joraga",
["npcID"] = 0,
},
[288765] = {
["source"] = "Baroness Vashj",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163461,
},
[307196] = {
["source"] = "Toolbît",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131089] = {
["source"] = "Koukou",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66213,
},
[228358] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131090] = {
["source"] = "Koukou",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66213,
},
[153616] = {
["encounterID"] = 1678,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[333821] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Archivist",
["npcID"] = 161896,
},
[290819] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maghrak",
["npcID"] = 0,
},
[321536] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krangle",
["npcID"] = 0,
},
[185358] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1329] = {
["source"] = "Reverrie-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34829] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86663,
},
[51723] = {
["source"] = "Kiffy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333827] = {
["source"] = "Advent Nevermore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167533,
},
[313350] = {
["source"] = "General Purpose Bunny ZTO",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 62167,
},
[344067] = {
["source"] = "Saladinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1449] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Randers",
["npcID"] = 0,
},
[165907] = {
["source"] = "Stribit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79728,
},
[342021] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Loyal Stoneborn",
["npcID"] = 174175,
},
[333831] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Odd Fungret",
["npcID"] = 171109,
},
[165908] = {
["source"] = "Borogahn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81043,
},
[333832] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Odd Fungret",
["npcID"] = 171109,
},
[262161] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jawzahr-KirinTor",
["npcID"] = 0,
},
[329737] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[159766] = {
["source"] = "Iron Piker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91597,
},
[346121] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 176422,
},
[186387] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[215056] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illusionary Saberfang",
["npcID"] = 165677,
},
[202770] = {
["source"] = "Metralleta-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327694] = {
["source"] = "Melydie-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319504] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[333839] = {
["source"] = "Rek the Hardened",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167534,
},
[176151] = {
["source"] = "Rookvondrak",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1833] = {
["source"] = "Adrenaline",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[153626] = {
["source"] = "Frostcambur-Kalecgos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[42766] = {
["source"] = "Boatjr-BlackDragonflight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[164889] = {
["source"] = "Corrupted Toad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73805,
},
[159770] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Grunt",
["npcID"] = 76189,
},
[331795] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1953] = {
["source"] = "Rampsys-Kel'Thuzad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333845] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167534,
},
[257040] = {
["source"] = "Ombra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323608] = {
["encounterID"] = 2404,
["source"] = "Mordretha, the Endless Empress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165946,
},
[2050] = {
["source"] = "Iwokin-Turalyon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323609] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ubeenpunked",
["npcID"] = 0,
},
[2098] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327705] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gozaimasu",
["npcID"] = 0,
},
[327706] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Chemoreaver",
["npcID"] = 0,
},
[79895] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tore",
["npcID"] = 82007,
},
[327708] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadowsimpin-Area52",
["npcID"] = 0,
},
[327709] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Judeaz",
["npcID"] = 0,
},
[337948] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vampyral",
["npcID"] = 0,
},
[9734] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Barbery the Crazy Cat Lady",
["npcID"] = 82009,
},
[257044] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2546] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[335903] = {
["source"] = "Daloka-Lightninghoof",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335904] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Akronos",
["npcID"] = 0,
},
[280615] = {
["source"] = "Komics",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[94743] = {
["source"] = "Popasquat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2738] = {
["source"] = "Forgecraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[79897] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 82007,
},
[2818] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[11334] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fkinmonk",
["npcID"] = 0,
},
[342051] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ber",
["npcID"] = 0,
},
[333861] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167533,
},
[11974] = {
["source"] = "Shadowmoon Void Priestess",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82196,
},
[159780] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Grunt",
["npcID"] = 76189,
},
[186401] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[12294] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[12550] = {
["source"] = "Anvil-Thane Thurgaden",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144154,
},
[319531] = {
["type"] = "DEBUFF",
["source"] = "Kul'tharok",
["encounterID"] = 2364,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162309,
},
[165925] = {
["source"] = "Borogahn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81043,
},
[159782] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ironmarch Grunt",
["npcID"] = 76189,
},
[194594] = {
["source"] = "Shaucy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323629] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159783] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stormwind Marine",
["npcID"] = 76436,
},
[321582] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[157736] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shemyasa",
["npcID"] = 0,
},
[159784] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stormwind Marine",
["npcID"] = 76436,
},
[319538] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[315443] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Chillpills-Malorne",
["npcID"] = 0,
},
[317491] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[3714] = {
["source"] = "Magdeth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321587] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159786] = {
["source"] = "Core Hound",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[3922] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[340020] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[118297] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61029,
},
[337973] = {
["source"] = "Balloney-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323639] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[319544] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323640] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodtusk Alpha",
["npcID"] = 165473,
},
[344118] = {
["source"] = "Frostcambur-Kalecgos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323641] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bloodtusk Alpha",
["npcID"] = 165473,
},
[184362] = {
["source"] = "Arlaus-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157742] = {
["source"] = "Ufga the Slicer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 73261,
},
[199721] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zaegrips-Area52",
["npcID"] = 0,
},
[315454] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aspirant Thales",
["npcID"] = 161060,
},
[184364] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hohen",
["npcID"] = 0,
},
[342076] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[246821] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Farmcraft",
["npcID"] = 0,
},
[337982] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[333887] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168845,
},
[204843] = {
["source"] = "Domitian-Gurubashi",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[206891] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kestrelclaw-Whisperwind",
["npcID"] = 0,
},
[337984] = {
["source"] = "Vurve-Khaz'goroth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323650] = {
["type"] = "DEBUFF",
["source"] = "Ghastly Parishioner",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165913,
},
[333889] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Norml",
["npcID"] = 0,
},
[319556] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[325700] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Collector",
["npcID"] = 165529,
},
[319557] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325701] = {
["source"] = "Depraved Collector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165529,
},
[323654] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337989] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Èuphoric-Illidan",
["npcID"] = 0,
},
[319560] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Emaciated Etherwyrm",
["npcID"] = 172703,
},
[297035] = {
["source"] = "Skylust",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[297037] = {
["source"] = "Ôzar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[12743] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Krosnis",
["npcID"] = 77488,
},
[327754] = {
["source"] = "Soulbreaker Trap",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168454,
},
[6500] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[297039] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Oaksu",
["npcID"] = 0,
},
[179252] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[6660] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arena Challenger",
["npcID"] = 161757,
},
[297040] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vanthor",
["npcID"] = 0,
},
[6788] = {
["source"] = "Ballindah",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[313424] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[262232] = {
["source"] = "Warios-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[288853] = {
["source"] = "Balloney-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[116768] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[148539] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[166969] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Olin Umberhide",
["npcID"] = 79315,
},
[338002] = {
["source"] = "Edgar the Collector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170079,
},
[317525] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338003] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Obliterator",
["npcID"] = 165414,
},
[338004] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Toiling Groundskeeper",
["npcID"] = 165415,
},
[344148] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[338005] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Toiling Groundskeeper",
["npcID"] = 165415,
},
[8004] = {
["source"] = "Ibaraky",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[344149] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[148542] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323673] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ballerpriest-Illidan",
["npcID"] = 0,
},
[199736] = {
["source"] = "Tareón",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[173116] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80700,
},
[331866] = {
["source"] = "Valissyra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[344154] = {
["source"] = "Chucknorra-Sentinels",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338011] = {
["source"] = "Violent Muckmare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166318,
},
[331868] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kboog",
["npcID"] = 0,
},
[338012] = {
["source"] = "Anima Fountain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166497,
},
[348251] = {
["source"] = "Nakai-BleedingHollow",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[313440] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Indomitable Schmitd",
["npcID"] = 161105,
},
[325727] = {
["source"] = "Tirrany-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[177214] = {
["source"] = "Mammani",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331871] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Contagious Droplet",
["npcID"] = 167935,
},
[321633] = {
["source"] = "Morbid Boneguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168266,
},
[323682] = {
["source"] = "Forsworn Skirmisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163501,
},
[331874] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plague-Ridden Survivor",
["npcID"] = 167949,
},
[325733] = {
["source"] = "Tirrany-Frostmourne",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315496] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[329831] = {
["source"] = "Balloney-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[303211] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dawnspark",
["npcID"] = 0,
},
[132168] = {
["source"] = "Bloodwrathh-Ragnaros",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115750] = {
["source"] = "Mathiass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[313451] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[311405] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lasrelda",
["npcID"] = 0,
},
[342122] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malacan",
["npcID"] = 0,
},
[311406] = {
["source"] = "Ikishouchin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329838] = {
["source"] = "Depraved Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159027,
},
[329840] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greytx",
["npcID"] = 0,
},
[307315] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[75309] = {
["source"] = "Popasquat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[208963] = {
["source"] = "Skyfury Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 105427,
},
[319603] = {
["type"] = "DEBUFF",
["source"] = "Echelon",
["encounterID"] = 2380,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164185,
},
[165961] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spwite",
["npcID"] = 0,
},
[120360] = {
["source"] = "Blackscalè",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311413] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lasrelda",
["npcID"] = 0,
},
[44314] = {
["encounterID"] = 1897,
["source"] = "Selin Fireheart",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[333939] = {
["source"] = "Endlurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165206,
},
[15496] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66282,
},
[75310] = {
["source"] = "Popasquat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[344179] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Somagore",
["npcID"] = 0,
},
[346227] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342132] = {
["source"] = "Melydie-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317561] = {
["source"] = "Bloodbeak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153964,
},
[311418] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nixíe",
["npcID"] = 0,
},
[342135] = {
["source"] = "Nekthara the Mangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162744,
},
[272512] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Farmcraft",
["npcID"] = 0,
},
[319611] = {
["encounterID"] = 2380,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338041] = {
["source"] = "Unclericox",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335994] = {
["source"] = "Oghorath-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[246852] = {
["source"] = "Rectalbreach",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321662] = {
["source"] = "Morbid Boneguard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168266,
},
[323710] = {
["source"] = "Priimus-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[246853] = {
["source"] = "Chainer-Drak'Tharon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[280709] = {
["source"] = "Mekkie",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340094] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cozzeffect-Tichondrius",
["npcID"] = 0,
},
[327808] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163520,
},
[5221] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Udofire",
["npcID"] = 0,
},
[295045] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[185422] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[203852] = {
["source"] = "Alishå",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[223306] = {
["source"] = "Xanem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[105518] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327812] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163520,
},
[321669] = {
["encounterID"] = 2392,
["source"] = "Illusionary Clone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165108,
},
[150612] = {
["source"] = "Haratha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84288,
},
[333957] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[173138] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80700,
},
[11977] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pazo Stonehoof",
["npcID"] = 82006,
},
[88625] = {
["source"] = "Treewisperer-Cenarius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[150614] = {
["source"] = "Haratha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84288,
},
[319626] = {
["encounterID"] = 2364,
["source"] = "Kul'tharok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162309,
},
[270481] = {
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135002,
},
[43549] = {
["source"] = "Forgecraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[158806] = {
["source"] = "Noxious Riverhopper",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78673,
},
[336010] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[212048] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[188499] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sinshiki",
["npcID"] = 0,
},
[333964] = {
["source"] = "Amodelterror-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[6789] = {
["source"] = "Georonia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[206930] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[311441] = {
["source"] = "Nixíe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204883] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thio",
["npcID"] = 0,
},
[220242] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Disturbed Nightmare",
["npcID"] = 169270,
},
[311444] = {
["source"] = "Kanya",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331923] = {
["source"] = "Avowed Cryptkeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163590,
},
[162906] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xial",
["npcID"] = 0,
},
[107570] = {
["source"] = "Vulgarius-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[325782] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkwarren Spitter",
["npcID"] = 164038,
},
[157788] = {
["source"] = "Sargerei Arbiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77080,
},
[342165] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176218] = {
["source"] = "Smokemaster Snarl",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81749,
},
[162908] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85760,
},
[264352] = {
["source"] = "Lukelol",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[158813] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corrupted Toad",
["npcID"] = 73805,
},
[280735] = {
["source"] = "Arlaus-EarthenRing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[126513] = {
["source"] = "Mistlli-Aman'Thul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197721] = {
["source"] = "Tinkerbizzle-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323739] = {
["source"] = "Forsworn Helion",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168681,
},
[325787] = {
["source"] = "Thragan-WyrmrestAccord",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44319] = {
["encounterID"] = 1898,
["source"] = "Vexallus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24744,
},
[323740] = {
["source"] = "Forsworn Squad-Leader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163520,
},
[212056] = {
["source"] = "Holyhoov-AlteracMountains",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336027] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342171] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Holyshadow-Icecrown",
["npcID"] = 0,
},
[336028] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[46367] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26579,
},
[331934] = {
["source"] = "Awokenfox-Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311457] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thicksauce",
["npcID"] = 0,
},
[323744] = {
["source"] = "Forsworn Stealthclaw",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163506,
},
[311458] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nilsysh-Proudmoore",
["npcID"] = 0,
},
[325793] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Houndmaster",
["npcID"] = 164562,
},
[311459] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jerogan",
["npcID"] = 0,
},
[185438] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[331937] = {
["source"] = "Amodelterror-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311460] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cilno",
["npcID"] = 0,
},
[157794] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76263,
},
[150627] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73395,
},
[344225] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ber",
["npcID"] = 0,
},
[321700] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Soulfused Construct",
["npcID"] = 165147,
},
[331939] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skanknspank",
["npcID"] = 0,
},
[317605] = {
["source"] = "Rek the Hardened",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167534,
},
[36897] = {
["source"] = "Momomi",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[280746] = {
["source"] = "Rockiefresh-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323749] = {
["encounterID"] = 2403,
["source"] = "Empty Anima Vessel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166034,
},
[325797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Depraved Houndmaster",
["npcID"] = 164562,
},
[323750] = {
["encounterID"] = 2365,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311464] = {
["source"] = "Vinakalon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2963] = {
["source"] = "Cyza",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[342181] = {
["source"] = "Ibaraky",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Praxedis-Silvermoon",
["npcID"] = 0,
},
[49184] = {
["source"] = "Phurîan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[346278] = {
["source"] = "Valargh-Windrunner",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157797] = {
["source"] = "Sargerei Arbiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77080,
},
[167012] = {
["source"] = "Phantom Pearltusk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79148,
},
[311467] = {
["source"] = "Kataclysm",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[50464] = {
["source"] = "Moonstrider-Perenolde",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311468] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Khanza-Stormrage",
["npcID"] = 0,
},
[323755] = {
["source"] = "Treeznuts-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327851] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tanvi",
["npcID"] = 0,
},
[44577] = {
["source"] = "Sunblade Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24815,
},
[311470] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Chainbaiting-Area52",
["npcID"] = 0,
},
[115767] = {
["source"] = "Bloodwrathh-Ragnaros",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[191587] = {
["source"] = "Chumar-Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336044] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3411] = {
["source"] = "Itzdaark-Illidan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[235614] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 118889,
},
[333997] = {
["source"] = "Endlurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165206,
},
[342189] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loyal Stoneborn",
["npcID"] = 174175,
},
[321712] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[323760] = {
["source"] = "Westmarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311474] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zantasy",
["npcID"] = 0,
},
[173159] = {
["source"] = "Botani Roottender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86581,
},
[311475] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Holyshadow-Icecrown",
["npcID"] = 0,
},
[323762] = {
["source"] = "Treeznuts-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[50977] = {
["source"] = "Goree",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311476] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jeixon-Staghelm",
["npcID"] = 0,
},
[340145] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Therealzenko",
["npcID"] = 0,
},
[3763] = {
["source"] = "Connorkane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311477] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jeixon-Staghelm",
["npcID"] = 0,
},
[307382] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Myndrios",
["npcID"] = 0,
},
[311478] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jeixon-Staghelm",
["npcID"] = 0,
},
[156779] = {
["source"] = "Shataki",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307383] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Myndrios",
["npcID"] = 0,
},
[54049] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Haanum",
["npcID"] = 417,
},
[311479] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vallicelma",
["npcID"] = 0,
},
[3923] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307384] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Themajher",
["npcID"] = 0,
},
[3955] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[344244] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thio",
["npcID"] = 0,
},
[311481] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadxw",
["npcID"] = 0,
},
[319673] = {
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157069,
},
[255073] = {
["source"] = "Gajidruid-TwistingNether",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311483] = {
["source"] = "Titanerous",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[193641] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325818] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baroness Draka",
["npcID"] = 167393,
},
[311484] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[51490] = {
["source"] = "Masondixon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311485] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Messerschmdt",
["npcID"] = 0,
},
[236645] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Beendejô",
["npcID"] = 0,
},
[311486] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zneerg",
["npcID"] = 0,
},
[321725] = {
["type"] = "BUFF",
["source"] = "Illusionary Clone",
["encounterID"] = 2392,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165108,
},
[199786] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zohee-ArgentDawn",
["npcID"] = 0,
},
[311487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Eclara-Undermine",
["npcID"] = 0,
},
[311488] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[280772] = {
["source"] = "Scabbylette-Duskwood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[315584] = {
["source"] = "Fursho",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311489] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[280773] = {
["source"] = "Haydonius-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340158] = {
["source"] = "Zepally-Kel'Thuzad",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[195692] = {
["source"] = "Boatjr-BlackDragonflight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hooperist",
["npcID"] = 0,
},
[150642] = {
["source"] = "Grom'kar Pyro",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75387,
},
[159857] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[340160] = {
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 173655,
},
[336065] = {
["source"] = "Hollus-Nagrand",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[280776] = {
["source"] = "ßoromir-Saurfang",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311493] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jackthemonk",
["npcID"] = 0,
},
[340162] = {
["source"] = "Granolà-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[162930] = {
["source"] = "Bloodthorn Striker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78857,
},
[311494] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lawsae",
["npcID"] = 0,
},
[173169] = {
["source"] = "Turbulent Steamfury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81685,
},
[311495] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jerixa",
["npcID"] = 0,
},
[346307] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Marrow Scraper",
["npcID"] = 169055,
},
[311496] = {
["source"] = "Allyeoan-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311497] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sylocke",
["npcID"] = 0,
},
[253033] = {
["source"] = "Ragehaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311498] = {
["source"] = "Bordercrosse",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311499] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lizardninja-Proudmoore",
["npcID"] = 0,
},
[323786] = {
["source"] = "Kyrian Dark-Praetor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163524,
},
[163957] = {
["source"] = "Fungus Covered Shambler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80721,
},
[173172] = {
["source"] = "Turbulent Steamfury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81685,
},
[80451] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[173173] = {
["source"] = "Gorge Rylak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84151,
},
[150648] = {
["source"] = "Gloomshade Howler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 74169,
},
[217200] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolyz",
["npcID"] = 0,
},
[173174] = {
["source"] = "Gorge Rylak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84151,
},
[232559] = {
["source"] = "Jabalan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176246] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323792] = {
["type"] = "DEBUFF",
["source"] = "Coalesced Anima",
["encounterID"] = 2358,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165807,
},
[288981] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gresen",
["npcID"] = 0,
},
[160889] = {
["source"] = "Fatbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[153722] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Prettyneet",
["npcID"] = 0,
},
[176248] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Berdret",
["npcID"] = 0,
},
[325844] = {
["source"] = "Dustwilt Acidmaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163991,
},
[201846] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[194679] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[325846] = {
["source"] = "Manifestation of Greed",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166685,
},
[319703] = {
["type"] = "DEBUFF",
["source"] = "Echelon",
["encounterID"] = 2380,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164185,
},
[128064] = {
["source"] = "Skittering Doomstinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85562,
},
[323800] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[130624] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66396,
},
[321753] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Leeched Soul",
["npcID"] = 165152,
},
[84038] = {
["source"] = "Timberwolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[17174] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Restless Foreman",
["npcID"] = 82083,
},
[34856] = {
["source"] = "Bloodfalcon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18155,
},
[338137] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 172995,
},
[325851] = {
["source"] = "Manifestation of Envy",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166718,
},
[270562] = {
["source"] = "Vulkos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323804] = {
["source"] = "Kyrian Dark-Praetor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163524,
},
[317661] = {
["source"] = "Etherdiver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163503,
},
[264420] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[83015] = {
["source"] = "Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 87519,
},
[589] = {
["source"] = "Voidallah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[270564] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thergrun",
["npcID"] = 0,
},
[161919] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73412,
},
[55078] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Búinn-Stormrage",
["npcID"] = 0,
},
[346332] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340189] = {
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 173655,
},
[325855] = {
["source"] = "Dustwilt Acidmaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163991,
},
[135299] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[10060] = {
["source"] = "Howlyberry",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[633] = {
["source"] = "Olumasp-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[155777] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Smóke-Lightninghoof",
["npcID"] = 0,
},
[173183] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[340191] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[313571] = {
["source"] = "Aimerspriest",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[117828] = {
["source"] = "Lethali",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[673] = {
["source"] = "Cosimara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[173184] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[323811] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[697] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[342242] = {
["source"] = "Rampsys-Kel'Thuzad",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[148612] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "All-Seeing Eye",
["npcID"] = 72783,
},
[83017] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81749,
},
[334053] = {
["encounterID"] = 2358,
["source"] = "Oryphrion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162060,
},
[166019] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82444,
},
[342245] = {
["source"] = "Gadral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48168] = {
["source"] = "Matron Nessa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 96947,
},
[321768] = {
["type"] = "DEBUFF",
["source"] = "Domitian-Gurubashi",
["encounterID"] = 2365,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342246] = {
["source"] = "Gadral",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[222333] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[342247] = {
["source"] = "Gadral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[228477] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[264434] = {
["source"] = "Smor-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334058] = {
["source"] = "Sylestra-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319724] = {
["type"] = "BUFF",
["source"] = "Undying Stonefiend",
["encounterID"] = 2380,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164363,
},
[321772] = {
["type"] = "BUFF",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164804,
},
[845] = {
["source"] = "Rageruu-EchoIsles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[313583] = {
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156943,
},
[162951] = {
["source"] = "Crimsonwing Wasp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81168,
},
[222336] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[268534] = {
["source"] = "Lethali",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319728] = {
["source"] = "The Accuser",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157064,
},
[325872] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Obliterator",
["npcID"] = 165414,
},
[305395] = {
["source"] = "Allyeoan-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323825] = {
["encounterID"] = 2404,
["source"] = "Grasping Rift",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165994,
},
[340208] = {
["source"] = "Mistveil Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 173655,
},
[196741] = {
["source"] = "Kickh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327923] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[325876] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Obliterator",
["npcID"] = 165414,
},
[196742] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[327925] = {
["source"] = "Mephiles the Loyal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164128,
},
[313591] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[118345] = {
["source"] = "Primal Earth Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61056,
},
[114250] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Quiñ",
["npcID"] = 0,
},
[100940] = {
["type"] = "DEBUFF",
["source"] = "Garaxxas",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24555,
},
[307452] = {
["source"] = "Lost Sybille",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157588,
},
[327930] = {
["source"] = "The Fearstalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164618,
},
[198793] = {
["source"] = "Araeriisdh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1122] = {
["source"] = "Decrepiti",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307454] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[18328] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormwind Sea Wolf",
["npcID"] = 76085,
},
[109132] = {
["source"] = "Nairik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[9613] = {
["source"] = "Felstorm Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66270,
},
[325886] = {
["source"] = "ßoromir-Saurfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[163983] = {
["source"] = "Khargax the Devourer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81537,
},
[336126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[174223] = {
["source"] = "Auchenai Warden",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77704,
},
[150674] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73395,
},
[34861] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bubblewrapx",
["npcID"] = 0,
},
[43308] = {
["source"] = "Ashes",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[256134] = {
["source"] = "Inertiia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329987] = {
["source"] = "Justice",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164197,
},
[327940] = {
["source"] = "The Accuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168536,
},
[157843] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75091,
},
[329989] = {
["source"] = "Justice",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164197,
},
[327942] = {
["source"] = "Windfury Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6112,
},
[329990] = {
["source"] = "Great Granitefur",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 158978,
},
[1490] = {
["source"] = "Winden-Ragnaros",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[152725] = {
["source"] = "Brownshugar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336135] = {
["source"] = "Chugloktal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[123981] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[34350] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18422,
},
[131225] = {
["source"] = "Tommyßahama",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[191634] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[323852] = {
["type"] = "BUFF",
["source"] = "Ghastly Parishioner",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165913,
},
[334091] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[336139] = {
["source"] = "Jabalan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[210065] = {
["source"] = "Peepkinz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1714] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[270613] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tome of War",
["npcID"] = 170662,
},
[95826] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82506,
},
[79956] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nevo",
["npcID"] = 81999,
},
[34351] = {
["source"] = "Mutate Fleshlasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19598,
},
[1850] = {
["source"] = "Pãpêrcût",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340241] = {
["source"] = "Wildkingdom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[309525] = {
["source"] = "Westmarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327955] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[346385] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323860] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Virulent Pest",
["npcID"] = 159856,
},
[309526] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Barste",
["npcID"] = 0,
},
[327956] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[7751] = {
["source"] = "Deliveryßoy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[309528] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Barste",
["npcID"] = 0,
},
[64044] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rojblake",
["npcID"] = 0,
},
[113746] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[156829] = {
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78437,
},
[8334] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[309531] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Syrifdruid",
["npcID"] = 0,
},
[34352] = {
["source"] = "Sunseeker Researcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18421,
},
[44335] = {
["type"] = "DEBUFF",
["source"] = "Leafmealone-Jubei'Thos",
["encounterID"] = 1898,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[260242] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[309534] = {
["source"] = "Inertiia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[123986] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[260243] = {
["source"] = "Fuldar-Hydraxis",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[55342] = {
["source"] = "Naavu",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[70233] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maowlao",
["npcID"] = 0,
},
[2484] = {
["source"] = "Xiaozhi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[272678] = {
["encounterID"] = 2401,
["source"] = "Rectalbreach",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2580] = {
["source"] = "Jamesdoakes",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2660] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgecraft",
["npcID"] = 0,
},
[332066] = {
["source"] = "Danellos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[272682] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Breakman",
["npcID"] = 0,
},
[172193] = {
["source"] = "Deranged Plunderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86216,
},
[291113] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Raekel",
["npcID"] = 0,
},
[317734] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[153764] = {
["type"] = "BUFF",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75927,
},
[2948] = {
["source"] = "Roostér-Darkspear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[119381] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surefang",
["npcID"] = 0,
},
[342309] = {
["source"] = "Pyxal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79962] = {
["source"] = "Varlean",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 96946,
},
[255129] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostìtutê",
["npcID"] = 0,
},
[24858] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Treebear-Kil'jaeden",
["npcID"] = 0,
},
[167076] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321834] = {
["encounterID"] = 2392,
["source"] = "Mistcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164501,
},
[34354] = {
["source"] = "Sunseeker Researcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18421,
},
[342312] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Niya, As Xavius",
["npcID"] = 160466,
},
[198817] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Warrien",
["npcID"] = 0,
},
[167077] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[344361] = {
["source"] = "Brumos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[274738] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surefang",
["npcID"] = 0,
},
[196770] = {
["source"] = "Phurîan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323885] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Diseased Galescreamer",
["npcID"] = 170456,
},
[342316] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thicknwarm",
["npcID"] = 0,
},
[19483] = {
["source"] = "Infernal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 89,
},
[165031] = {
["source"] = "Sargerei Spirit-Tender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77131,
},
[198819] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Overlorde-TwistingNether",
["npcID"] = 0,
},
[342317] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Book Appraiser",
["npcID"] = 162476,
},
[168103] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[274742] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surefang",
["npcID"] = 0,
},
[124503] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34355] = {
["source"] = "Sunseeker Researcher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18421,
},
[3716] = {
["encounterID"] = 1849,
["source"] = "Barmon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[51505] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[332082] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Salvaged Praetor",
["npcID"] = 169959,
},
[199845] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Psyfiend",
["npcID"] = 101398,
},
[162986] = {
["source"] = "Scavenging Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83448,
},
[161963] = {
["source"] = "Dol'mak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80250,
},
[154796] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Francypants",
["npcID"] = 0,
},
[330038] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zugdog",
["npcID"] = 0,
},
[336182] = {
["source"] = "Kynytha-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154797] = {
["source"] = "Dankpuss",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164012] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[33076] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Foxcoin",
["npcID"] = 0,
},
[34356] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[35124] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[325947] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[107100] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73395,
},
[124506] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[55090] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[270661] = {
["source"] = "Sylvacrap",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79968] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 61839,
},
[73313] = {
["source"] = "Runnymede",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[114780] = {
["source"] = "Bodà",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[115804] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dízz-Frostmourne",
["npcID"] = 0,
},
[159922] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[5672] = {
["source"] = "Healing Stream Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 3527,
},
[22812] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Aplusx",
["npcID"] = 0,
},
[199854] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[151732] = {
["source"] = "Grom'kar Pyro",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75387,
},
[171186] = {
["source"] = "Silverwing Kaliri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82175,
},
[188592] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[168115] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[305483] = {
["source"] = "Ibaraky",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[167092] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79510,
},
[305484] = {
["source"] = "Shawdysham",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34358] = {
["source"] = "Sunseeker Chemist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19486,
},
[162997] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Smackmittens",
["npcID"] = 0,
},
[6408] = {
["source"] = "Onin MacHammar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144120,
},
[305485] = {
["source"] = "Ibaraky",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[156856] = {
["source"] = "Grom'tash the Destructor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77889,
},
[48181] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338256] = {
["source"] = "Biggdaddy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34359] = {
["source"] = "Sunseeker Chemist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19486,
},
[34615] = {
["source"] = "Nethervine Inciter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19511,
},
[198837] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[334162] = {
["source"] = "Malifis",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166908,
},
[258222] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gorged Decayfly",
["npcID"] = 170768,
},
[330067] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[155835] = {
["source"] = "Samoanbeast",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198838] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330069] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[305497] = {
["source"] = "Jabalan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198839] = {
["source"] = "Earthen Wall Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100943,
},
[80486] = {
["source"] = "Resemblance",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334167] = {
["source"] = "Malifis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166908,
},
[334168] = {
["source"] = "Toying-Sargeras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34360] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[34616] = {
["source"] = "Nethervine Inciter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19511,
},
[344408] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rencissa the Dynamo",
["npcID"] = 159696,
},
[51510] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Breakman",
["npcID"] = 0,
},
[319836] = {
["encounterID"] = 1897,
["source"] = "Firstlight-SteamwheedleCartel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44599] = {
["source"] = "Sunblade Physician",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24687,
},
[346458] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338268] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[317791] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[311648] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[119907] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[317792] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[79976] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 50023,
},
[214202] = {
["type"] = "BUFF",
["source"] = "Covfefe-Gurubashi",
["encounterID"] = 1897,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34361] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18422,
},
[228537] = {
["source"] = "Qixoni",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319843] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steelskin Vanguard",
["npcID"] = 157669,
},
[216251] = {
["source"] = "Inshoxicated-Rivendare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79977] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Naanae",
["npcID"] = 61840,
},
[338274] = {
["source"] = "Hydra Seed",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 172995,
},
[44600] = {
["source"] = "Sunblade Physician",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24687,
},
[30621] = {
["source"] = "Nethervine Inciter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19511,
},
[55095] = {
["source"] = "Chucknorra-Sentinels",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323943] = {
["encounterID"] = 2359,
["source"] = "Devos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162061,
},
[334182] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aspirant Thales",
["npcID"] = 160211,
},
[40505] = {
["source"] = "Ironforge Mountaineer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 727,
},
[309610] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hotdam",
["npcID"] = 0,
},
[319849] = {
["source"] = "Shaucy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[305515] = {
["encounterID"] = 2326,
["source"] = "Ravnyr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156501,
},
[169156] = {
["source"] = "Lesser Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77517,
},
[315755] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325994] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[309613] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kroola",
["npcID"] = 0,
},
[309614] = {
["source"] = "Treeznuts-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330092] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[313711] = {
["source"] = "Souldawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[309616] = {
["source"] = "Treeznuts-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[79468] = {
["source"] = "Woggugatx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159944] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[73325] = {
["source"] = "Ombra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[124007] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xuen",
["npcID"] = 63508,
},
[309619] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Naellynn",
["npcID"] = 0,
},
[313715] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Windy, As Anduin",
["npcID"] = 161156,
},
[315763] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317811] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 163389,
},
[309621] = {
["source"] = "Goobiemagoo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[264571] = {
["type"] = "BUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[309622] = {
["source"] = "Gaakin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334196] = {
["source"] = "Amodelterror-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[116841] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Collider",
["npcID"] = 0,
},
[194759] = {
["source"] = "Tarkahyanda",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[154828] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81769,
},
[203975] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Willny",
["npcID"] = 0,
},
[155853] = {
["source"] = "Blindcantsee",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[124009] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xuen",
["npcID"] = 63508,
},
[334200] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Korrim the Cunning",
["npcID"] = 161613,
},
[159949] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Leadspitter",
["npcID"] = 76651,
},
[311676] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330106] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vroth",
["npcID"] = 161484,
},
[175308] = {
["source"] = "Char the Burning",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82311,
},
[173261] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86620,
},
[175309] = {
["source"] = "Char the Burning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82311,
},
[197835] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dbreezy",
["npcID"] = 0,
},
[137427] = {
["source"] = "Hunter Bal'ra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 88672,
},
[334208] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Argent Healer",
["npcID"] = 171332,
},
[278919] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blighted Subduer",
["npcID"] = 170737,
},
[326018] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167117,
},
[278920] = {
["source"] = "Invasive Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 174730,
},
[309637] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fadedowl",
["npcID"] = 0,
},
[44604] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24685,
},
[309638] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Killerjn",
["npcID"] = 0,
},
[53563] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[332164] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Avatar of Aliothe",
["npcID"] = 170400,
},
[326021] = {
["source"] = "Spinemaw Gorger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172312,
},
[311688] = {
["source"] = "Deadroll",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[210126] = {
["source"] = "Vorpalus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[346502] = {
["source"] = "Hunerdemon-Quel'Thalas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332168] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Avatar of Aliothe",
["npcID"] = 170400,
},
[315787] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[309645] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thicknwarm",
["npcID"] = 0,
},
[44605] = {
["source"] = "Sunblade Magister",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24685,
},
[61243] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336267] = {
["source"] = "Biggabonk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332172] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Avatar of Aliothe",
["npcID"] = 170400,
},
[116847] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[54844] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vegn",
["npcID"] = 0,
},
[154840] = {
["source"] = "Soulbinder Tuulani",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79248,
},
[196819] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[274837] = {
["source"] = "Cleorapta",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[272790] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maghrak",
["npcID"] = 0,
},
[274838] = {
["source"] = "Cleorapta",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326032] = {
["source"] = "Manifestation of Gluttony",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160455,
},
[319889] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pilfer Bur'tok",
["npcID"] = 157036,
},
[58172] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319890] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stitched Sorter",
["npcID"] = 165044,
},
[210131] = {
["source"] = "Killclaw the Terrible",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153266,
},
[332177] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sicklethorn Slicer",
["npcID"] = 161878,
},
[342416] = {
["source"] = "Melydie-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34879] = {
["source"] = "Bloodwarder Falconer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17994,
},
[338321] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gozaimasu",
["npcID"] = 0,
},
[319892] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330131] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ethudor",
["npcID"] = 0,
},
[44606] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24685,
},
[330132] = {
["source"] = "Drakeyy-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[145629] = {
["encounterID"] = 2381,
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[163035] = {
["source"] = "Scavenging Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83448,
},
[208086] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Jawzahr-KirinTor",
["npcID"] = 0,
},
[212182] = {
["source"] = "Abbacab",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307611] = {
["source"] = "Cleveland",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[342423] = {
["source"] = "Domitian-Gurubashi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[193753] = {
["source"] = "Lilhorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332186] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[159966] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Leadspitter",
["npcID"] = 76651,
},
[323996] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[305567] = {
["encounterID"] = 2326,
["source"] = "Ravnyr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156501,
},
[53822] = {
["source"] = "Angalglass",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160991] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326046] = {
["source"] = "Spinemaw Staghorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167111,
},
[346524] = {
["source"] = "Plagueborn Slime",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 160703,
},
[311713] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plagueborn Slime",
["npcID"] = 160029,
},
[321952] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 164929,
},
[2549] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2565] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2645] = {
["source"] = "Aperturelabs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2661] = {
["source"] = "Forgecraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[281000] = {
["source"] = "Rageruu-EchoIsles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[171233] = {
["source"] = "Biolante",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75207,
},
[205021] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[193759] = {
["source"] = "Ynde",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326054] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338344] = {
["source"] = "Proudtotem-Kargath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34626] = {
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[272817] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Greenshadow-SteamwheedleCartel",
["npcID"] = 0,
},
[326059] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[319916] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "General Alver",
["npcID"] = 160095,
},
[44353] = {
["type"] = "DEBUFF",
["source"] = "Vexallus",
["encounterID"] = 1898,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24744,
},
[205025] = {
["source"] = "Octöber",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[173285] = {
["source"] = "Spore Shambler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82265,
},
[126582] = {
["source"] = "Mistlli-Aman'Thul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[119415] = {
["source"] = "Rampsys-Kel'Thuzad",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321968] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[326064] = {
["source"] = "Faeliyn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[299445] = {
["source"] = "Samvel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[207076] = {
["source"] = "Wilsyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317877] = {
["source"] = "Stoneborn Rebel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156084,
},
[157931] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76263,
},
[313783] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Accuser",
["npcID"] = 160193,
},
[118905] = {
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61245,
},
[317880] = {
["source"] = "Stoneborn Steelwing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158992,
},
[56641] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[196840] = {
["source"] = "Daloka-Lightninghoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[115834] = {
["source"] = "Kàrina-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317882] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[116858] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shemyasa",
["npcID"] = 0,
},
[338360] = {
["source"] = "Harika the Horrid",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165290,
},
[162029] = {
["source"] = "Zukaza",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80296,
},
[156910] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[120954] = {
["type"] = "BUFF",
["source"] = "Brewzree-Proudmoore",
["encounterID"] = 2380,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[210152] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qixoni",
["npcID"] = 0,
},
[328124] = {
["type"] = "BUFF",
["source"] = "Undying Stonefiend",
["encounterID"] = 2380,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164363,
},
[328125] = {
["encounterID"] = 2380,
["source"] = "Undying Stonefiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164363,
},
[19236] = {
["type"] = "BUFF",
["source"] = "Floofae-Draka",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319935] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Steelskin Brutalizer",
["npcID"] = 156591,
},
[324031] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shemyasa",
["npcID"] = 0,
},
[225512] = {
["source"] = "Jerenome",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[48707] = {
["source"] = "Smor-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[334271] = {
["source"] = "Eliud",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[297412] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lightbanter",
["npcID"] = 0,
},
[317890] = {
["source"] = "Crimson Assassin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165061,
},
[319938] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[236776] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Breakman",
["npcID"] = 0,
},
[131317] = {
["source"] = "Toying-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334275] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Orecraft",
["npcID"] = 0,
},
[319941] = {
["encounterID"] = 2380,
["source"] = "Echelon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164185,
},
[324037] = {
["source"] = "Nixíe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[317894] = {
["source"] = "Stoneborn Rebel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160823,
},
[334277] = {
["source"] = "Roostér-Darkspear",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324039] = {
["source"] = "Nixíe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[12051] = {
["source"] = "Frostcambur-Kalecgos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317898] = {
["source"] = "Endlurker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165206,
},
[326090] = {
["source"] = "Spinemaw Reaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167116,
},
[321995] = {
["source"] = "Sinnarius-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326092] = {
["source"] = "Spinemaw Reaver",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167116,
},
[197874] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jacknicholsn-Blade'sEdge",
["npcID"] = 0,
},
[204018] = {
["source"] = "Stronguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[86659] = {
["source"] = "Mitslfd-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[184565] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322000] = {
["source"] = "Architect Halen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165008,
},
[317905] = {
["source"] = "Stoneborn Skystalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159601,
},
[346574] = {
["source"] = "Gruffigus-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340431] = {
["source"] = "Realzs-Illidan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[58180] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Udofire",
["npcID"] = 0,
},
[174328] = {
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76177,
},
[317908] = {
["source"] = "Crimson Assassin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165061,
},
[264667] = {
["type"] = "BUFF",
["source"] = "Turd",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[44614] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204021] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319957] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Echo of the Hero",
["npcID"] = 162400,
},
[334292] = {
["source"] = "Heliios",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[8042] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[303578] = {
["source"] = "Crawler Egg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 155769,
},
[334295] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Châos",
["npcID"] = 0,
},
[8212] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rubyashe",
["npcID"] = 0,
},
[167164] = {
["source"] = "Earthen Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86439,
},
[311771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 160044,
},
[311772] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Trapped Sylvar",
["npcID"] = 160044,
},
[334298] = {
["source"] = "Vurve-Khaz'goroth",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[169213] = {
["source"] = "Earthworker Berethal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84688,
},
[163070] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ravenspeaker Statue",
["npcID"] = 86590,
},
[213241] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[19750] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[317920] = {
["source"] = "Pphandsjr",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[228600] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zohee-ArgentDawn",
["npcID"] = 0,
},
[319970] = {
["source"] = "Pãpêrcût",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[117380] = {
["source"] = "Moonshell Crawler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 84341,
},
[163073] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[213243] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[342497] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Niya, As Xavius",
["npcID"] = 160466,
},
[184575] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[324068] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Contorted",
["npcID"] = 0,
},
[232698] = {
["source"] = "Spönge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[11540] = {
["source"] = "Pera Firestone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64480,
},
[270831] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brittlebark Manifestation",
["npcID"] = 165677,
},
[24870] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maimaimai",
["npcID"] = 0,
},
[264689] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Naydine",
["npcID"] = 0,
},
[187650] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lyranya",
["npcID"] = 0,
},
[158982] = {
["source"] = "Lunarfall Goren",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 83628,
},
[342506] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[143625] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Clern",
["npcID"] = 0,
},
[324079] = {
["encounterID"] = 2404,
["source"] = "Mordretha, the Endless Empress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165946,
},
[317936] = {
["source"] = "Forsworn Mender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163459,
},
[80012] = {
["source"] = "Qiana Moonshadow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81672,
},
[219393] = {
["source"] = "Whillphur",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326128] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[248062] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Farmcraft",
["npcID"] = 0,
},
[334320] = {
["source"] = "Fussyotter-Stormreaver",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[262652] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[324085] = {
["type"] = "BUFF",
["source"] = "Dessia the Decapitator",
["encounterID"] = 2391,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164451,
},
[15572] = {
["source"] = "Garrosh'ar Peon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66280,
},
[336372] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skay-BoreanTundra",
["npcID"] = 0,
},
[317943] = {
["source"] = "Forsworn Vanguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163457,
},
[63560] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324087] = {
["source"] = "Nevillevi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324088] = {
["source"] = "Beastmastrr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[98444] = {
["source"] = "Zpunk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[289277] = {
["source"] = "Menotax",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342519] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Egg-Tender Leh'go",
["npcID"] = 167851,
},
[319994] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Diseased Galescreamer",
["npcID"] = 170456,
},
[118922] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Weàther",
["npcID"] = 0,
},
[319997] = {
["source"] = "Shambling Arbalest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164510,
},
[131347] = {
["source"] = "Sekanna",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[257284] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[80016] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 82075,
},
[161040] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Agitated Piglet",
["npcID"] = 82728,
},
[223497] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thacø",
["npcID"] = 0,
},
[219402] = {
["source"] = "Whillphur",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34637] = {
["source"] = "Sunseeker Channeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19505,
},
[98447] = {
["source"] = "Boatjr-BlackDragonflight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[223499] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Greytx",
["npcID"] = 0,
},
[334340] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Peqqy",
["npcID"] = 0,
},
[1459] = {
["source"] = "Deepfebreeze",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342532] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Senthii, As Gul'dan",
["npcID"] = 160504,
},
[320007] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Strategist Ocra",
["npcID"] = 160883,
},
[301578] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Collider",
["npcID"] = 0,
},
[184593] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1515] = {
["source"] = "Glaimana",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[334343] = {
["source"] = "Anadyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320009] = {
["source"] = "Airen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342535] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Senthii, As Gul'dan",
["npcID"] = 160504,
},
[334345] = {
["source"] = "Anadyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196881] = {
["source"] = "Daloka-Lightninghoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[111759] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Darktoken",
["npcID"] = 0,
},
[342537] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eye of Gul'dan",
["npcID"] = 174436,
},
[328203] = {
["source"] = "Forsworn Helion",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168681,
},
[277010] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tome of War",
["npcID"] = 170662,
},
[344587] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kboog",
["npcID"] = 0,
},
[324110] = {
["source"] = "Zill'kee the World Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163971,
},
[328206] = {
["encounterID"] = 2380,
["source"] = "Echelon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164185,
},
[322063] = {
["source"] = "Risen Shadow",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165363,
},
[322064] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[324112] = {
["source"] = "Zill'kee the World Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163971,
},
[196884] = {
["source"] = "Daloka-Lightninghoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[197908] = {
["source"] = "Caiia-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324114] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "The Archivist",
["npcID"] = 161896,
},
[34639] = {
["source"] = "Sunseeker Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19509,
},
[328210] = {
["source"] = "Owenz-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[156954] = {
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78437,
},
[266779] = {
["source"] = "Fastshoot",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[54861] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[344597] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fitzgibbons",
["npcID"] = 0,
},
[289308] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322073] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[248082] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Farmcraft",
["npcID"] = 0,
},
[49998] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[160029] = {
["type"] = "DEBUFF",
["source"] = "Tinkerbizzle-Draka",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[17194] = {
["source"] = "Bloodwarder Mender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19633,
},
[34640] = {
["source"] = "Sunseeker Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19509,
},
[157982] = {
["source"] = "Zmithdruid-Ragnaros",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159006] = {
["source"] = "Khatuun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78731,
},
[320028] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boneshard Breacher",
["npcID"] = 167458,
},
[184604] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[178461] = {
["source"] = "Amorphic Cognitor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86144,
},
[156960] = {
["encounterID"] = 1714,
["source"] = "Teron'gor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77734,
},
[120467] = {
["source"] = "Slingtail Treeleaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61562,
},
[184605] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[194844] = {
["source"] = "Drakeyy-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317985] = {
["source"] = "Forsworn Squad-Leader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163520,
},
[10326] = {
["source"] = "Stronguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[289318] = {
["source"] = "Celéne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342560] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glimmerdust, As Kil'jaeden",
["npcID"] = 160506,
},
[320035] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342561] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glimmerdust, As Kil'jaeden",
["npcID"] = 160506,
},
[342562] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glimmerdust, As Kil'jaeden",
["npcID"] = 160506,
},
[22570] = {
["encounterID"] = 1897,
["source"] = "Leafmealone-Jubei'Thos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[156963] = {
["encounterID"] = 1714,
["source"] = "Teron'gor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77734,
},
[91800] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Risen Ghoul",
["npcID"] = 26125,
},
[75930] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 81993,
},
[204062] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322087] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162309,
},
[328231] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rasmus",
["npcID"] = 0,
},
[89753] = {
["source"] = "Skurikvazin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[16427] = {
["source"] = "Sunseeker Researcher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18421,
},
[3110] = {
["source"] = "Volrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 416,
},
[34642] = {
["source"] = "Sunseeker Gene-Splicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19507,
},
[287280] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadxw",
["npcID"] = 0,
},
[159017] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78734,
},
[320050] = {
["encounterID"] = 2366,
["source"] = "Xav the Unfallen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162329,
},
[305716] = {
["source"] = "Glaimana",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324146] = {
["encounterID"] = 2356,
["source"] = "Ventunax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162058,
},
[324147] = {
["source"] = "Spell Bunny",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166314,
},
[3766] = {
["source"] = "Connorkane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[210212] = {
["source"] = "Hajakizol",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324148] = {
["encounterID"] = 2356,
["source"] = "Ventunax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162058,
},
[322101] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surefang",
["npcID"] = 0,
},
[324149] = {
["source"] = "Shaucy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311863] = {
["source"] = "Azrakan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324150] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spell Bunny",
["npcID"] = 166314,
},
[127128] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kollin",
["npcID"] = 0,
},
[342581] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'kai, As Argus, the Unmaker",
["npcID"] = 160507,
},
[275006] = {
["source"] = "Rampsys-Kel'Thuzad",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332344] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[159021] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77890,
},
[324154] = {
["type"] = "DEBUFF",
["source"] = "Ventunax",
["encounterID"] = 2356,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162058,
},
[228645] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[311868] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[156974] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77889,
},
[111771] = {
["source"] = "Edgarpoe-Quel'Thalas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330299] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vroth",
["npcID"] = 161484,
},
[324156] = {
["source"] = "Shaucy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322109] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[311871] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[275012] = {
["source"] = "Hunting Worg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 152998,
},
[77472] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[320063] = {
["encounterID"] = 2391,
["source"] = "Dessia the Decapitator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164451,
},
[264774] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340541] = {
["source"] = "Jozbekwazroz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159024] = {
["source"] = "Grom'tash the Destructor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77889,
},
[132404] = {
["source"] = "Bloodwrathh-Ragnaros",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[58450] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Iyann",
["npcID"] = 0,
},
[202028] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pixiestickx",
["npcID"] = 0,
},
[146739] = {
["type"] = "DEBUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320067] = {
["source"] = "Shimmerbough Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160747,
},
[340546] = {
["source"] = "Dankpuss",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320069] = {
["encounterID"] = 2391,
["source"] = "Dessia the Decapitator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164451,
},
[74402] = {
["source"] = "Gatrul'lon Curseweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66267,
},
[174385] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86536,
},
[5740] = {
["source"] = "Edgarpoe-Quel'Thalas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[117405] = {
["source"] = "Shoan-Draenor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332357] = {
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157080,
},
[268877] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[311880] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[338501] = {
["source"] = "Priimus-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311881] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[231724] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[187698] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rasmus",
["npcID"] = 0,
},
[102560] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistorelf-Proudmoore",
["npcID"] = 0,
},
[119966] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342601] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tyrielx",
["npcID"] = 0,
},
[6572] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[6668] = {
["source"] = "Pera Firestone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64480,
},
[160055] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ironmarch Raider",
["npcID"] = 77790,
},
[340556] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Meowurdead",
["npcID"] = 0,
},
[268887] = {
["source"] = "Toying-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320081] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lady Moonberry",
["npcID"] = 161847,
},
[159033] = {
["source"] = "Shaadum",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78728,
},
[328273] = {
["source"] = "Curopton",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[136508] = {
["source"] = "ßöb-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336465] = {
["source"] = "Drakeyy-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328275] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[330323] = {
["source"] = "Womensauce",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[344658] = {
["source"] = "Mindbender",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 62982,
},
[281178] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ethudor",
["npcID"] = 0,
},
[318038] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thrandon",
["npcID"] = 0,
},
[330325] = {
["source"] = "Warkov-Hyjal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[340564] = {
["source"] = "Flourishing Hydra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170448,
},
[268893] = {
["source"] = "Toying-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131391] = {
["source"] = "Felstorm Summoner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66271,
},
[311897] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Peachii",
["npcID"] = 0,
},
[340566] = {
["source"] = "Flourishing Hydra",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170448,
},
[261424] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thrandon",
["npcID"] = 0,
},
[344662] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Horadin",
["npcID"] = 0,
},
[49750] = {
["source"] = "Willigarde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[344663] = {
["source"] = "Nurgash Muckformed",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167526,
},
[268898] = {
["source"] = "Toying-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[260402] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342618] = {
["source"] = "Chordy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158259,
},
[311902] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[61781] = {
["source"] = "Nalanri",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[334428] = {
["source"] = "Anadyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328285] = {
["source"] = "Shadow Duelist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157563,
},
[328286] = {
["source"] = "Loyal Inquisitor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168635,
},
[330334] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[174398] = {
["source"] = "Iron Bulwark",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86536,
},
[328287] = {
["source"] = "Loyal Inquisitor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168635,
},
[334431] = {
["source"] = "Lighthôuse",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328288] = {
["source"] = "Forsworn Warden",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168718,
},
[334432] = {
["source"] = "Anadyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[212283] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[51287] = {
["source"] = "Felsworn Prophet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91596,
},
[324195] = {
["source"] = "Nixíe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[328291] = {
["source"] = "Redelav Groundskeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160289,
},
[340578] = {
["source"] = "Gobbling Blossom",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169205,
},
[281194] = {
["source"] = "Peacesign-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[340579] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160067] = {
["source"] = "Benny",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[281195] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[324198] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Locklynn",
["npcID"] = 0,
},
[85673] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[131399] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66272,
},
[190784] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rycepz",
["npcID"] = 0,
},
[334438] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Châos",
["npcID"] = 0,
},
[328295] = {
["source"] = "Forsworn Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168718,
},
[207167] = {
["source"] = "Phurîan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[318058] = {
["source"] = "Humbled Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163535,
},
[324202] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[225598] = {
["source"] = "Truw-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[334443] = {
["source"] = "Phurîan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131402] = {
["source"] = "Twinspire Deathguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66272,
},
[324205] = {
["encounterID"] = 2356,
["source"] = "Ventunax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162058,
},
[334444] = {
["source"] = "Phurîan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101545] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sickly",
["npcID"] = 0,
},
[20271] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[157001] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77890,
},
[334448] = {
["source"] = "Tooble",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101546] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[165193] = {
["source"] = "Stele",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72627,
},
[324211] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[175432] = {
["source"] = "Stronguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[346737] = {
["source"] = "Ravenous Shade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175860,
},
[340594] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Baedos",
["npcID"] = 160629,
},
[342642] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 174461,
},
[311926] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[22703] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Georonia",
["npcID"] = 0,
},
[37979] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73412,
},
[340596] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Baedos",
["npcID"] = 160629,
},
[163147] = {
["source"] = "Threadcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320120] = {
["encounterID"] = 2391,
["source"] = "Paceran the Virulent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164463,
},
[157005] = {
["source"] = "Iron Piker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91597,
},
[322170] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Jorja-Undermine",
["npcID"] = 0,
},
[281216] = {
["source"] = "Adrenaline",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[8921] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[320125] = {
["source"] = "Masondixon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[179533] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[155984] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75864,
},
[165199] = {
["source"] = "Voice of Iyu",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81634,
},
[160080] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79191,
},
[330367] = {
["source"] = "Womensauce",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[334463] = {
["source"] = "Lothrik-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330368] = {
["source"] = "Endelva",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[175439] = {
["source"] = "Theeds",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320130] = {
["source"] = "Duo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324226] = {
["source"] = "Jabalan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77489] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Foxcoin",
["npcID"] = 0,
},
[196941] = {
["source"] = "Olumasp-Stormrage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[174416] = {
["source"] = "Iron Dockhand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91593,
},
[160082] = {
["source"] = "Void Oculus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79191,
},
[131414] = {
["source"] = "Twinspire Demolitionist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66273,
},
[53595] = {
["source"] = "Themariachi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[11417] = {
["source"] = "Skint",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[23600] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[340613] = {
["source"] = "Ryojiokuyama-ScarletCrusade",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[175442] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Farmcraft",
["npcID"] = 0,
},
[316042] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[326281] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[311948] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[159062] = {
["source"] = "Kigli'ak",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79727,
},
[328331] = {
["source"] = "Forsworn Justicar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168717,
},
[134490] = {
["source"] = "Extractz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[55900] = {
["source"] = "Jaarkor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[184662] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ethudor",
["npcID"] = 0,
},
[330385] = {
["source"] = "Starving Dredbat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156395,
},
[175448] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330387] = {
["source"] = "Duskterror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163059,
},
[330388] = {
["source"] = "Duskterror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163059,
},
[342675] = {
["source"] = "Bone Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170882,
},
[23601] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86663,
},
[247121] = {
["source"] = "Qixoni",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307865] = {
["source"] = "Haydonius-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330391] = {
["source"] = "Duskterror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163059,
},
[65116] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131424] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66274,
},
[330392] = {
["source"] = "Sinrunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156284,
},
[256337] = {
["source"] = "Prickly Porcupine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161131,
},
[108211] = {
["source"] = "Rilafae",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307871] = {
["source"] = "Haydonius-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160095] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Gundriver",
["npcID"] = 78193,
},
[330397] = {
["source"] = "Blistering Ash Ghoul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 158689,
},
[344732] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[330398] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Ash Ghoul",
["npcID"] = 157733,
},
[95926] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330399] = {
["source"] = "Ashen Vagrant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160535,
},
[97462] = {
["source"] = "Gruffigus-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330400] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blistered Hoarder",
["npcID"] = 173416,
},
[191837] = {
["source"] = "Caiia-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170336] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131429] = {
["source"] = "Dalgan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66274,
},
[316068] = {
["source"] = "Darkhaven Dredger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156064,
},
[324260] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dízz-Frostmourne",
["npcID"] = 0,
},
[36705] = {
["encounterID"] = 1929,
["source"] = "Warp Splinter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17977,
},
[2823] = {
["source"] = "Rilafae",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332452] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 166531,
},
[342691] = {
["type"] = "DEBUFF",
["source"] = "Kul'tharok",
["encounterID"] = 2364,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162309,
},
[264878] = {
["source"] = "Gospell-Quel'Thalas",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[316072] = {
["source"] = "Cudgelface",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156064,
},
[191840] = {
["source"] = "Caiia-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[348837] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[146790] = {
["source"] = "Shadowmoon Voidbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78790,
},
[165220] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81254,
},
[194913] = {
["source"] = "Phurîan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[171364] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85794,
},
[34914] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ballerpriest-Illidan",
["npcID"] = 0,
},
[17843] = {
["encounterID"] = 1895,
["source"] = "Priestess Delrissa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24560,
},
[318125] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161350,
},
[53600] = {
["source"] = "Themariachi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[175461] = {
["source"] = "Shattered Hand Sadist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83939,
},
[192867] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334509] = {
["source"] = "Baron Vyraz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169901,
},
[158056] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82513,
},
[326319] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[334511] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ackernan-WyrmrestAccord",
["npcID"] = 0,
},
[348846] = {
["source"] = "Caeliren",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33891] = {
["type"] = "BUFF",
["source"] = "Moonstrider-Perenolde",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34659] = {
["type"] = "BUFF",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17978,
},
[165225] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82106,
},
[348848] = {
["source"] = "Missbuggins",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332468] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swift Shadowstalker",
["npcID"] = 170521,
},
[250208] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baedos",
["npcID"] = 160629,
},
[332469] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swift Shadowstalker",
["npcID"] = 170521,
},
[157036] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77131,
},
[332470] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Swift Shadowstalker",
["npcID"] = 170521,
},
[332471] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Swift Shadowstalker",
["npcID"] = 170521,
},
[8219] = {
["source"] = "Dashman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157037] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77131,
},
[172396] = {
["source"] = "Iron Laborer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85277,
},
[73920] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165230] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82109,
},
[62305] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ribbot",
["npcID"] = 165189,
},
[202090] = {
["source"] = "Jahks",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[80576] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Scout",
["npcID"] = 76886,
},
[340670] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[285381] = {
["source"] = "Cleorapta",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[316099] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[195949] = {
["source"] = "Yèo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[69826] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pallykarben",
["npcID"] = 0,
},
[339] = {
["encounterID"] = 1685,
["source"] = "Samoanbeast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[119996] = {
["source"] = "Peqqy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[320196] = {
["source"] = "Morbid Boneguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168266,
},
[44644] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24685,
},
[131446] = {
["source"] = "Bellandra Felstorm",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66275,
},
[157043] = {
["source"] = "Sargerei Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77130,
},
[190831] = {
["source"] = "Iraeä-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[209261] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "End",
["npcID"] = 0,
},
[318151] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161350,
},
[131447] = {
["source"] = "Bellandra Felstorm",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66275,
},
[318152] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161350,
},
[340678] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Witherscorn Defiler",
["npcID"] = 169229,
},
[318154] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161504,
},
[273104] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thannak",
["npcID"] = 0,
},
[101568] = {
["source"] = "Phurîan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332492] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[318158] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161504,
},
[336588] = {
["source"] = "ßoromir-Saurfang",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[152952] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[307920] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[318159] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 161504,
},
[147833] = {
["source"] = "Itzdaark-Illidan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[264918] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Farmcraft",
["npcID"] = 0,
},
[159096] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[203123] = {
["type"] = "DEBUFF",
["source"] = "Leafmealone-Jubei'Thos",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[245102] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Devlynn Styx",
["npcID"] = 121527,
},
[196980] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[157049] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77889,
},
[175479] = {
["source"] = "Fel Mistress Hagra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72677,
},
[152954] = {
["encounterID"] = 1686,
["source"] = "Vigilant Kaathar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75839,
},
[117952] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dízz-Frostmourne",
["npcID"] = 0,
},
[14875] = {
["encounterID"] = 1895,
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[175480] = {
["source"] = "Fel Mistress Hagra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72677,
},
[320212] = {
["source"] = "Duo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[121536] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eryll",
["npcID"] = 0,
},
[338643] = {
["source"] = "Jabalan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332500] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Panicked Necroray",
["npcID"] = 165025,
},
[46182] = {
["encounterID"] = 1895,
["source"] = "Eramas Brightblaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24554,
},
[157052] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77890,
},
[330455] = {
["source"] = "Jovraal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161271,
},
[146814] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Wolf",
["npcID"] = 73101,
},
[8220] = {
["source"] = "Skoalmintchu",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330456] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vroth",
["npcID"] = 161484,
},
[176507] = {
["source"] = "Sargerei Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77042,
},
[330457] = {
["source"] = "Jovraal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161271,
},
[546] = {
["source"] = "Drbecky",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[175484] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328411] = {
["source"] = "Cryptkeeper Kassir",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163555,
},
[89798] = {
["source"] = "Lord Victor Nefarius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 49799,
},
[123586] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[586] = {
["source"] = "Floofae-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328413] = {
["source"] = "Avowed Caretaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163600,
},
[328414] = {
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157805,
},
[113860] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Caliente-Feathermoon",
["npcID"] = 0,
},
[642] = {
["source"] = "Mitslfd-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176511] = {
["source"] = "Sargerei Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77042,
},
[163201] = {
["source"] = "Gruffigus-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[205180] = {
["type"] = "BUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198013] = {
["source"] = "Cczar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332514] = {
["source"] = "Paladima",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[200061] = {
["source"] = "Bodà",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[698] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204157] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[53351] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[175489] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[344803] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ber",
["npcID"] = 0,
},
[170371] = {
["source"] = "Shadow Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77518,
},
[774] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lembear",
["npcID"] = 0,
},
[307947] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326377] = {
["source"] = "Tibberrs-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[285424] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thisperria",
["npcID"] = 0,
},
[35946] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24696,
},
[330475] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blighted Lurker",
["npcID"] = 170085,
},
[180612] = {
["type"] = "BUFF",
["source"] = "Smor-Proudmoore",
["encounterID"] = 1686,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176518] = {
["source"] = "Sargerei Soulpriest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76595,
},
[175495] = {
["source"] = "Razuun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72793,
},
[328433] = {
["source"] = "Fearspinner Sack",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168851,
},
[21175] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[153994] = {
["encounterID"] = 1685,
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76177,
},
[328434] = {
["source"] = "Klotos",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168843,
},
[59752] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ethudor",
["npcID"] = 0,
},
[328435] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168843,
},
[259454] = {
["source"] = "Orcan-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[346866] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loyal Stoneborn",
["npcID"] = 174175,
},
[326389] = {
["encounterID"] = 2380,
["source"] = "Echelon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164185,
},
[330485] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[332533] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[126664] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oaksu",
["npcID"] = 0,
},
[305913] = {
["source"] = "Ogre Shadowcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153242,
},
[32182] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[320248] = {
["encounterID"] = 2391,
["source"] = "Paceran the Virulent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164463,
},
[342774] = {
["source"] = "Voiddene-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1044] = {
["source"] = "Válkyrìe-Mal'Ganis",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[85710] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormwind Marine",
["npcID"] = 76436,
},
[326396] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kuriiras",
["npcID"] = 0,
},
[131474] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322301] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Myndrios",
["npcID"] = 0,
},
[177550] = {
["encounterID"] = 1685,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[137619] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Wydo-Drak'thul",
["npcID"] = 0,
},
[279302] = {
["source"] = "Priimus-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[279303] = {
["source"] = "Priimus-Frostmourne",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5487] = {
["source"] = "Pãpêrcût",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336642] = {
["source"] = "Gruffigus-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[52843] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[246152] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maghrak",
["npcID"] = 0,
},
[108238] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[328453] = {
["source"] = "Lakesis",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168844,
},
[307976] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328454] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168844,
},
[332550] = {
["source"] = "Shackled Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169875,
},
[175506] = {
["source"] = "Razuun",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 72793,
},
[310026] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brittlebark Manifestation",
["npcID"] = 165677,
},
[326409] = {
["source"] = "Shard of Halkias",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164557,
},
[161173] = {
["source"] = "Karabor Battle-Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79652,
},
[283407] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161350,
},
[51052] = {
["encounterID"] = 2381,
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1604] = {
["type"] = "DEBUFF",
["source"] = "Crystalline Scorpid",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 108361,
},
[307981] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[257418] = {
["source"] = "Fearce-Khaz'goroth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[287504] = {
["source"] = "Fungusfunk-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[205201] = {
["source"] = "Lilcoaco-Dalaran",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307983] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[27576] = {
["source"] = "Reverrie-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[164247] = {
["source"] = "Stonemaul Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75819,
},
[257420] = {
["source"] = "Hamrack",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330511] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sätori",
["npcID"] = 0,
},
[324368] = {
["encounterID"] = 2357,
["source"] = "Azules",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163077,
},
[157081] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77133,
},
[310037] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brittlebark Manifestation",
["npcID"] = 165677,
},
[44142] = {
["encounterID"] = 1895,
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[320277] = {
["type"] = "BUFF",
["source"] = "Sathel the Accursed",
["encounterID"] = 2391,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164461,
},
[330516] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 169756,
},
[175513] = {
["source"] = "Boatjr-BlackDragonflight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[164251] = {
["source"] = "Stonemaul Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75819,
},
[330518] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[310041] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brittlebark Manifestation",
["npcID"] = 165677,
},
[90325] = {
["source"] = "Iron Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91599,
},
[340759] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blighted Evoker",
["npcID"] = 170472,
},
[2120] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broyarx-TheScryers",
["npcID"] = 0,
},
[2152] = {
["source"] = "Bastiah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[202137] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[293664] = {
["source"] = "Manele",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131490] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[166302] = {
["source"] = "Blingtron 5000",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77789,
},
[175517] = {
["source"] = "Razuun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72793,
},
[202138] = {
["source"] = "Domitian-Gurubashi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[27577] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[156064] = {
["source"] = "Tarokh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342814] = {
["source"] = "Asiimov",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131492] = {
["source"] = "Gatrul'lon Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66268,
},
[330529] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154018] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[155042] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hellgno",
["npcID"] = 0,
},
[164257] = {
["source"] = "Slave Hunter Krag",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79623,
},
[330530] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[342817] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[105174] = {
["source"] = "Dustcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[90328] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[289577] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[22842] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326437] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unslimed Skeleton",
["npcID"] = 167832,
},
[46192] = {
["source"] = "Sunblade Physician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24687,
},
[170402] = {
["source"] = "Grogal the Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72674,
},
[326438] = {
["source"] = "Shard of Halkias",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164557,
},
[213405] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sinshiki",
["npcID"] = 0,
},
[121557] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Eryll",
["npcID"] = 0,
},
[137639] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surefang",
["npcID"] = 0,
},
[312106] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kestrelclaw-Whisperwind",
["npcID"] = 0,
},
[326441] = {
["source"] = "Shard of Halkias",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164557,
},
[312107] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Luciferno-Nazjatar",
["npcID"] = 0,
},
[156070] = {
["source"] = "Piscean",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338729] = {
["type"] = "DEBUFF",
["source"] = "Oryphrion",
["encounterID"] = 2358,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162060,
},
[320300] = {
["encounterID"] = 2391,
["source"] = "Sathel the Accursed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164461,
},
[185763] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[61295] = {
["source"] = "Drakthara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[344874] = {
["type"] = "DEBUFF",
["source"] = "Echelon",
["encounterID"] = 2380,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164185,
},
[3400] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[93402] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[27578] = {
["type"] = "BUFF",
["source"] = "Warlord Salaris",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24559,
},
[19643] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormwind Sea Wolf",
["npcID"] = 76085,
},
[156073] = {
["source"] = "Adrenaline",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33395] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78116,
},
[168360] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[153002] = {
["encounterID"] = 1686,
["source"] = "Vigilant Kaathar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75839,
},
[326450] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Depraved Houndmaster",
["npcID"] = 164562,
},
[281400] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[160170] = {
["source"] = "Rangari Lookout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75015,
},
[204197] = {
["source"] = "Karriana-Whisperwind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[281403] = {
["source"] = "Manele",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[231843] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cröökz",
["npcID"] = 0,
},
[285500] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Drdarkness-Aman'Thul",
["npcID"] = 0,
},
[308026] = {
["source"] = "Protector of Flame",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 176425,
},
[156077] = {
["source"] = "Braunwealde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[316218] = {
["source"] = "Darkhaven Dredger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156064,
},
[326457] = {
["source"] = "Envoi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[153006] = {
["type"] = "BUFF",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75839,
},
[77535] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[316220] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[328508] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[156080] = {
["source"] = "Koriom",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[158128] = {
["source"] = "Iron Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91599,
},
[326463] = {
["source"] = "Gorm Ravener",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158364,
},
[281413] = {
["source"] = "Taroadin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[105693] = {
["source"] = "Bãnks",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326464] = {
["source"] = "Gorm Ravener",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158364,
},
[336703] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336704] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[305988] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164273] = {
["source"] = "Felbeck",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[231849] = {
["source"] = "Voidallah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[36213] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greater Earth Elemental",
["npcID"] = 95072,
},
[314182] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[84193] = {
["source"] = "Viniuk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330565] = {
["source"] = "Ancient Captain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164506,
},
[170418] = {
["source"] = "Dark Apparition",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76295,
},
[191920] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kloezerak-Kel'Thuzad",
["npcID"] = 0,
},
[80610] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Catherine Leland",
["npcID"] = 5494,
},
[205231] = {
["encounterID"] = 1849,
["source"] = "Darkglare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103673,
},
[324425] = {
["source"] = "Elite Queensguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 158555,
},
[330569] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbound Deathwalker",
["npcID"] = 158040,
},
[198065] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Divinare",
["npcID"] = 0,
},
[324427] = {
["encounterID"] = 2358,
["source"] = "Oryphrion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162060,
},
[187827] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324429] = {
["source"] = "Karras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170033,
},
[344907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Namoosedh",
["npcID"] = 0,
},
[198067] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[308049] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[162232] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81240,
},
[189877] = {
["source"] = "Bakwah-Caelestrasz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320338] = {
["source"] = "Cczar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[202164] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Redoos",
["npcID"] = 0,
},
[308052] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[198069] = {
["source"] = "Karriana-Whisperwind",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[316244] = {
["source"] = "Trickster Fiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169456,
},
[271194] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Exaff-Azshara",
["npcID"] = 0,
},
[44406] = {
["source"] = "Brightscale Wyrm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24761,
},
[340818] = {
["source"] = "Buzzkill",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165404,
},
[204213] = {
["source"] = "Elieae-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[53365] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[176569] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Braddox",
["npcID"] = 0,
},
[334677] = {
["source"] = "Anadyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[202168] = {
["source"] = "Rageruu-EchoIsles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[101604] = {
["source"] = "Loolah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330586] = {
["source"] = "Putrid Butcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169927,
},
[332634] = {
["source"] = "Steelepaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324444] = {
["encounterID"] = 2358,
["source"] = "Oryphrion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162060,
},
[19134] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[27581] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[328542] = {
["source"] = "Hopebreaker Vilstav",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168390,
},
[148929] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75835,
},
[324447] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Possessed Hunter",
["npcID"] = 170476,
},
[328543] = {
["source"] = "Avowed Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156746,
},
[162240] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330592] = {
["source"] = "Rancid Gasbag",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163086,
},
[324449] = {
["encounterID"] = 2404,
["source"] = "Mordretha, the Endless Empress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165946,
},
[326497] = {
["source"] = "Portal Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167998,
},
[330593] = {
["source"] = "Engorged Fearspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168724,
},
[112869] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Norml",
["npcID"] = 0,
},
[330595] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Echo of the Spy",
["npcID"] = 162399,
},
[174529] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81254,
},
[338788] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[195007] = {
["source"] = "Inshoxicated-Rivendare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[46968] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Strighker",
["npcID"] = 0,
},
[332646] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[318312] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Morbid Disciple",
["npcID"] = 163414,
},
[162244] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sharpfang Stalker",
["npcID"] = 76685,
},
[351077] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Akz",
["npcID"] = 0,
},
[84714] = {
["source"] = "Firstlight-SteamwheedleCartel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[332650] = {
["source"] = "Architect Xeeli",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165007,
},
[232893] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[336746] = {
["source"] = "Endelva",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[161222] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pridelands Stalker",
["npcID"] = 88579,
},
[162246] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pridelands Stalker",
["npcID"] = 88579,
},
[61815] = {
["source"] = "Ceydra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330605] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[85739] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Oaksu",
["npcID"] = 0,
},
[328558] = {
["source"] = "Depraved Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159027,
},
[324463] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dmgnetworkz",
["npcID"] = 0,
},
[328559] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Avowed Guarantor",
["npcID"] = 159001,
},
[162248] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pridelands Stalker",
["npcID"] = 88579,
},
[336752] = {
["type"] = "DEBUFF",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164501,
},
[332657] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Satiated Sawtooth",
["npcID"] = 164587,
},
[342897] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Crazed Maw-shroom",
["npcID"] = 174130,
},
[330611] = {
["source"] = "Dread Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 155795,
},
[130791] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66398,
},
[157131] = {
["source"] = "Yuhgi-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[183752] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338804] = {
["source"] = "Syssare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[171466] = {
["source"] = "Gul'var Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73468,
},
[330614] = {
["source"] = "Rancid Gasbag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163086,
},
[219589] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[330616] = {
["source"] = "Bonemauler Alpha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168676,
},
[226757] = {
["source"] = "Tastytreats",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101612] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[212423] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[324475] = {
["source"] = "Anima Fountain",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166497,
},
[330619] = {
["source"] = "Scavenging Alpha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168321,
},
[113899] = {
["source"] = "Demonic Gateway",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59262,
},
[114923] = {
["source"] = "Vellosity-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[310143] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[132563] = {
["source"] = "Iraeä-MoonGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[312193] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Imprisoned Ritualist",
["npcID"] = 160327,
},
[161232] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[113900] = {
["source"] = "Demonic Gateway",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59271,
},
[336767] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330624] = {
["source"] = "Smoldering Bonemauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160425,
},
[275335] = {
["source"] = "Bloodwrathh-Ragnaros",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33917] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34173] = {
["source"] = "Sunseeker Channeler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 19505,
},
[326530] = {
["source"] = "Gorm Ravener",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158364,
},
[324483] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Possessed Hunter",
["npcID"] = 170476,
},
[320390] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Baron Halis",
["npcID"] = 159674,
},
[169426] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Legionnaire",
["npcID"] = 78667,
},
[126188] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 64403,
},
[78578] = {
["source"] = "Qiana Moonshadow",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81672,
},
[32191] = {
["source"] = "Garrosh'ar Gear-Greaser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66290,
},
[176594] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[49020] = {
["source"] = "Phurîan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[57723] = {
["source"] = "Walapalusa",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108271] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[212431] = {
["source"] = "Shaucy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338825] = {
["source"] = "Solumterra",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[169429] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Legionnaire",
["npcID"] = 78667,
},
[163286] = {
["source"] = "Shadowmoon Prophet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80787,
},
[45181] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Evisera",
["npcID"] = 0,
},
[330636] = {
["source"] = "Rotting Deathwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168855,
},
[256459] = {
["source"] = "Feuille",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204242] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[336781] = {
["source"] = "Necromantic Dissident",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 172479,
},
[293779] = {
["source"] = "Ragehaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[162264] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sinshiki",
["npcID"] = 0,
},
[57724] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Gorik",
["npcID"] = 0,
},
[20801] = {
["source"] = "Imp Minion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12922,
},
[322450] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[170456] = {
["source"] = "Shadow Skeleton",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76264,
},
[95987] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[81141] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[45182] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[45438] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Broyarx-TheScryers",
["npcID"] = 0,
},
[207317] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[247249] = {
["source"] = "Ragehaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338838] = {
["source"] = "Nadjia the Mistblade",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157563,
},
[210391] = {
["source"] = "Yuxie",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[267171] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[342938] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[69369] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rustykayak",
["npcID"] = 0,
},
[231895] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spicymagic",
["npcID"] = 0,
},
[176606] = {
["source"] = "Sulfuric Ooze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85960,
},
[347037] = {
["source"] = "Grimshady",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157153] = {
["encounterID"] = 2403,
["source"] = "Inshoxicated-Rivendare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[224729] = {
["source"] = "Morbid Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164273,
},
[2649] = {
["source"] = "Turtle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[34433] = {
["source"] = "Digasauruspr-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326562] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 174561,
},
[35201] = {
["source"] = "Y'kish",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81418,
},
[344993] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vicious Gargon",
["npcID"] = 164563,
},
[130803] = {
["source"] = "Hozen Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66106,
},
[336803] = {
["source"] = "Mawsworn Seeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164424,
},
[11426] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[338852] = {
["source"] = "Oranomonos the Everbranching",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167527,
},
[156132] = {
["source"] = "Adrenaline",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338853] = {
["source"] = "Oranomonos the Everbranching",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167527,
},
[32065] = {
["source"] = "Fungal Lurcher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80714,
},
[64382] = {
["source"] = "Rageruu-EchoIsles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204255] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[164324] = {
["source"] = "Slave Hunter Brol",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79621,
},
[338855] = {
["source"] = "Oranomonos the Everbranching",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167527,
},
[324521] = {
["source"] = "Vøidseeker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176611] = {
["source"] = "Lesser Brimfury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85924,
},
[338856] = {
["source"] = "Oranomonos the Everbranching",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167527,
},
[187874] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[164325] = {
["source"] = "Slave Hunter Brol",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79621,
},
[174564] = {
["source"] = "Fungal Stomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80739,
},
[176612] = {
["source"] = "Lesser Brimfury",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85924,
},
[338858] = {
["source"] = "Nurgash Muckformed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167526,
},
[203233] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[18499] = {
["source"] = "Rageruu-EchoIsles",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108280] = {
["source"] = "Proudtotem-Kargath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[109304] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[13730] = {
["source"] = "Karabor Peacekeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81636,
},
[131563] = {
["source"] = "Pikkachew",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[3561] = {
["source"] = "Lukelol",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[269239] = {
["source"] = "Voidallah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338863] = {
["source"] = "Nurgash Muckformed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167526,
},
[57984] = {
["source"] = "Greater Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95061,
},
[338864] = {
["source"] = "Nurgash Muckformed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167526,
},
[187878] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[142828] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 71062,
},
[338867] = {
["source"] = "Nurgash Muckformed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167526,
},
[200166] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qixoni",
["npcID"] = 0,
},
[192999] = {
["source"] = "Nirio",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3929] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[3945] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204262] = {
["source"] = "Iconictotem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[324536] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[310202] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[157165] = {
["source"] = "Sargerei Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77132,
},
[334776] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lotustattoo",
["npcID"] = 0,
},
[338872] = {
["source"] = "Nurgash Muckformed",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167526,
},
[118522] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[172524] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85277,
},
[198121] = {
["source"] = "Walvetrick",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44163] = {
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[330683] = {
["type"] = "DEBUFF",
["source"] = "Bloodwrathh-Ragnaros",
["encounterID"] = 2359,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[261602] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xial",
["npcID"] = 0,
},
[205289] = {
["type"] = "BUFF",
["source"] = "Volatile Scorpid",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 103224,
},
[222695] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slaptop",
["npcID"] = 0,
},
[345019] = {
["source"] = "Tite-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157168] = {
["source"] = "Felborne Abyssal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79508,
},
[256484] = {
["source"] = "Scavenging Alpha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168321,
},
[176622] = {
["source"] = "Sulfuric Ooze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85960,
},
[134644] = {
["source"] = "Justuravgpal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[176623] = {
["source"] = "Threadcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170480] = {
["source"] = "Shadowmoon Voidaxe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81091,
},
[5394] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[157170] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77812,
},
[142836] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 71079,
},
[44164] = {
["encounterID"] = 1895,
["source"] = "Fizzle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24656,
},
[200174] = {
["source"] = "Floofae-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330693] = {
["source"] = "Disgusting Refuse",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163089,
},
[63106] = {
["source"] = "Eschaton-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5938] = {
["source"] = "Kàrina-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[32323] = {
["source"] = "Bloodfalcon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18155,
},
[49028] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[12323] = {
["source"] = "Scabbylette-Duskwood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[157173] = {
["source"] = "Felguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79507,
},
[158197] = {
["source"] = "Pearltusk Calf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78371,
},
[330697] = {
["source"] = "Diseased Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170690,
},
[326602] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engorged Borer",
["npcID"] = 170767,
},
[336841] = {
["source"] = "Gñome-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322507] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[18501] = {
["source"] = "Gronnling Bonebreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80685,
},
[330700] = {
["source"] = "Diseased Horror",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170690,
},
[6770] = {
["source"] = "Kàrina-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330701] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vroth",
["npcID"] = 161484,
},
[326606] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Engorged Borer",
["npcID"] = 170767,
},
[336845] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[326607] = {
["source"] = "Stoneborn Reaver",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167612,
},
[48517] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204275] = {
["encounterID"] = 1849,
["source"] = "Skorpyron",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102263,
},
[20549] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thorsito-Proudmoore",
["npcID"] = 0,
},
[330704] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vroth",
["npcID"] = 161484,
},
[297941] = {
["source"] = "Linlith",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[257518] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blighted Invader",
["npcID"] = 169227,
},
[54149] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ethudor",
["npcID"] = 0,
},
[342997] = {
["source"] = "Darkhon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[48518] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[269279] = {
["source"] = "Clôud",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345046] = {
["source"] = "Comets-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338903] = {
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157080,
},
[326617] = {
["source"] = "Stoneborn Reaver",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167612,
},
[8676] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345048] = {
["source"] = "Muroka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[287712] = {
["encounterID"] = 1686,
["source"] = "Samoanbeast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[265187] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[72968] = {
["source"] = "Jerenome",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336859] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[330716] = {
["source"] = "Portal Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167998,
},
[180733] = {
["source"] = "Ragehaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322527] = {
["type"] = "DEBUFF",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164517,
},
[158208] = {
["source"] = "Gronnslaver Raz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83774,
},
[64901] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Silvai",
["npcID"] = 0,
},
[56966] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Soulfused Construct",
["npcID"] = 165147,
},
[180734] = {
["source"] = "Ragehaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[108293] = {
["source"] = "Jabalan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[85256] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[34697] = {
["encounterID"] = 1927,
["source"] = "Laj",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17980,
},
[29765] = {
["source"] = "Bloodwarder Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17993,
},
[29893] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[158210] = {
["source"] = "Gronnslaver Raz",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 83774,
},
[194046] = {
["source"] = "Stronguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[11428] = {
["encounterID"] = 1895,
["source"] = "Eramas Brightblaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24554,
},
[343011] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[330725] = {
["source"] = "Portal Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167998,
},
[199167] = {
["source"] = "Killclaw the Terrible",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153266,
},
[32197] = {
["source"] = "Gatrul'lon Curseweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66267,
},
[225788] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[195072] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Michela",
["npcID"] = 0,
},
[326632] = {
["source"] = "Stoneborn Reaver",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167612,
},
[330729] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Caliente-Feathermoon",
["npcID"] = 0,
},
[332777] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[330730] = {
["source"] = "Kushandoj-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[17735] = {
["encounterID"] = 1849,
["source"] = "Barmon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[176644] = {
["source"] = "Avenue",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44425] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[171525] = {
["source"] = "Justuravgpal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322541] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Duke Vielle",
["npcID"] = 162109,
},
[326637] = {
["source"] = "Stoneborn Eviscerator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167611,
},
[326638] = {
["source"] = "Stoneborn Eviscerator",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167611,
},
[48265] = {
["source"] = "Bordercrosse",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[132620] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[340975] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brittlebark Trickster",
["npcID"] = 159415,
},
[200196] = {
["source"] = "Treewisperer-Cenarius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34187] = {
["source"] = "Sunseeker Channeler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 19505,
},
[162313] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cinns",
["npcID"] = 0,
},
[326642] = {
["source"] = "Stoneborn Eviscerator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167611,
},
[198149] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345073] = {
["source"] = "Karras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170033,
},
[326644] = {
["source"] = "Stoneborn Eviscerator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167611,
},
[53385] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cröökz",
["npcID"] = 0,
},
[263165] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[322550] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[101643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[343028] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 170355,
},
[336885] = {
["source"] = "Kàrina-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[190984] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48778] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lasterhaft-Stormrage",
["npcID"] = 0,
},
[32908] = {
["source"] = "Bloodwarder Falconer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17994,
},
[338935] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lurking Lasher",
["npcID"] = 170449,
},
[324601] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[8613] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Racket-EarthenRing",
["npcID"] = 0,
},
[34700] = {
["type"] = "BUFF",
["source"] = "Rykna-Stormrage",
["encounterID"] = 1927,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324603] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[310270] = {
["source"] = "Temel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159109,
},
[345082] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322557] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Soulcleaver",
["npcID"] = 164920,
},
[124682] = {
["source"] = "Caiia-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[227847] = {
["source"] = "Dfalco",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336893] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[291843] = {
["source"] = "Samoanbeast",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343037] = {
["source"] = "Protective Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164007,
},
[312321] = {
["source"] = "Lynne-Caelestrasz",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324608] = {
["encounterID"] = 2358,
["source"] = "Oryphrion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162060,
},
[343038] = {
["source"] = "Contender Karnek",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 169041,
},
[57994] = {
["source"] = "Pulledpork-Fenris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[257541] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[135700] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Aplusx",
["npcID"] = 0,
},
[34189] = {
["source"] = "Darkfang Shadowstalker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 173024,
},
[345088] = {
["source"] = "Vorkai Trainee",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170033,
},
[322563] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[30151] = {
["source"] = "Skurikvazin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[203277] = {
["source"] = "Spaceship",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204301] = {
["source"] = "Mathiass",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[271371] = {
["source"] = "Ogre Taskmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156986,
},
[338947] = {
["source"] = "The Accuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157064,
},
[343043] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sylvari Huntress",
["npcID"] = 161447,
},
[345091] = {
["source"] = "Steward Nestling",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170039,
},
[161299] = {
["source"] = "Crimson Mandragora",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 84391,
},
[31687] = {
["source"] = "Shardsy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338950] = {
["source"] = "The Accuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157064,
},
[336903] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Survïvalïst-BleedingHollow",
["npcID"] = 0,
},
[322569] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Drust Soulcleaver",
["npcID"] = 164920,
},
[155158] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[254474] = {
["source"] = "Zenolix",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345097] = {
["source"] = "Dripping Dredger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170045,
},
[170517] = {
["source"] = "Iron Explosive",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78479,
},
[338955] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 163660,
},
[273428] = {
["source"] = "Taylorsmorcs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170518] = {
["source"] = "Iron Explosive",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78479,
},
[345100] = {
["source"] = "Shunk-Quel'Thalas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336910] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[334863] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Châos",
["npcID"] = 0,
},
[334864] = {
["source"] = "Daloka-Lightninghoof",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34447] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alya",
["npcID"] = 82002,
},
[128783] = {
["source"] = "Lamuerte",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44174] = {
["type"] = "BUFF",
["source"] = "Priestess Delrissa",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24560,
},
[338962] = {
["source"] = "Buzzkill",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165404,
},
[203285] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Racket-EarthenRing",
["npcID"] = 0,
},
[338964] = {
["source"] = "The Accuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157064,
},
[203286] = {
["source"] = "Voiddene-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[23881] = {
["source"] = "ßoromir-Saurfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345110] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338967] = {
["source"] = "Buzzkill",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165404,
},
[160285] = {
["source"] = "Goren Gouger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80690,
},
[332825] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 170494,
},
[295966] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zya",
["npcID"] = 0,
},
[322587] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vitcon",
["npcID"] = 0,
},
[79639] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Souranus",
["npcID"] = 0,
},
[44175] = {
["encounterID"] = 1895,
["source"] = "Priestess Delrissa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24560,
},
[322588] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vitcon",
["npcID"] = 0,
},
[196122] = {
["source"] = "Killclaw the Terrible",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153266,
},
[53390] = {
["source"] = "Proudtotem-Kargath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322589] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vitcon",
["npcID"] = 0,
},
[200218] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101462,
},
[347163] = {
["source"] = "Stygian Runesmith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176428,
},
[322591] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vitcon",
["npcID"] = 0,
},
[207386] = {
["source"] = "With",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79640] = {
["source"] = "Tuishao",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[49039] = {
["source"] = "Smor-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330784] = {
["source"] = "Battlefield Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 174197,
},
[322594] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vitcon",
["npcID"] = 0,
},
[204316] = {
["encounterID"] = 1849,
["source"] = "Skorpyron",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102263,
},
[271401] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Masked Soulsplitter",
["npcID"] = 161456,
},
[11366] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[332836] = {
["source"] = "Putrid Butcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169927,
},
[88345] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[347173] = {
["source"] = "Jokes",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[113942] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Quiñ",
["npcID"] = 0,
},
[32914] = {
["source"] = "Tainted Lightwing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 87425,
},
[117014] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[118038] = {
["source"] = "Rageruu-EchoIsles",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332842] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ruhrho-EarthenRing",
["npcID"] = 0,
},
[271411] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Block Warden Carmine",
["npcID"] = 124024,
},
[131627] = {
["source"] = "Sha Haunt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66423,
},
[3562] = {
["source"] = "Qwïn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334896] = {
["source"] = "Nebakanezzer-Nazgrel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[265273] = {
["source"] = "Owenz-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[312372] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bowzo",
["npcID"] = 0,
},
[132653] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144120,
},
[289848] = {
["source"] = "Darkfang Shadowstalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 173024,
},
[332851] = {
["source"] = "Stayfrosty-Maelstrom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336947] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[82717] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jasper Fel",
["npcID"] = 81964,
},
[152108] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Georonia",
["npcID"] = 0,
},
[338996] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Coracinlux",
["npcID"] = 0,
},
[324662] = {
["source"] = "Astronos",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168845,
},
[78622] = {
["source"] = "Footman",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 87519,
},
[158252] = {
["source"] = "Ancient Pearltusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82452,
},
[48018] = {
["source"] = "Xaeliae",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115994] = {
["source"] = "Chumar-Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[8679] = {
["source"] = "Snoopx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330810] = {
["source"] = "Shackled Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169875,
},
[207400] = {
["source"] = "Proudtotem-Kargath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[212520] = {
["source"] = "Momomi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[260643] = {
["source"] = "Nemone-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336957] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[332862] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nearseer",
["npcID"] = 0,
},
[296003] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Earthangel",
["npcID"] = 0,
},
[169519] = {
["source"] = "Podling Scavenger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 84402,
},
[58514] = {
["source"] = "Stormwind City Guard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 68,
},
[343104] = {
["source"] = "Blazing Stygia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176423,
},
[328770] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remnant Eye",
["npcID"] = 160522,
},
[157234] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77810,
},
[87840] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tereio",
["npcID"] = 0,
},
[30283] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[328772] = {
["source"] = "Nightwidow Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159460,
},
[300104] = {
["source"] = "Lamuerte",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345155] = {
["source"] = "Imprisoned Soul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 176149,
},
[48020] = {
["source"] = "Stizzy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[114974] = {
["source"] = "Hozen Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66106,
},
[6196] = {
["source"] = "Xiaozhi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[215598] = {
["source"] = "Rotager",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[93985] = {
["source"] = "Samoanbeast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[119582] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165430] = {
["source"] = "Spore-be-Gone Turret",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81135,
},
[328781] = {
["source"] = "Nightwidow Horror",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159460,
},
[79140] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160312] = {
["source"] = "Sargerei Cleric",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77134,
},
[339022] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[106785] = {
["source"] = "Trèvv",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339023] = {
["source"] = "Oranomonos the Everbranching",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167527,
},
[33943] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tarinia",
["npcID"] = 0,
},
[195125] = {
["source"] = "ßoromir-Saurfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[36247] = {
["source"] = "Razuun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72793,
},
[332884] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[15655] = {
["source"] = "Skyfire Marine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66300,
},
[170554] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339029] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Conjured Wings",
["npcID"] = 171960,
},
[322648] = {
["encounterID"] = 2393,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[334935] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Swollensac",
["npcID"] = 0,
},
[339031] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Veilwing Fledgeling",
["npcID"] = 167507,
},
[310364] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163971,
},
[215607] = {
["source"] = "Rotager",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[192058] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[316509] = {
["source"] = "Carved Lookout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156750,
},
[53142] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[205369] = {
["source"] = "Floofae-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324701] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322654] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[316511] = {
["source"] = "Petrified Servant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172786,
},
[164415] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[96038] = {
["source"] = "Rell's Gyrocopter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 67068,
},
[328799] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Secutor Mevix",
["npcID"] = 160959,
},
[330847] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Altered Sentinel",
["npcID"] = 168244,
},
[228920] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[164416] = {
["source"] = "Threadcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339040] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[85288] = {
["source"] = "Arlaus-EarthenRing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[164417] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[96039] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164418] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157251] = {
["source"] = "Shadowmoon Ancestor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79007,
},
[336996] = {
["source"] = "Nekthara the Mangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162744,
},
[31821] = {
["source"] = "Olumasp-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[48792] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[16591] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sifrileidy-BleedingHollow",
["npcID"] = 0,
},
[316522] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33690] = {
["source"] = "Frostyx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[58519] = {
["source"] = "Stormwind City Guard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 68,
},
[34202] = {
["source"] = "Frayer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18587,
},
[339049] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[330859] = {
["source"] = "Ðx-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[83243] = {
["source"] = "Endelva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[54680] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Krush",
["npcID"] = 165189,
},
[316527] = {
["source"] = "Stoneborn Steelwing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 158992,
},
[111400] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[153161] = {
["source"] = "Desert Wastetalon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85565,
},
[211522] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rojblake",
["npcID"] = 0,
},
[83244] = {
["source"] = "Nachospls-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[33691] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[161353] = {
["source"] = "Voiddene-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[316531] = {
["source"] = "Itzdaark-Illidan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307122] = {
["source"] = "Wrkingovrtme",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stoneborn Slasher",
["npcID"] = 167607,
},
[307142] = {
["source"] = "Emerya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[32918] = {
["source"] = "Snow Tracker Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41478,
},
[324724] = {
["source"] = "Floofae-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[122664] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[304619] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoantitan",
["npcID"] = 0,
},
[155625] = {
["source"] = "Cleorapta",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[146277] = {
["source"] = "Voidstamp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307125] = {
["source"] = "Emerya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[160331] = {
["source"] = "Furniture",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329170] = {
["encounterID"] = 2381,
["source"] = "Sinstone Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165737,
},
[176458] = {
["source"] = "Blacksmithing Follower - Alliance",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 88403,
},
[164197] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[173280] = {
["source"] = "Volatile Sludge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81524,
},
[339061] = {
["source"] = "Fastshoot",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[163040] = {
["source"] = "Crimsonwing Wasp",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81168,
},
[58165] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soggysquatch",
["npcID"] = 0,
},
[160332] = {
["source"] = "Pale Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79205,
},
[163949] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[300155] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[122665] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[115181] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[347254] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 166531,
},
[170950] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Necrolution",
["npcID"] = 0,
},
[307381] = {
["source"] = "Dalasarian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[108843] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Racket-EarthenRing",
["npcID"] = 0,
},
[34204] = {
["source"] = "Frayer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18587,
},
[50842] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[34716] = {
["encounterID"] = 1929,
["source"] = "Warp Splinter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17977,
},
[127230] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Flashburn",
["npcID"] = 0,
},
[78639] = {
["source"] = "Mistyra",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157172] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77812,
},
[178442] = {
["source"] = "Infected Mechanic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 89144,
},
[345209] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330875] = {
["source"] = "Nefarious Darkspeaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169893,
},
[128766] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baroness Draka",
["npcID"] = 167393,
},
[212552] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vythius",
["npcID"] = 0,
},
[205385] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Neosporín",
["npcID"] = 0,
},
[322685] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[116011] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[332921] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[345211] = {
["source"] = "Tastytreats",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322686] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160743] = {
["source"] = "Commander Vorka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 74023,
},
[342584] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'kai, As Argus, the Unmaker",
["npcID"] = 160507,
},
[58875] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fingerina",
["npcID"] = 0,
},
[324523] = {
["source"] = "Luc",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336809] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162873,
},
[337833] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wild Flayedwing",
["npcID"] = 172876,
},
[347047] = {
["source"] = "Morgåna-Quel'Thalas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[154546] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kliaa",
["npcID"] = 76438,
},
[324736] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163058,
},
[122667] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[324196] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Locklynn",
["npcID"] = 0,
},
[27584] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[324737] = {
["source"] = "Mistveil Defender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 171772,
},
[192077] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[312451] = {
["source"] = "Ravenous Animite",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 160454,
},
[34205] = {
["type"] = "BUFF",
["source"] = "Frayer",
["encounterID"] = 1926,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18587,
},
[53752] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vènturer",
["npcID"] = 0,
},
[325549] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blighted Beast",
["npcID"] = 170087,
},
[44538] = {
["source"] = "Ethereum Smuggler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24698,
},
[345545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kiid",
["npcID"] = 0,
},
[324739] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surefang",
["npcID"] = 0,
},
[108294] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320644] = {
["encounterID"] = 2366,
["source"] = "Xav the Unfallen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162329,
},
[308685] = {
["source"] = "Pantzonfire",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131476] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[122668] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[221771] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[8116] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[223819] = {
["source"] = "Themariachi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329652] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fata the Soulflayer",
["npcID"] = 159677,
},
[345219] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rojblake",
["npcID"] = 0,
},
[17253] = {
["source"] = "Turtle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[38557] = {
["source"] = "Frostmane Scout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41175,
},
[310408] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166067,
},
[119085] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Flaavin",
["npcID"] = 0,
},
[322695] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[243435] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[343173] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[8680] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[197107] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[58506] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ridge Prowler",
["npcID"] = 79703,
},
[122669] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[204284] = {
["encounterID"] = 1849,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[57755] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[116014] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[192081] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[85222] = {
["source"] = "Olumasp-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[585] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Holyshadow-Icecrown",
["npcID"] = 0,
},
[330676] = {
["source"] = "Hulking Doomfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168862,
},
[326794] = {
["source"] = "Inquisitor Sigar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167876,
},
[59547] = {
["source"] = "Toying-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[306317] = {
["source"] = "The Accuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157052,
},
[8936] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kuravyn",
["npcID"] = 0,
},
[192082] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 97285,
},
[345225] = {
["source"] = "Karras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170033,
},
[164915] = {
["source"] = "Echidnian Hydra",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79020,
},
[324748] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rahmar",
["npcID"] = 0,
},
[122670] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[157241] = {
["source"] = "Void-Torn Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82220,
},
[164862] = {
["source"] = "Zneb-Darkspear",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[13481] = {
["source"] = "Glaimana",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[167510] = {
["source"] = "Kigli'ak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79727,
},
[215026] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 108300,
},
[172942] = {
["source"] = "Sor the Eradicator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80691,
},
[44189] = {
["encounterID"] = 1894,
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24664,
},
[234877] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[345228] = {
["source"] = "Fiebs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337716] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Strykula",
["npcID"] = 0,
},
[320966] = {
["encounterID"] = 2357,
["source"] = "Kin-Tara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162059,
},
[2643] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[336834] = {
["source"] = "Unbidden Worldeater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157698,
},
[329414] = {
["source"] = "Avowed Witness",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164209,
},
[163083] = {
["source"] = "Engorged Mushroom",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80716,
},
[122671] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[345230] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "End",
["npcID"] = 0,
},
[330896] = {
["source"] = "Spkilla",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330694] = {
["source"] = "Disgusting Refuse",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163089,
},
[77762] = {
["source"] = "Timoune-BleedingHollow",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345231] = {
["source"] = "Augment",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322506] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Duke Vielle",
["npcID"] = 162109,
},
[276111] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Snoopycoq",
["npcID"] = 0,
},
[204372] = {
["encounterID"] = 1849,
["source"] = "Skorpyron",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102263,
},
[308897] = {
["source"] = "Nevillevi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[82707] = {
["source"] = "Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 87518,
},
[171899] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86044,
},
[336832] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[44190] = {
["encounterID"] = 1894,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[79892] = {
["source"] = "Farseer Lopaa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 96949,
},
[324756] = {
["source"] = "Greedy Soul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166680,
},
[122672] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[328773] = {
["source"] = "Nightwidow Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159460,
},
[322709] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[141917] = {
["source"] = "Lamuerte",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[127558] = {
["source"] = "Hozen Scavenger",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66106,
},
[337344] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cruel Mystic",
["npcID"] = 159459,
},
[196608] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kestrelclaw-Whisperwind",
["npcID"] = 0,
},
[127114] = {
["source"] = "Pikkachew",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326806] = {
["source"] = "Inquisitor Sigar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167876,
},
[345236] = {
["source"] = "Stygian Runesmith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176428,
},
[322711] = {
["type"] = "BUFF",
["source"] = "Halkias",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165408,
},
[155909] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75864,
},
[307159] = {
["type"] = "BUFF",
["source"] = "Toying-Sargeras",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[80182] = {
["source"] = "Karabor Peacekeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81636,
},
[30455] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329666] = {
["source"] = "Chainer-Drak'Tharon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[122673] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[328856] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloated Corpselouse",
["npcID"] = 165561,
},
[217597] = {
["source"] = "Boatjr-BlackDragonflight",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[261616] = {
["source"] = "Katy Stampwhistle",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 132969,
},
[326809] = {
["source"] = "Elfthas",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[50334] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2139] = {
["source"] = "Addleatus-TheVentureCo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[113862] = {
["source"] = "Gadral",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343713] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[345240] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[102417] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kuravyn",
["npcID"] = 0,
},
[213858] = {
["source"] = "Thragan-WyrmrestAccord",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343193] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Joraga",
["npcID"] = 0,
},
[26573] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[853] = {
["source"] = "Saladinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[74522] = {
["source"] = "Daloka-Lightninghoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131381] = {
["source"] = "Gatrul'lon Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66268,
},
[345242] = {
["source"] = "Siege Ballista",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165124,
},
[131390] = {
["source"] = "Felstorm Summoner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66271,
},
[125883] = {
["source"] = "Dreamstance",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[64843] = {
["source"] = "Treewisperer-Cenarius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345243] = {
["source"] = "Siege Ballista",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165124,
},
[264173] = {
["source"] = "Hexabolt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[20473] = {
["source"] = "Pumpadin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131107] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320671] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fleshsewn Scavenger",
["npcID"] = 160474,
},
[290793] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bonysoprano",
["npcID"] = 0,
},
[122281] = {
["source"] = "Airen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[257620] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345245] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163086,
},
[169567] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81769,
},
[2539] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323552] = {
["encounterID"] = 2403,
["source"] = "High Adjudicator Aleez",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165410,
},
[131845] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[180749] = {
["source"] = "Klausgreta-Dath'Remar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[124211] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Delthirus",
["npcID"] = 0,
},
[33697] = {
["source"] = "Gorashk-BleedingHollow",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320674] = {
["source"] = "Toying-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[264178] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[61044] = {
["source"] = "Twinspire Taskmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54627,
},
[179807] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[316859] = {
["source"] = "Stoneborn Recruit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170042,
},
[158807] = {
["source"] = "Goren Nibbler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81775,
},
[29722] = {
["source"] = "Lethali",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[257622] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[32919] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Wolf",
["npcID"] = 73101,
},
[343013] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "End",
["npcID"] = 0,
},
[162402] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lotustattoo",
["npcID"] = 0,
},
[77505] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[197214] = {
["source"] = "Ådept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131022] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66398,
},
[341155] = {
["source"] = "Reknaw",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[215479] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337060] = {
["source"] = "Niles-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131012] = {
["source"] = "Sha Tendrils",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66688,
},
[314809] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321520] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Necromancy Acolyte",
["npcID"] = 159757,
},
[320679] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Secutor Mevix",
["npcID"] = 160959,
},
[214621] = {
["source"] = "Karriana-Whisperwind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[292011] = {
["source"] = "Henry Garrick",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 161504,
},
[130860] = {
["source"] = "General Purpose Bunny ZTO",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 55370,
},
[3019] = {
["source"] = "Rockjaw Backbreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 1118,
},
[169571] = {
["source"] = "Harvester Ommru",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84373,
},
[324776] = {
["source"] = "Mistveil Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166275,
},
[34793] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18405,
},
[175449] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322729] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tipsygrey",
["npcID"] = 0,
},
[3115] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgecraft",
["npcID"] = 0,
},
[278736] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unseenx",
["npcID"] = 0,
},
[55233] = {
["source"] = "Drakeyy-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[177763] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77734,
},
[38595] = {
["encounterID"] = 1895,
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[31884] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadxw",
["npcID"] = 0,
},
[279995] = {
["source"] = "Iraeä-MoonGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[127797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Thorsito-Proudmoore",
["npcID"] = 0,
},
[141928] = {
["source"] = "Lamuerte",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325624] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[3275] = {
["source"] = "Cyza",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[256735] = {
["source"] = "Jetê",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[168835] = {
["source"] = "Popasquat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[174931] = {
["source"] = "Botani Grovetender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81631,
},
[31287] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81749,
},
[3355] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[115989] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326829] = {
["source"] = "Inquisitor Sigar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167876,
},
[158549] = {
["source"] = "Lunarfall Raven",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82037,
},
[169574] = {
["source"] = "Dionor Seedpriest",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81721,
},
[308400] = {
["source"] = "Wildkingdom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326830] = {
["source"] = "Dustwilt Scythehorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163992,
},
[312757] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Private Cole",
["npcID"] = 157051,
},
[165227] = {
["source"] = "Thornvine Flytrap",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82086,
},
[186265] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[124280] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[329727] = {
["source"] = "Cryptkeeper Kassir",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163555,
},
[94719] = {
["source"] = "Dunii-Whisperwind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308402] = {
["source"] = "Quruz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[271375] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flynn Fairwind",
["npcID"] = 124311,
},
[213602] = {
["source"] = "Bitterscotch-SteamwheedleCartel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[188443] = {
["source"] = "Amodelterror-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[19574] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[186254] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[313351] = {
["source"] = "Pridefall Dredger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 156413,
},
[339120] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mustering Ruiner",
["npcID"] = 173240,
},
[154218] = {
["encounterID"] = 1685,
["source"] = "Spiteful Arbiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76284,
},
[42648] = {
["source"] = "Horrific Bonemauler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 156596,
},
[3320] = {
["source"] = "Forgecraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[201754] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Krush",
["npcID"] = 165189,
},
[308405] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ubeenpunked",
["npcID"] = 0,
},
[326835] = {
["source"] = "Ossified Conscript",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167994,
},
[44194] = {
["encounterID"] = 1894,
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24664,
},
[265931] = {
["source"] = "Lethali",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[186403] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Moonwiisp",
["npcID"] = 0,
},
[310454] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Surefang",
["npcID"] = 0,
},
[294383] = {
["source"] = "Mindrelody-Sentinels",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157291] = {
["source"] = "Kuu'rat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75484,
},
[215652] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Satalite",
["npcID"] = 0,
},
[34203] = {
["source"] = "Frayer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 18587,
},
[343048] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sylvari Huntress",
["npcID"] = 161447,
},
[3931] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[62175] = {
["source"] = "Ferzhus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[117679] = {
["type"] = "BUFF",
["source"] = "Moonstrider-Perenolde",
["encounterID"] = 2403,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[12042] = {
["source"] = "Rampsys-Kel'Thuzad",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322743] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unslimed Skeleton",
["npcID"] = 167832,
},
[32612] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Broyarx-TheScryers",
["npcID"] = 0,
},
[309620] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krsnick",
["npcID"] = 0,
},
[127801] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 65310,
},
[24275] = {
["source"] = "Themariachi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[154221] = {
["encounterID"] = 1678,
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76260,
},
[310703] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Abused Soul",
["npcID"] = 159459,
},
[173676] = {
["source"] = "Infected Plunderer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86215,
},
[322745] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highland Runestag",
["npcID"] = 170856,
},
[41635] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Foxcoin",
["npcID"] = 0,
},
[152175] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[234084] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[194153] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308412] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[17364] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[172652] = {
["source"] = "Spore Drifter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81138,
},
[281792] = {
["source"] = "Aladorì",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[103740] = {
["source"] = "Toying-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[192106] = {
["source"] = "Drbecky",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328891] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Pigpapapump",
["npcID"] = 0,
},
[134477] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[308414] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[42650] = {
["source"] = "Chumar-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[59542] = {
["source"] = "Allyeoan-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[281794] = {
["source"] = "Aladorì",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[124218] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "ßilly",
["npcID"] = 0,
},
[224871] = {
["source"] = "Isaaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[278559] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Yozul",
["npcID"] = 0,
},
[281795] = {
["source"] = "Aladorì",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160068] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Warsmith",
["npcID"] = 77653,
},
[326846] = {
["source"] = "Inquisitor Sigar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167876,
},
[246807] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[119611] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Euw-Frostmourne",
["npcID"] = 0,
},
[308417] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326847] = {
["source"] = "Inquisitor Sigar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167876,
},
[327701] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zurakas",
["npcID"] = 0,
},
[330943] = {
["source"] = "Mushmoo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[260708] = {
["source"] = "Tehfury-Turalyon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326848] = {
["source"] = "Dustwilt Scythehorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163992,
},
[320178] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159030] = {
["source"] = "Glut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80868,
},
[124219] = {
["source"] = "Lilhorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327704] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cucklxrd",
["npcID"] = 0,
},
[127140] = {
["source"] = "Krinsch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[5302] = {
["source"] = "Bloodwrathh-Ragnaros",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[195181] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[110909] = {
["source"] = "Krinsch",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320707] = {
["source"] = "Vicious Warbanner",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164751,
},
[212800] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zelx",
["npcID"] = 0,
},
[121253] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kestrelclaw-Whisperwind",
["npcID"] = 0,
},
[1706] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Elisiyana",
["npcID"] = 0,
},
[129339] = {
["source"] = "Lamuerte",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203812] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[195182] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[159079] = {
["source"] = "Glut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80868,
},
[328900] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Poppingult",
["npcID"] = 0,
},
[89158] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sigtryggr",
["npcID"] = 0,
},
[319521] = {
["encounterID"] = 2364,
["source"] = "Kul'tharok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162309,
},
[189480] = {
["source"] = "Iron War Rylak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95615,
},
[5782] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[48320] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24686,
},
[159847] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[329849] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Greytx",
["npcID"] = 0,
},
[330532] = {
["source"] = "Shambling Arbalest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164510,
},
[16595] = {
["source"] = "Titanerous",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308425] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339142] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rustykayak",
["npcID"] = 0,
},
[160372] = {
["source"] = "Gorum",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76380,
},
[177778] = {
["source"] = "Wild Mandragora",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86260,
},
[308426] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[176947] = {
["source"] = "Krull",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79560,
},
[2008] = {
["source"] = "Jundon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[287790] = {
["source"] = "Satanicista",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33702] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[6262] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[203814] = {
["source"] = "Henköjin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322762] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Contorted",
["npcID"] = 0,
},
[188290] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[327710] = {
["source"] = "Melydie-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[238188] = {
["source"] = "Rawlins",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[155963] = {
["source"] = "Slavemaster Ok'mok",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75864,
},
[195627] = {
["source"] = "Theroguemate-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44480] = {
["source"] = "Sunblade Blood Knight",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24684,
},
[320716] = {
["source"] = "Baron Vyraz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 169901,
},
[1784] = {
["source"] = "Simplejaque",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308430] = {
["source"] = "Tarokh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[61336] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328908] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Getpho",
["npcID"] = 0,
},
[322765] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Highland Runestag",
["npcID"] = 170856,
},
[316836] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonevigil Collector",
["npcID"] = 158796,
},
[173181] = {
["source"] = "Stoneshamble Basilisk",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 74962,
},
[89766] = {
["source"] = "Felguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[83242] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[203819] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[195630] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328910] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Furious Alphahoof",
["npcID"] = 171383,
},
[330958] = {
["source"] = "Mor'Bitan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163431,
},
[132158] = {
["source"] = "Ihooveaboner",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326863] = {
["type"] = "BUFF",
["source"] = "Domitian-Gurubashi",
["encounterID"] = 2391,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[167401] = {
["source"] = "Jabberback",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79726,
},
[44533] = {
["source"] = "Wretched Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24688,
},
[308434] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Whalesy",
["npcID"] = 0,
},
[322977] = {
["encounterID"] = 2401,
["source"] = "Halkias",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165408,
},
[115008] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flaavin",
["npcID"] = 0,
},
[184367] = {
["source"] = "Arlaus-EarthenRing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[225832] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Radical",
["npcID"] = 0,
},
[2541] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[20243] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[15232] = {
["source"] = "Sunblade Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24762,
},
[130848] = {
["source"] = "Ga'trul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66276,
},
[1680] = {
["source"] = "Warios-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319539] = {
["type"] = "DEBUFF",
["source"] = "Kul'tharok",
["encounterID"] = 2364,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162309,
},
[306389] = {
["source"] = "Darkmaul Centurion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156825,
},
[324819] = {
["source"] = "Envious Soul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166621,
},
[148541] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[294966] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Albedø-Thrall",
["npcID"] = 0,
},
[304590] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[264735] = {
["source"] = "Turtle",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[96243] = {
["source"] = "Water Elemental",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78116,
},
[238193] = {
["source"] = "Rawlins",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[314582] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161350,
},
[324660] = {
["source"] = "Outcast Venthyr",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166551,
},
[124274] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320726] = {
["source"] = "Brethlun the Brand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166670,
},
[263916] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Romulus",
["npcID"] = 165189,
},
[176264] = {
["source"] = "Botani Vine-Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86261,
},
[204406] = {
["source"] = "Argency",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[179256] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[347348] = {
["source"] = "Masondixon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[274680] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Block Warden Carmine",
["npcID"] = 124024,
},
[44479] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24684,
},
[263725] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[347349] = {
["source"] = "Masondixon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[170619] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Acolyte",
["npcID"] = 73465,
},
[304946] = {
["source"] = "Tower Inquisitor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171626,
},
[164476] = {
["source"] = "Qiana Moonshadow",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81672,
},
[33370] = {
["source"] = "Roostér-Darkspear",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341207] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[527] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cardenal",
["npcID"] = 0,
},
[157406] = {
["source"] = "Shadowmoon Voidbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78790,
},
[175302] = {
["source"] = "Char the Burning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82311,
},
[8690] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326874] = {
["source"] = "Stonefiend Anklebiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167610,
},
[337113] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Azian-Kil'jaeden",
["npcID"] = 0,
},
[336958] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[153310] = {
["source"] = "Race MiniZep",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 76016,
},
[84342] = {
["source"] = "Toying-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[328923] = {
["source"] = "Kushandoj-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[292362] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rathonn",
["npcID"] = 0,
},
[247563] = {
["source"] = "ßoromir-Saurfang",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326876] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197690] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Smackmittens",
["npcID"] = 0,
},
[306399] = {
["source"] = "Ogre Taskmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156986,
},
[2061] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thio",
["npcID"] = 0,
},
[105771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Oaksu",
["npcID"] = 0,
},
[320734] = {
["source"] = "Brethlun the Brand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166670,
},
[265445] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Baedos",
["npcID"] = 160629,
},
[160325] = {
["source"] = "Pale Devourer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79205,
},
[235219] = {
["source"] = "Krinsch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[201787] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[292360] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tempten",
["npcID"] = 0,
},
[218164] = {
["source"] = "Fuggle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326879] = {
["source"] = "Stonefiend Anklebiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167610,
},
[104773] = {
["type"] = "BUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[52127] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zantasy",
["npcID"] = 0,
},
[169028] = {
["source"] = "Corruptor Kurgoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72647,
},
[319565] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164323] = {
["source"] = "Slave Hunter Brol",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79621,
},
[330976] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341215] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[292364] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vozakkhan",
["npcID"] = 0,
},
[328929] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Furious Alphahoof",
["npcID"] = 171383,
},
[298068] = {
["source"] = "Hexabolt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[982] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1715] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Thoktar-Lightbringer",
["npcID"] = 0,
},
[328930] = {
["source"] = "Kushandoj-MoonGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339169] = {
["source"] = "Amalgamation of Filth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166393,
},
[172656] = {
["source"] = "Fungal Stomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80739,
},
[158997] = {
["source"] = "Enraged Gembiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81729,
},
[691] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bori",
["npcID"] = 0,
},
[116888] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[320592] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ravenous Swarm",
["npcID"] = 160613,
},
[122692] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shanado",
["npcID"] = 0,
},
[172673] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 155197,
},
[30933] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86663,
},
[308455] = {
["encounterID"] = 2325,
["source"] = "Tunk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157300,
},
[160387] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 88864,
},
[328933] = {
["source"] = "Kushandoj-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[155722] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Udofire",
["npcID"] = 0,
},
[77130] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[171231] = {
["source"] = "Biolante",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75207,
},
[102292] = {
["source"] = "Darkmoon Steam Tonk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54588,
},
[47528] = {
["source"] = "Smor-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[264353] = {
["source"] = "Lukelol",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[312724] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glimmerdust, As Kil'jaeden",
["npcID"] = 160506,
},
[755] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[759] = {
["source"] = "Nimmz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34852] = {
["source"] = "Bloodwarder Falconer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17994,
},
[188033] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shiroë",
["npcID"] = 0,
},
[49576] = {
["source"] = "Smor-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165508] = {
["source"] = "Bruto",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81187,
},
[295727] = {
["source"] = "Gorindorel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[783] = {
["source"] = "Pãpêrcût",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345319] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[6343] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Icksoo",
["npcID"] = 0,
},
[146420] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[188034] = {
["source"] = "Drakuar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345094] = {
["source"] = "Novice Necromancer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170026,
},
[187464] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Holyshadow-Icecrown",
["npcID"] = 0,
},
[205523] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[326891] = {
["source"] = "Inquisitor Sigar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167876,
},
[20299] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24696,
},
[97097] = {
["source"] = "Malfanza",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[147367] = {
["source"] = "Hathaen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326892] = {
["type"] = "BUFF",
["source"] = "Dessia the Decapitator",
["encounterID"] = 2391,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164451,
},
[337131] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[339179] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166393,
},
[275699] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345561] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163077,
},
[225919] = {
["source"] = "Saravia-Terenas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[226943] = {
["source"] = "Floofae-Draka",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[310507] = {
["source"] = "Léftisttears",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323683] = {
["encounterID"] = 2404,
["source"] = "Mordretha, the Endless Empress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165946,
},
[236060] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Racket-EarthenRing",
["npcID"] = 0,
},
[328458] = {
["source"] = "Lakesis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168844,
},
[238286] = {
["source"] = "Rawlins",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[77575] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[883] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[139176] = {
["source"] = "Bodà",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324631] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[172679] = {
["source"] = "Gronnling Bonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80685,
},
[213634] = {
["source"] = "Ombra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[165512] = {
["source"] = "Bruto",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81187,
},
[90361] = {
["source"] = "Hati",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[294133] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Isyr",
["npcID"] = 0,
},
[304372] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Luciferno-Nazjatar",
["npcID"] = 0,
},
[56222] = {
["encounterID"] = 2401,
["source"] = "Drakeyy-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[133197] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Bomb",
["npcID"] = 79152,
},
[108853] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[207771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[58511] = {
["source"] = "Stormwind City Guard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 68,
},
[110645] = {
["source"] = "Nostariella",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[246851] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maghrak",
["npcID"] = 0,
},
[34428] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[329619] = {
["source"] = "Iryna the Disciplined",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159407,
},
[260734] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[325748] = {
["source"] = "Tirrany-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[315508] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fusassin",
["npcID"] = 0,
},
[338036] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thrandon",
["npcID"] = 0,
},
[124212] = {
["source"] = "Rayedri",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[38056] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Wolf",
["npcID"] = 73101,
},
[201350] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thequickster",
["npcID"] = 0,
},
[236502] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Riuk-ArgentDawn",
["npcID"] = 0,
},
[150626] = {
["source"] = "Yrel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79567,
},
[147085] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 79231,
},
[772] = {
["source"] = "Nemone-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23767] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[328951] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drdarkness-Aman'Thul",
["npcID"] = 0,
},
[167563] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pazo Stonehoof",
["npcID"] = 82006,
},
[263423] = {
["source"] = "Hound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[332708] = {
["source"] = "Heavin the Breaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167532,
},
[308474] = {
["source"] = "Drbecky",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[310522] = {
["source"] = "Léftisttears",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[238211] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mudara",
["npcID"] = 0,
},
[192090] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[158349] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78571,
},
[335096] = {
["source"] = "Arlaus-EarthenRing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345335] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Skour-WyrmrestAccord",
["npcID"] = 0,
},
[64844] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plushys",
["npcID"] = 0,
},
[333049] = {
["source"] = "Littlelemon-Gallywix",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[310524] = {
["source"] = "Bombard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[205448] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rojblake",
["npcID"] = 0,
},
[108291] = {
["source"] = "Moonstrider-Perenolde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324859] = {
["source"] = "Mistveil Tender",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166299,
},
[310525] = {
["source"] = "Léftisttears",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[82691] = {
["source"] = "Roostér-Darkspear",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[688] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[167009] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Talonpriest Zekk",
["npcID"] = 82886,
},
[335099] = {
["source"] = "Valentine-Dalvengyr",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[238213] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mudara",
["npcID"] = 0,
},
[281744] = {
["source"] = "Kersér",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[37548] = {
["source"] = "Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80258,
},
[326909] = {
["source"] = "Dustwilt Scythehorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163992,
},
[328957] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[298241] = {
["source"] = "Farmcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328837] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[147089] = {
["source"] = "Shadowmoon Voidbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80220,
},
[238214] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mudara",
["npcID"] = 0,
},
[62061] = {
["source"] = "Shwaya",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[167010] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dorald Kilnheart",
["npcID"] = 82244,
},
[312461] = {
["source"] = "Animus Mite",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159676,
},
[319628] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Swiftwing Larion",
["npcID"] = 160569,
},
[147362] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336009] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Myloum",
["npcID"] = 0,
},
[343294] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[5143] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[322817] = {
["type"] = "DEBUFF",
["source"] = "Devos",
["encounterID"] = 2359,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162061,
},
[174735] = {
["source"] = "Khaano",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86282,
},
[269576] = {
["source"] = "Samoanranger",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[49358] = {
["source"] = "Enferoui",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[153234] = {
["encounterID"] = 1678,
["source"] = "Azzakel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75927,
},
[34477] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[209660] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131733] = {
["source"] = "Hozen Diver",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66148,
},
[214667] = {
["source"] = "Doc Lightspanner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108140,
},
[324867] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330632] = {
["source"] = "Rotting Deathwalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168855,
},
[160402] = {
["source"] = "Pale Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76382,
},
[113724] = {
["source"] = "Roostér-Darkspear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[320657] = {
["source"] = "Morbid Boneguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168266,
},
[310534] = {
["source"] = "Léftisttears",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[106830] = {
["source"] = "Leafmealone-Jubei'Thos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308077] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bootus",
["npcID"] = 157956,
},
[337848] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pallykarben",
["npcID"] = 0,
},
[108366] = {
["type"] = "BUFF",
["source"] = "Herbcraft",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176785] = {
["source"] = "Dev-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[25771] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Divinelöki",
["npcID"] = 0,
},
[219788] = {
["source"] = "Lèxx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[89157] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[78674] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[23768] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[47788] = {
["source"] = "Treewisperer-Cenarius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[343424] = {
["source"] = "Astra, As Azshara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 161161,
},
[336040] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311471] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Quinbek",
["npcID"] = 0,
},
[203407] = {
["source"] = "Henköjin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[309524] = {
["source"] = "Lenbar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[22568] = {
["source"] = "Leafmealone-Jubei'Thos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[331016] = {
["source"] = "Saravia-Terenas",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308491] = {
["source"] = "Endelva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324773] = {
["source"] = "Gajidruid-TwistingNether",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[328969] = {
["source"] = "Avowed Absolutist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156740,
},
[34222] = {
["source"] = "Sunseeker Channeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19505,
},
[154262] = {
["encounterID"] = 1685,
["source"] = "Spiteful Arbiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76284,
},
[261769] = {
["source"] = "Fungusfunk-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328970] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Depraved Usher",
["npcID"] = 158908,
},
[78675] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[182104] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nessquik",
["npcID"] = 0,
},
[311466] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sebasnano",
["npcID"] = 0,
},
[321705] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Soulfused Construct",
["npcID"] = 165147,
},
[317559] = {
["source"] = "Bloodbeak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153964,
},
[154263] = {
["source"] = "Sargerei Warden",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77935,
},
[287916] = {
["source"] = "Teferí-KirinTor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131738] = {
["source"] = "Gul'var Peon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77522,
},
[740] = {
["source"] = "Tinkerbizzle-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308495] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Getpho",
["npcID"] = 0,
},
[134810] = {
["source"] = "Kae Ti",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68402,
},
[6807] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[202347] = {
["source"] = "Mëowformë-Thrall",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[178837] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79510,
},
[9739] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kengtus Pranch the Patient",
["npcID"] = 82012,
},
[331618] = {
["encounterID"] = 2366,
["source"] = "Xav the Unfallen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162329,
},
[347404] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Archivist",
["npcID"] = 161896,
},
[19801] = {
["source"] = "Rectalbreach",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48045] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Erzaheart",
["npcID"] = 0,
},
[1766] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[253896] = {
["source"] = "Ragehaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308498] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Zolyz",
["npcID"] = 0,
},
[556] = {
["source"] = "Mordranon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[86603] = {
["source"] = "Gavin Marlsbury",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 61838,
},
[331024] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 169959,
},
[341263] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[294165] = {
["source"] = "Brethlun the Brand",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166670,
},
[331133] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plaguedoused Remnant",
["npcID"] = 160048,
},
[323764] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[59052] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Grokago",
["npcID"] = 0,
},
[343312] = {
["source"] = "Cczar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311480] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Abaki",
["npcID"] = 0,
},
[34353] = {
["source"] = "Sunseeker Researcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18421,
},
[311492] = {
["source"] = "Chugloktal",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[238277] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mudara",
["npcID"] = 0,
},
[311491] = {
["source"] = "Lilcoaco-Dalaran",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[177779] = {
["source"] = "Wild Mandragora",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86260,
},
[18144] = {
["source"] = "Bloodfalcon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18155,
},
[270929] = {
["source"] = "Harpy Boltcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 152843,
},
[121411] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[166605] = {
["source"] = "Frenzied Forager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83449,
},
[62124] = {
["source"] = "Mathiass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339321] = {
["source"] = "Draynon-Dath'Remar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1066] = {
["source"] = "Granolà-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1966] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dbreezy",
["npcID"] = 0,
},
[308504] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Felnik",
["npcID"] = 0,
},
[102227] = {
["source"] = "Enemy Tonk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54642,
},
[15503] = {
["encounterID"] = 1895,
["source"] = "Warlord Salaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24559,
},
[306457] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 157328,
},
[2006] = {
["source"] = "Floofae-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[32216] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Demonstouch",
["npcID"] = 0,
},
[122693] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maghrak",
["npcID"] = 0,
},
[161485] = {
["source"] = "Biolante",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75207,
},
[308506] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Weàther",
["npcID"] = 0,
},
[188031] = {
["source"] = "Uleeh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2060] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bubblewrapx",
["npcID"] = 0,
},
[331032] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 169990,
},
[212084] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[181062] = {
["source"] = "Magicnak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[144031] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85942,
},
[205947] = {
["type"] = "BUFF",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 102263,
},
[49966] = {
["source"] = "Turd",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[320709] = {
["source"] = "Vicious Warbanner",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164751,
},
[311903] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Iraar",
["npcID"] = 0,
},
[308509] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Liufeng",
["npcID"] = 0,
},
[51886] = {
["source"] = "Toying-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323798] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chillpills-Malorne",
["npcID"] = 0,
},
[337178] = {
["source"] = "Unyielding Contender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170838,
},
[198103] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[210053] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Fluffen",
["npcID"] = 0,
},
[326940] = {
["source"] = "Khaliiq",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164297,
},
[328988] = {
["source"] = "Hopebreaker Vilstav",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168390,
},
[331036] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 169959,
},
[188550] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[323802] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Temporarý-BleedingHollow",
["npcID"] = 0,
},
[114255] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bubblewrapx",
["npcID"] = 0,
},
[314655] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161504,
},
[131222] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pokeygirl-Area52",
["npcID"] = 0,
},
[27609] = {
["encounterID"] = 1895,
["source"] = "Priestess Delrissa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24560,
},
[156320] = {
["source"] = "Armsmaster Gokk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77143,
},
[308413] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ubeenpunked",
["npcID"] = 0,
},
[267558] = {
["source"] = "Samvel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34798] = {
["source"] = "Bloodwarder Greenkeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18419,
},
[14032] = {
["encounterID"] = 1895,
["source"] = "Priestess Delrissa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24560,
},
[308514] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Aellandis-Icecrown",
["npcID"] = 0,
},
[2540] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[318319] = {
["source"] = "Morbid Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164273,
},
[174732] = {
["source"] = "Thorny Leafling",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85809,
},
[314658] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161504,
},
[267560] = {
["source"] = "Samvel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[61999] = {
["encounterID"] = 1678,
["source"] = "Smor-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[335082] = {
["source"] = "ßoromir-Saurfang",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[117588] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61029,
},
[333089] = {
["source"] = "Harleyjames-Ravenholdt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307443] = {
["source"] = "Rhægara-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197277] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tydroielan-TwistingNether",
["npcID"] = 0,
},
[328940] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodskin Tauralus",
["npcID"] = 162477,
},
[335716] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Conjured Wings",
["npcID"] = 171960,
},
[319733] = {
["encounterID"] = 2380,
["source"] = "Echelon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164185,
},
[342534] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Senthii, As Gul'dan",
["npcID"] = 160504,
},
[153251] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[341282] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rojblake",
["npcID"] = 0,
},
[160323] = {
["source"] = "Pale Devourer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79205,
},
[115315] = {
["source"] = "Brewzree-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[331044] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anima-Starved Shrieker",
["npcID"] = 169050,
},
[317959] = {
["source"] = "Forsworn Castigator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163458,
},
[276743] = {
["source"] = "Frostcambur-Kalecgos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331045] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cloudfeather Guardian",
["npcID"] = 170932,
},
[2908] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308520] = {
["source"] = "Thragan-WyrmrestAccord",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335097] = {
["source"] = "Arlaus-EarthenRing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[80354] = {
["source"] = "Forthewhorde",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[169117] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77020,
},
[248473] = {
["source"] = "Faeliyn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1064] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[160420] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73412,
},
[59638] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mirror Image",
["npcID"] = 31216,
},
[335101] = {
["source"] = "Arlaus-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[130900] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66276,
},
[106839] = {
["source"] = "Samoanbeast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330545] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164506,
},
[157858] = {
["source"] = "Quartermaster Thurg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72638,
},
[75002] = {
["source"] = "Snow Leopard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42170,
},
[205766] = {
["source"] = "Firstlight-SteamwheedleCartel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[12654] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shanado",
["npcID"] = 0,
},
[308488] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Scottgg",
["npcID"] = 0,
},
[204448] = {
["type"] = "BUFF",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 102263,
},
[198300] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[172704] = {
["source"] = "Infested Vinewarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80698,
},
[308525] = {
["source"] = "Woggugatx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198813] = {
["source"] = "Qixoni",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326494] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167998,
},
[320778] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Oozing Slime",
["npcID"] = 164621,
},
[31661] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[253595] = {
["source"] = "Arathras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[205473] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[18651] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 87518,
},
[341291] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rojblake",
["npcID"] = 0,
},
[335148] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341260] = {
["source"] = "Dustcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[818] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ubeenpunked",
["npcID"] = 0,
},
[27610] = {
["encounterID"] = 1895,
["source"] = "Priestess Delrissa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24560,
},
[3452] = {
["source"] = "Grisly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[313621] = {
["source"] = "Baroness Vashj",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163461,
},
[256153] = {
["source"] = "Ratuwu-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[174758] = {
["source"] = "Khaano",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86282,
},
[99] = {
["source"] = "Nanamitf-ArgentDawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[161229] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pridelands Stalker",
["npcID"] = 88579,
},
[51271] = {
["source"] = "Thardïac",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[199844] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zohee-ArgentDawn",
["npcID"] = 0,
},
[107574] = {
["source"] = "Vulgarius-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[16827] = {
["source"] = "Dog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[247454] = {
["source"] = "Kiocyn-Stormreaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333104] = {
["source"] = "Ryojiokuyama-ScarletCrusade",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335152] = {
["source"] = "Samoanbeast",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329009] = {
["source"] = "Hopebreaker Marku",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168287,
},
[330574] = {
["source"] = "Mor'Bitan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163431,
},
[324914] = {
["source"] = "Mistveil Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166299,
},
[686] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[210294] = {
["source"] = "Rumbo-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164261] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75835,
},
[35507] = {
["encounterID"] = 1927,
["source"] = "Thorn Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19920,
},
[355] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oaksu",
["npcID"] = 0,
},
[345393] = {
["source"] = "Azarc",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[58168] = {
["source"] = "Eatbiggetbig",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[214718] = {
["type"] = "DEBUFF",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 102263,
},
[131784] = {
["source"] = "Daedrella",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[157355] = {
["source"] = "Shadowmoon Voidmancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80162,
},
[247456] = {
["source"] = "Kiocyn-Stormreaver",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[65081] = {
["source"] = "Ballindah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[156854] = {
["source"] = "Gul'kosh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78437,
},
[329013] = {
["source"] = "Moongo the Sun King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163973,
},
[51514] = {
["source"] = "Ibaraky",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308054] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[147117] = {
["source"] = "Stonemaul Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75819,
},
[172714] = {
["source"] = "Botani Roottender",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86581,
},
[348] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shemyasa",
["npcID"] = 0,
},
[275773] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[195292] = {
["source"] = "Drakeyy-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[154852] = {
["source"] = "Sargerei Warden",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77935,
},
[52437] = {
["source"] = "Rageruu-EchoIsles",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[36414] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "All-Seeing Eye",
["npcID"] = 72783,
},
[138927] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thequickster",
["npcID"] = 0,
},
[308527] = {
["encounterID"] = 2326,
["source"] = "Gor'groth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156814,
},
[165548] = {
["source"] = "Pitfighter Vaandaam",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81188,
},
[321362] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[255647] = {
["source"] = "Vannellope-BurningBlade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[298839] = {
["source"] = "Zennt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5308] = {
["source"] = "ßoromir-Saurfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[77663] = {
["source"] = "Frostmane Raider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41544,
},
[310588] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[236298] = {
["source"] = "Frostcambur-Kalecgos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[130] = {
["source"] = "Pujo-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324923] = {
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164926,
},
[323881] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[46924] = {
["source"] = "ßoromir-Saurfang",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[150448] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76465,
},
[139] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Foxcoin",
["npcID"] = 0,
},
[325275] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Yozul",
["npcID"] = 0,
},
[172717] = {
["source"] = "Botani Greensworn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80696,
},
[139546] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[275779] = {
["source"] = "Mathiass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[171459] = {
["source"] = "Gul'var Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73468,
},
[228128] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[322486] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[131493] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vigaferdi",
["npcID"] = 0,
},
[183998] = {
["source"] = "Covfefe-Gurubashi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[172718] = {
["source"] = "Infected Plunderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86215,
},
[157360] = {
["source"] = "Kuu'rat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75484,
},
[122470] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[313450] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[130418] = {
["source"] = "Skyfire Marine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66300,
},
[304511] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[20572] = {
["source"] = "Leirgo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204459] = {
["type"] = "BUFF",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 102263,
},
[172719] = {
["source"] = "Infected Plunderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86215,
},
[5176] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[114165] = {
["source"] = "Holyhoov-AlteracMountains",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[40120] = {
["source"] = "Dankpuss",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345407] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Creepy Crawler",
["npcID"] = 175511,
},
[337211] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[131764] = {
["source"] = "Twinspire Taskmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54627,
},
[36398] = {
["source"] = "All-Seeing Eye",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72783,
},
[203981] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165553] = {
["source"] = "Pitfighter Vaandaam",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81188,
},
[174768] = {
["source"] = "Steamscar Primalist",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81747,
},
[44212] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Iheal-Mal'Ganis",
["npcID"] = 0,
},
[234153] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333931] = {
["source"] = "Feral Helhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 171245,
},
[343105] = {
["source"] = "Blazing Stygia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176423,
},
[167105] = {
["source"] = "Rageruu-EchoIsles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[100] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oaksu",
["npcID"] = 0,
},
[290121] = {
["source"] = "Llarz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[174769] = {
["source"] = "Steamscar Primalist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81747,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78116,
},
[5784] = {
["source"] = "Vhissilka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[194223] = {
["type"] = "BUFF",
["source"] = "Mysticalsage-Frostmourne",
["encounterID"] = 1925,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[173757] = {
["source"] = "Malkor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 83452,
},
[212653] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yozul",
["npcID"] = 0,
},
[323515] = {
["encounterID"] = 2365,
["source"] = "Gorechop",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162317,
},
[47540] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Myloum",
["npcID"] = 0,
},
[331537] = {
["source"] = "Shadowgrasp Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170190,
},
[160522] = {
["source"] = "Pale Crawler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 76382,
},
[343928] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[114282] = {
["source"] = "Kypreos",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[130396] = {
["source"] = "Gyrocopter Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66299,
},
[330604] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Echo of the Spy",
["npcID"] = 162399,
},
[19365] = {
["source"] = "Ancient Core Hound",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 11673,
},
[347462] = {
["source"] = "Shinobî",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[35399] = {
["source"] = "Bloodwarder Protector",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17993,
},
[164815] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204019] = {
["source"] = "Mathiass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[319290] = {
["source"] = "Diseased Horror",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170690,
},
[6360] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 1863,
},
[286031] = {
["source"] = "Breakman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[321820] = {
["source"] = "Wug",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 153582,
},
[185562] = {
["source"] = "Watadin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[29356] = {
["source"] = "Timberwolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[309627] = {
["source"] = "Guylaine-Illidan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[6552] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[309617] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quinbek",
["npcID"] = 0,
},
[327271] = {
["source"] = "Shaucy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[130912] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66276,
},
[213680] = {
["source"] = "ßear-ShatteredHand",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322893] = {
["type"] = "BUFF",
["source"] = "Devos",
["encounterID"] = 2359,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162061,
},
[116844] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surefang",
["npcID"] = 0,
},
[5225] = {
["source"] = "Adeanâ",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337228] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jarran",
["npcID"] = 0,
},
[326017] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[163708] = {
["source"] = "Sethekk Prophet",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 80638,
},
[309609] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Teika",
["npcID"] = 0,
},
[238254] = {
["source"] = "Æsidius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[47541] = {
["source"] = "Smor-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[149181] = {
["source"] = "Grom'kar Pyro",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75387,
},
[171143] = {
["source"] = "K'ara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81094,
},
[6795] = {
["source"] = "Samoanbeast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[328906] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Messerschmdt",
["npcID"] = 0,
},
[162488] = {
["source"] = "Getpho",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[130910] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66276,
},
[128228] = {
["source"] = "Pera Firestone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64480,
},
[173751] = {
["source"] = "Malkor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 83452,
},
[84325] = {
["source"] = "Dark Acolyte",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 73465,
},
[130630] = {
["source"] = "Gyrocopter Turret",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66299,
},
[331574] = {
["source"] = "Mistcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170217,
},
[114800] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[7384] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[333612] = {
["source"] = "Devourer Mite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156061,
},
[172728] = {
["source"] = "Creeping Vine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80697,
},
[149179] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82047,
},
[335187] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Glutton",
["npcID"] = 163415,
},
[227723] = {
["source"] = "Dankpuss",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320852] = {
["source"] = "Glaimana",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317065] = {
["source"] = "Nostariella",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[267611] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jarran",
["npcID"] = 0,
},
[130911] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66276,
},
[15407] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[171253] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[194249] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rojblake",
["npcID"] = 0,
},
[326997] = {
["source"] = "Stoneborn Slasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167607,
},
[160443] = {
["source"] = "Gnaw Bloodseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81670,
},
[329321] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Gargon",
["npcID"] = 164563,
},
[34769] = {
["source"] = "Runnow",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3326] = {
["source"] = "Forgecraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203795] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[173754] = {
["source"] = "Shadowmoon Portalmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80181,
},
[79206] = {
["source"] = "Masondixon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[210116] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[332169] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Avatar of Aliothe",
["npcID"] = 170400,
},
[17767] = {
["type"] = "BUFF",
["source"] = "Barmon",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 1860,
},
[114018] = {
["source"] = "Kàrina-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204471] = {
["encounterID"] = 1849,
["source"] = "Skorpyron",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102263,
},
[262115] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[165564] = {
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[309623] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kukyo",
["npcID"] = 0,
},
[330546] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164506,
},
[345251] = {
["source"] = "Tastytreats",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[35395] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethudor",
["npcID"] = 0,
},
[51124] = {
["source"] = "Chucknorra-Sentinels",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335193] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Enraged Glutton",
["npcID"] = 163415,
},
[345432] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[173756] = {
["source"] = "Shadowmoon Portalmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80181,
},
[324651] = {
["source"] = "Outcast Venthyr",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166551,
},
[170396] = {
["source"] = "Grogal the Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72674,
},
[175507] = {
["source"] = "Razuun",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 72793,
},
[202425] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tarinia",
["npcID"] = 0,
},
[215601] = {
["source"] = "Alliance Recruit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 107839,
},
[155327] = {
["type"] = "BUFF",
["source"] = "Soulbinder Nyami",
["encounterID"] = 1685,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 76177,
},
[205179] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[149184] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82047,
},
[96312] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Choplo-Zul'jin",
["npcID"] = 0,
},
[164057] = {
["source"] = "Threadcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321329] = {
["source"] = "Roostér-Darkspear",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[54710] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deadjunkie",
["npcID"] = 0,
},
[68992] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Constanz",
["npcID"] = 0,
},
[304948] = {
["source"] = "Deslan the Torturer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166987,
},
[313053] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[306715] = {
["source"] = "Phurîan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[214222] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[3942] = {
["source"] = "Pipeneri",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[88423] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fadedmoon",
["npcID"] = 0,
},
[309618] = {
["source"] = "Anne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[81256] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[335167] = {
["source"] = "Samoanranger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[312674] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Necromantic Scourer",
["npcID"] = 161388,
},
[149186] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82047,
},
[166592] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[224953] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sylvari Hunter",
["npcID"] = 163662,
},
[345439] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rasmus",
["npcID"] = 0,
},
[226229] = {
["encounterID"] = 1849,
["source"] = "Volatile Shard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108132,
},
[49143] = {
["source"] = "Phurîan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[34745] = {
["encounterID"] = 1926,
["source"] = "Frayer Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19953,
},
[156860] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77808,
},
[331106] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[156842] = {
["encounterID"] = 1714,
["source"] = "Teron'gor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77734,
},
[343393] = {
["encounterID"] = 2401,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[160450] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339298] = {
["source"] = "Thewizarrd-Azralon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[26297] = {
["source"] = "Mõjö-Thrall",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[281215] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Walapalusa",
["npcID"] = 0,
},
[221883] = {
["source"] = "Jattx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331108] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plaguedoused Remnant",
["npcID"] = 160048,
},
[309636] = {
["source"] = "Fadedowl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[18165] = {
["source"] = "Karabor Battle-Priest",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 79652,
},
[80313] = {
["source"] = "Varadel-Whisperwind",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[182512] = {
["source"] = "Samoanbatman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[215387] = {
["source"] = "Rotager",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343396] = {
["type"] = "BUFF",
["source"] = "Herbcraft",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340655] = {
["source"] = "Vengeful Essence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172077,
},
[173762] = {
["source"] = "Malkor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83452,
},
[44320] = {
["type"] = "BUFF",
["source"] = "Fel Crystal",
["encounterID"] = 1897,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24722,
},
[68996] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Meatstik",
["npcID"] = 0,
},
[254473] = {
["source"] = "Oliviamunn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320465] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Strategist Ocra",
["npcID"] = 160883,
},
[322767] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[327016] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Grand Inquisitor Nicu",
["npcID"] = 159156,
},
[221885] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rycepz",
["npcID"] = 0,
},
[322921] = {
["encounterID"] = 2359,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[118] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harrydresden",
["npcID"] = 0,
},
[343399] = {
["source"] = "Allyeoan-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[152262] = {
["source"] = "Mathiass",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324909] = {
["source"] = "Drust Boughbreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164926,
},
[325696] = {
["source"] = "Oaken Crusher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 172080,
},
[278935] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blighted Subduer",
["npcID"] = 170737,
},
[221886] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Trunkonious",
["npcID"] = 0,
},
[173764] = {
["source"] = "Infected Plunderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86215,
},
[34763] = {
["encounterID"] = 1926,
["source"] = "High Botanist Freywinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17975,
},
[327019] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162105,
},
[2983] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Francypants",
["npcID"] = 0,
},
[272679] = {
["source"] = "Samoanranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324392] = {
["source"] = "Forsworn Goliath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168318,
},
[36399] = {
["source"] = "All-Seeing Eye",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 72783,
},
[221887] = {
["source"] = "Paladima",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320293] = {
["type"] = "BUFF",
["source"] = "Sathel the Accursed",
["encounterID"] = 2391,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164461,
},
[329438] = {
["source"] = "Congealed Torment",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165640,
},
[37554] = {
["source"] = "Yrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73412,
},
[50769] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[31567] = {
["source"] = "Bloodwarder Falconer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17994,
},
[408] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ðraith",
["npcID"] = 0,
},
[6268] = {
["source"] = "Desert Wastetalon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85565,
},
[158998] = {
["source"] = "Enraged Gembiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81729,
},
[257946] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[161445] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85942,
},
[105691] = {
["source"] = "Sparkledusts",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331510] = {
["source"] = "Unyielding Contender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170838,
},
[161480] = {
["source"] = "Biolante",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 75207,
},
[48438] = {
["source"] = "Jabalan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204483] = {
["type"] = "DEBUFF",
["source"] = "Skorpyron",
["encounterID"] = 1849,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 102263,
},
[233395] = {
["source"] = "Phurîan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324073] = {
["source"] = "Realzs-Illidan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[316830] = {
["source"] = "Stone Legion Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168631,
},
[148540] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[153762] = {
["type"] = "BUFF",
["source"] = "Unknown",
["encounterID"] = 1678,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 76216,
},
[322930] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Predatory Bloodtusk",
["npcID"] = 158752,
},
[334067] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Holyfunk",
["npcID"] = 0,
},
[329113] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[23214] = {
["source"] = "Ricardão",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322931] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Predatory Bloodtusk",
["npcID"] = 158752,
},
[331270] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Diseased Remnant",
["npcID"] = 167923,
},
[317963] = {
["source"] = "Forsworn Castigator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163458,
},
[207707] = {
["source"] = "Forsworn Vanguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163457,
},
[225921] = {
["source"] = "Saravia-Terenas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[330765] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Garyspivey-Zul'jin",
["npcID"] = 0,
},
[283167] = {
["source"] = "Jabalan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[45242] = {
["source"] = "Voidallah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[123725] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kestrelclaw-Whisperwind",
["npcID"] = 0,
},
[278056] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blossoming Dreadshade",
["npcID"] = 164759,
},
[327029] = {
["source"] = "Shambling Arbalest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164510,
},
[23135] = {
["source"] = "Bigboibluu",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[156079] = {
["source"] = "Drbecky",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[80009] = {
["source"] = "Qiana Moonshadow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81672,
},
[325027] = {
["source"] = "Drust Boughbreaker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164926,
},
[121471] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108194] = {
["source"] = "Chumar-Proudmoore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[163977] = {
["source"] = "Lernaea Vilescale",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85693,
},
[183218] = {
["source"] = "Saladinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[465] = {
["source"] = "Jattx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322936] = {
["encounterID"] = 2401,
["source"] = "Halkias",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165408,
},
[81262] = {
["source"] = "Efflorescence",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47649,
},
[53209] = {
["source"] = "Plazmagrunt-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[58984] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[159035] = {
["source"] = "Shaadum",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78728,
},
[475] = {
["source"] = "Ceydra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[318181] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Insatiable Etherwyrm",
["npcID"] = 172704,
},
[319682] = {
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157069,
},
[322938] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[169903] = {
["source"] = "Vicious Observer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84096,
},
[703] = {
["source"] = "Reverrie-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326062] = {
["source"] = "ßoromir-Saurfang",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322939] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[324987] = {
["source"] = "Mistveil Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 166301,
},
[157228] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[304510] = {
["source"] = "Herbcraft",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44475] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24683,
},
[273422] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blighted Subduer",
["npcID"] = 170737,
},
[157051] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77889,
},
[345466] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[49376] = {
["source"] = "Leafmealone-Jubei'Thos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[47585] = {
["source"] = "Voidallah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[271369] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Masked Soulsplitter",
["npcID"] = 161456,
},
[61353] = {
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29476,
},
[339324] = {
["source"] = "Kerabell",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1822] = {
["source"] = "Leafmealone-Jubei'Thos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[311469] = {
["source"] = "Thatfnguy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322943] = {
["encounterID"] = 2401,
["source"] = "Halkias",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165408,
},
[51533] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osteroth-TheVentureCo",
["npcID"] = 0,
},
[343421] = {
["source"] = "Astra, As Azshara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 161161,
},
[80240] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Georonia",
["npcID"] = 0,
},
[8222] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Abusiiv",
["npcID"] = 0,
},
[341374] = {
["source"] = "Digasauruspr-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[158940] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77067,
},
[97463] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Daveyo-Illidan",
["npcID"] = 0,
},
[82800] = {
["source"] = "Karabor Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72391,
},
[337520] = {
["source"] = "Keep Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159412,
},
[118455] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nhala-ArgentDawn",
["npcID"] = 0,
},
[269571] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Neryel",
["npcID"] = 0,
},
[338868] = {
["source"] = "Nurgash Muckformed",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 167526,
},
[338358] = {
["source"] = "Harika the Horrid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165290,
},
[335233] = {
["source"] = "Ravenous Gorger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161692,
},
[164561] = {
["source"] = "Steamscar Warrior",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 81738,
},
[279709] = {
["source"] = "Metralleta-EarthenRing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[199373] = {
["source"] = "Army of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24207,
},
[335234] = {
["source"] = "ßoromir-Saurfang",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[168657] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Firenugz",
["npcID"] = 0,
},
[213644] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethudor",
["npcID"] = 0,
},
[156307] = {
["source"] = "Armsmaster Gokk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 77143,
},
[321348] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165003,
},
[213708] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[61882] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Johanthân-Saurfang",
["npcID"] = 0,
},
[173711] = {
["source"] = "Infected Bruiser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81184,
},
[134522] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yolette",
["npcID"] = 0,
},
[337824] = {
["source"] = "Pumpadin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[176898] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Châos",
["npcID"] = 0,
},
[5277] = {
["source"] = "Raybanz-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165746] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Vindicator Maraad",
["npcID"] = 78554,
},
[46585] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stillalive-KirinTor",
["npcID"] = 0,
},
[202748] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Breakman",
["npcID"] = 0,
},
[331906] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unstable Muck",
["npcID"] = 157847,
},
[32223] = {
["source"] = "Weldabeast",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[158082] = {
["source"] = "Iron Grunt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 91599,
},
[203155] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[332868] = {
["source"] = "Trap Door Rift",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170703,
},
[702] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[330678] = {
["source"] = "Hulking Doomfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168862,
},
[6201] = {
["source"] = "Yoja",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[41425] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Broyarx-TheScryers",
["npcID"] = 0,
},
[272126] = {
["source"] = "Lev",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328462] = {
["source"] = "Astronos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168845,
},
[188501] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[177564] = {
["source"] = "Baroness Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170309,
},
[311054] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Goketsu",
["npcID"] = 0,
},
[110959] = {
["source"] = "Gadral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[321652] = {
["source"] = "Morbid Boneguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 168266,
},
[251836] = {
["source"] = "Saqnasty",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343433] = {
["source"] = "Dreamweaver, As N'Zoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 160510,
},
[152279] = {
["source"] = "Chucknorra-Sentinels",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327885] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[177600] = {
["source"] = "Everbloom Wasp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86264,
},
[130925] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66276,
},
[15692] = {
["source"] = "Rangari Erdanii",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84740,
},
[167508] = {
["source"] = "Kigli'ak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79727,
},
[115178] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[343435] = {
["source"] = "Stage Hand",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161364,
},
[288146] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Littletickle",
["npcID"] = 0,
},
[34644] = {
["source"] = "Greater Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19557,
},
[118000] = {
["source"] = "Haydonius-Thrall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[313449] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herbcraft",
["npcID"] = 0,
},
[110960] = {
["source"] = "Gadral",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339341] = {
["source"] = "Lovespell",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[283408] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 161350,
},
[341084] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blighted Evoker",
["npcID"] = 170472,
},
[201427] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drdarkness-Aman'Thul",
["npcID"] = 0,
},
[339342] = {
["source"] = "Lovespell",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[130414] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ed",
["npcID"] = 82003,
},
[3567] = {
["source"] = "Nimmz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329104] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[345078] = {
["source"] = "Novice Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 170026,
},
[203847] = {
["source"] = "Syssare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[61391] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[337296] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zerukal",
["npcID"] = 0,
},
[89751] = {
["source"] = "Skurikvazin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[161933] = {
["source"] = "Biolante",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75207,
},
[343440] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[43198] = {
["source"] = "Riplley",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[314772] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[330831] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[171389] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[974] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shocknroll",
["npcID"] = 0,
},
[44478] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24683,
},
[325012] = {
["source"] = "Olumasp-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1022] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[337299] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kboog",
["npcID"] = 0,
},
[149212] = {
["source"] = "Grom'kar Shieldbearer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75089,
},
[50259] = {
["source"] = "Leafmealone-Jubei'Thos",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343443] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335338] = {
["type"] = "DEBUFF",
["source"] = "Lord Chamberlain",
["encounterID"] = 2381,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 164218,
},
[203534] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xial",
["npcID"] = 0,
},
[331248] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Colossal Goo",
["npcID"] = 165015,
},
[325706] = {
["source"] = "Oaken Crusher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 172080,
},
[191034] = {
["source"] = "Nanamitf-ArgentDawn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322967] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165111,
},
[126346] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86663,
},
[343445] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[35361] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 31228,
},
[322968] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[1160] = {
["source"] = "Bloodwrathh-Ragnaros",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[32736] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ariok",
["npcID"] = 78556,
},
[8242] = {
["source"] = "Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 87519,
},
[44199] = {
["type"] = "BUFF",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24674,
},
[124273] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343447] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345495] = {
["source"] = "Frothing Pustule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175519,
},
[331161] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soulfused Construct",
["npcID"] = 165147,
},
[186263] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zääp",
["npcID"] = 0,
},
[327066] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pringlescan",
["npcID"] = 0,
},
[222256] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Justuravgpal",
["npcID"] = 0,
},
[173788] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twisted Ancient",
["npcID"] = 72785,
},
[308637] = {
["source"] = "Vitória",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[156964] = {
["encounterID"] = 1714,
["source"] = "Teron'gor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77734,
},
[317958] = {
["source"] = "Crimson Assassin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165061,
},
[331163] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soulfused Construct",
["npcID"] = 165147,
},
[44120] = {
["type"] = "DEBUFF",
["source"] = "Eramas Brightblaze",
["encounterID"] = 1895,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 24554,
},
[209967] = {
["source"] = "Dire Basilisk",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 105419,
},
[322614] = {
["encounterID"] = 2393,
["source"] = "Tred'ova",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[185394] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zaledia",
["npcID"] = 0,
},
[325021] = {
["source"] = "Mistveil Stalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 166301,
},
[327069] = {
["source"] = "Nebakanezzer-Nazgrel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345499] = {
["source"] = "Tinkerbizzle-Draka",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[314783] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325022] = {
["source"] = "Justice",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164197,
},
[102558] = {
["source"] = "Churrasco-Maelstrom",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197919] = {
["source"] = "Vellerin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108446] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[21169] = {
["source"] = "Picorix-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203554] = {
["source"] = "With",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328452] = {
["source"] = "Klotos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 168843,
},
[193315] = {
["source"] = "Theroguemate-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[325024] = {
["source"] = "Carved Tracker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157301,
},
[179251] = {
["source"] = "Brownshugar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157997] = {
["source"] = "Walvetrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[290213] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sevriin-Frostmourne",
["npcID"] = 0,
},
[124275] = {
["source"] = "Brewzree-Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345627] = {
["source"] = "Towering Tombcarver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159174,
},
[120468] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moonshell Crawler",
["npcID"] = 84341,
},
[173180] = {
["source"] = "Stoneshamble Basilisk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 74962,
},
[156071] = {
["source"] = "Tazzek-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[153396] = {
["encounterID"] = 1678,
["source"] = "Azzakel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75927,
},
[312740] = {
["source"] = "Herbcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[203846] = {
["source"] = "Exaudi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[333218] = {
["source"] = "Abbacab",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[131385] = {
["source"] = "Felstorm Warlock",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66270,
},
[44224] = {
["encounterID"] = 1894,
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24664,
},
[322980] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Evolving Mite",
["npcID"] = 163350,
},
[342049] = {
["source"] = "Razorbackxx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1856] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ðraith",
["npcID"] = 0,
},
[329449] = {
["source"] = "Lilcoaco-Dalaran",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331172] = {
["encounterID"] = 2393,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[193475] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Glockstar",
["npcID"] = 0,
},
[168338] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[271788] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rmbow-Stormrage",
["npcID"] = 0,
},
[314791] = {
["source"] = "Voiddene-Frostmourne",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[155961] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75864,
},
[311859] = {
["source"] = "Azrakan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[320229] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164577,
},
[108199] = {
["source"] = "Drakeyy-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[17962] = {
["source"] = "Lethali",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[13787] = {
["source"] = "Plugger Spazzring",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144129,
},
[329127] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Broyarx-TheScryers",
["npcID"] = 0,
},
[314793] = {
["source"] = "Addleatus-TheVentureCo",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[30449] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vantre-ArgentDawn",
["npcID"] = 0,
},
[130466] = {
["source"] = "Twinspire Grunt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66269,
},
[115062] = {
["source"] = "Hozen Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57119,
},
[336604] = {
["type"] = "BUFF",
["source"] = "Bloodwrathh-Ragnaros",
["encounterID"] = 2359,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[189478] = {
["source"] = "Iron War Rylak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95615,
},
[192225] = {
["source"] = "Blardy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[27634] = {
["encounterID"] = 1895,
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24555,
},
[161509] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 80699,
},
[49887] = {
["encounterID"] = 1894,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[67713] = {
["source"] = "Zarcabi",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337625] = {
["source"] = "Living Blade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158988,
},
[26064] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Turtle",
["npcID"] = 165189,
},
[166629] = {
["source"] = "Podling Trapper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84862,
},
[256374] = {
["source"] = "Voidallah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329131] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[314797] = {
["source"] = "Samoanbatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44640] = {
["source"] = "Sister of Torment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24697,
},
[278244] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vinlena",
["npcID"] = 0,
},
[123254] = {
["source"] = "Gorbik-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[185152] = {
["source"] = "Magmic Flamebinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176426,
},
[257519] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Blighted Invader",
["npcID"] = 169227,
},
[335276] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Morphìous-Zul'jin",
["npcID"] = 0,
},
[337510] = {
["source"] = "Elieae-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165985] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81240,
},
[252216] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dremoolon",
["npcID"] = 0,
},
[175431] = {
["source"] = "Stronguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[172774] = {
["source"] = "Mangled Boulderbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85988,
},
[163077] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85942,
},
[268899] = {
["source"] = "Fearce-Khaz'goroth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325640] = {
["encounterID"] = 1849,
["source"] = "Herbcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[279989] = {
["source"] = "Boatjr-BlackDragonflight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[111898] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333231] = {
["encounterID"] = 2391,
["source"] = "Sathel the Accursed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164461,
},
[337616] = {
["source"] = "Living Scepter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158989,
},
[337327] = {
["source"] = "Loadstar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[20707] = {
["source"] = "Harleyjames-Ravenholdt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34661] = {
["encounterID"] = 1928,
["source"] = "Thorngrin the Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17978,
},
[221562] = {
["source"] = "Drakeyy-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[312755] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Private Cole",
["npcID"] = 157051,
},
[108978] = {
["source"] = "Krinsch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[267997] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vilefiend",
["npcID"] = 135816,
},
[324197] = {
["source"] = "Nixíe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[340683] = {
["source"] = "Oakheart Nightscreamer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172079,
},
[157526] = {
["source"] = "Shadowmoon Voidbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78790,
},
[165839] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82439,
},
[160597] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgecraft",
["npcID"] = 0,
},
[345521] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 156203,
},
[44482] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24684,
},
[44517] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24686,
},
[105421] = {
["source"] = "Mathiass",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115065] = {
["source"] = "Slingtail Mudseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55193,
},
[281209] = {
["source"] = "Forgeskinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341427] = {
["source"] = "Celaeda",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[163048] = {
["source"] = "Scavenging Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83448,
},
[345523] = {
["source"] = "Stygian Incinerator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156203,
},
[142174] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Small Illusionary Guardian",
["npcID"] = 71079,
},
[316855] = {
["source"] = "Crimson Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165059,
},
[171754] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85902,
},
[321444] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Holyshadow-Icecrown",
["npcID"] = 0,
},
[322999] = {
["encounterID"] = 2359,
["source"] = "Devos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162061,
},
[316856] = {
["source"] = "Crimson Protector",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165059,
},
[211793] = {
["source"] = "Phurîan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[209746] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Littlepantzs-Mal'Ganis",
["npcID"] = 0,
},
[323000] = {
["source"] = "Evolving Mite",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163350,
},
[130437] = {
["source"] = "Garrosh'ar Grunt",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66282,
},
[158558] = {
["source"] = "Lunarfall Raven",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 82037,
},
[158050] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78274,
},
[323001] = {
["type"] = "DEBUFF",
["source"] = "Halkias",
["encounterID"] = 2401,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165408,
},
[255852] = {
["source"] = "Grove Prowler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 172722,
},
[170367] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gul'var Grunt",
["npcID"] = 73468,
},
[114908] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Radical",
["npcID"] = 0,
},
[298700] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jimstar",
["npcID"] = 0,
},
[333241] = {
["source"] = "Raging Bloodhorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 170850,
},
[320135] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baron Halis",
["npcID"] = 170082,
},
[161691] = {
["source"] = "Threadcraft",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[77764] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Beamballer",
["npcID"] = 0,
},
[205146] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thanõs",
["npcID"] = 0,
},
[104316] = {
["source"] = "Owenz-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[44227] = {
["encounterID"] = 1894,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331412] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Animated Corpsehound",
["npcID"] = 165349,
},
[323393] = {
["encounterID"] = 2381,
["source"] = "Lord Chamberlain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164218,
},
[171757] = {
["source"] = "Insane Nullifier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85902,
},
[172781] = {
["source"] = "Mangled Boulderbreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 85988,
},
[337556] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[256739] = {
["source"] = "Dhaop",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[340662] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Witherscorn Vanguard",
["npcID"] = 170739,
},
[217832] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Samoanbatman",
["npcID"] = 0,
},
[109248] = {
["source"] = "Pregnantboyx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[196099] = {
["source"] = "Harleyjames-Ravenholdt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329425] = {
["source"] = "Protector of Flame",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 176425,
},
[337341] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Itsbee-Dalaran",
["npcID"] = 0,
},
[326309] = {
["encounterID"] = 2393,
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[191212] = {
["source"] = "Claylla",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[166766] = {
["source"] = "Mawsworn Shackler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 176401,
},
[340642] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Blighted Fadeblade",
["npcID"] = 166111,
},
[781] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Weàther",
["npcID"] = 0,
},
[34670] = {
["type"] = "BUFF",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17978,
},
[21562] = {
["source"] = "Spönge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320463] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steelskin Reader",
["npcID"] = 160884,
},
[157425] = {
["source"] = "Void Shield Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 78025,
},
[44141] = {
["encounterID"] = 1895,
["source"] = "Ellrys Duskhallow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24558,
},
[341678] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Messerschmdt",
["npcID"] = 0,
},
[345535] = {
["source"] = "Nebakanezzer-Nazgrel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323010] = {
["type"] = "BUFF",
["source"] = "Devos",
["encounterID"] = 2359,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 162061,
},
[157053] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77890,
},
[132403] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alahn-ArgentDawn",
["npcID"] = 0,
},
[337345] = {
["source"] = "Fanatic Crusader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 159459,
},
[206572] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Strighker",
["npcID"] = 0,
},
[172068] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86216,
},
[104318] = {
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55659,
},
[337346] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vain Courtier",
["npcID"] = 159459,
},
[197626] = {
["source"] = "Tinkerbizzle-Draka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[333251] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plsforgiveme-Sargeras",
["npcID"] = 0,
},
[165762] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 81990,
},
[159533] = {
["source"] = "Shadowmoon Ancestor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79007,
},
[149236] = {
["source"] = "Terrorfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73062,
},
[16589] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sifrileidy-BleedingHollow",
["npcID"] = 0,
},
[5697] = {
["source"] = "Harleyjames-Ravenholdt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337348] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shattered Soul",
["npcID"] = 160120,
},
[6673] = {
["source"] = "Taylorsmorcs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154356] = {
["source"] = "Sargerei Soulpriest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76595,
},
[32379] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[337349] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ruthless Brigand",
["npcID"] = 159459,
},
[247676] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cröökz",
["npcID"] = 0,
},
[159125] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79354,
},
[161781] = {
["source"] = "Quakefist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81360,
},
[290640] = {
["source"] = "Kimba",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[160081] = {
["source"] = "Void Oculus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79191,
},
[153499] = {
["encounterID"] = 1678,
["source"] = "Azzakel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 75927,
},
[171927] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 86080,
},
[337351] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Covetous Pirate-King",
["npcID"] = 159459,
},
[323017] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165687,
},
[160699] = {
["source"] = "Generic Bunny",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59115,
},
[34170] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[312779] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'kai, As Argus, the Unmaker",
["npcID"] = 160507,
},
[306636] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Samoanranger",
["npcID"] = 0,
},
[341448] = {
["source"] = "Bakwah-Caelestrasz",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[124121] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Jadier",
["npcID"] = 0,
},
[337353] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Traitorous Thug",
["npcID"] = 159459,
},
[149239] = {
["source"] = "Terrorfang",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 73062,
},
[341449] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Morrowgrove-WyrmrestAccord",
["npcID"] = 0,
},
[24394] = {
["source"] = "Turd",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[312781] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'kai, As Argus, the Unmaker",
["npcID"] = 160507,
},
[323020] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[333259] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[261866] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ashvane Jailer",
["npcID"] = 124022,
},
[345546] = {
["source"] = "Rectalbreach",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[31935] = {
["source"] = "Mitslfd-Frostmourne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[116095] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goketsu",
["npcID"] = 0,
},
[307119] = {
["source"] = "Dalasarian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[79849] = {
["source"] = "Kirin Tor Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 104091,
},
[280375] = {
["source"] = "Argenos-Ragnaros",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[193456] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ralidan",
["npcID"] = 0,
},
[147193] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistythedoll",
["npcID"] = 0,
},
[55164] = {
["source"] = "Threadcraft",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[174524] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zhoe",
["npcID"] = 0,
},
[280398] = {
["source"] = "Dazanar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[162243] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sinshiki",
["npcID"] = 0,
},
[146273] = {
["source"] = "Jrmybearimy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[142326] = {
["source"] = "Iraeä-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[233397] = {
["source"] = "Chucknorra-Sentinels",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[169414] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironmarch Warcaster",
["npcID"] = 78670,
},
[329168] = {
["encounterID"] = 2381,
["source"] = "Sinstone Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165737,
},
[347598] = {
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[132564] = {
["source"] = "Boatjr-BlackDragonflight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[170320] = {
["source"] = "Infected Lumberjack",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81183,
},
[87551] = {
["source"] = "Ecstæsy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[146282] = {
["source"] = "Voidstamp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308073] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bootus",
["npcID"] = 157956,
},
[34759] = {
["encounterID"] = 1926,
["source"] = "High Botanist Freywinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17975,
},
[263642] = {
["source"] = "Saravia-Terenas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[347600] = {
["source"] = "Zarathor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[319409] = {
["source"] = "Sinstone Construct",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 159233,
},
[208628] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brawleÿ",
["npcID"] = 0,
},
[329171] = {
["encounterID"] = 2381,
["source"] = "Sinstone Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165737,
},
[347601] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bernin-TheVentureCo",
["npcID"] = 0,
},
[160600] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alunearrow",
["npcID"] = 0,
},
[26746] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Khtealla",
["npcID"] = 0,
},
},
["aura2_x_offset"] = 0,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["nameplateMotionSpeed"] = "0.05",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyPets"] = "0",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.15",
["nameplateTargetRadialPosition"] = "1",
["nameplateShowFriends"] = "1",
["nameplateResourceOnTarget"] = "0",
["nameplateMinScale"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "0",
["nameplateShowAll"] = "1",
["nameplateLargeTopInset"] = "0.085",
["nameplateOtherTopInset"] = "0.085",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateTargetBehindMaxDistance"] = "30",
["NamePlateHorizontalScale"] = "1",
["nameplateShowEnemies"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["NamePlateVerticalScale"] = "1",
},
["login_counter"] = 2049,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["plate_config"] = {
["global_health_height"] = 12,
["global_health_width"] = 112,
},
["aura_y_offset"] = 5,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["version"] = -1,
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1547392935,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Name"] = "Color Automation [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["version"] = -1,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["Name"] = "Cast Bar Icon Settings [P]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
{
["Enabled"] = false,
["Revision"] = 254,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["version"] = -1,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1603567332,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Ahwa-Azralon",
["version"] = -1,
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["Time"] = 1547406548,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 135358,
["Name"] = "Execute Range [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["version"] = -1,
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1541606242,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 1990989,
["Name"] = "Hide Neutral Units [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 222,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["version"] = -1,
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1547993111,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Tecno-Azralon",
["version"] = -1,
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["Time"] = 1547409079,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 133689,
["Name"] = "Extra Border [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["version"] = -1,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["Name"] = "Reorder Nameplate [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["version"] = -1,
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["Time"] = 1554138845,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 136207,
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["version"] = -1,
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Time"] = 1548278227,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 1966587,
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["version"] = -1,
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["Time"] = 1552354619,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 878211,
["Name"] = "Current Target Color [Plater]",
},
},
["aura_x_offset"] = 0,
["first_run3"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["use_ui_parent"] = true,
["patch_version"] = 13,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1608852889,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 59,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Time to die Spiteful affix",
["__TrashAt"] = 1610671805,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Name"] = "Width",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "bgWidth",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Name"] = "Text Size",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textSize",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            if target and target ~= \"\" then\n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName (plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1609281290,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 132,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 27,
["Key"] = "bgWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Key"] = "bgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "textSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = false,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = false,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
["__TrashAt"] = 1612218878,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1604354808,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 331,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
["__TrashAt"] = 1612218878,
},
},
["number_region_first_run"] = true,
["ui_parent_scale_tune"] = 1.406249965948519,
["script_auto_imported"] = {
["Unit - Important"] = 11,
["Aura - Buff Alert"] = 13,
["Cast - Very Important"] = 11,
["Explosion Affix M+"] = 11,
["Aura - Debuff Alert"] = 11,
["Cast - Ultra Important"] = 11,
["Cast - Big Alert"] = 11,
["Cast - Small Alert"] = 11,
["Auto Set Skull"] = 11,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 12,
["Countdown"] = 11,
["Unit - Health Markers"] = 12,
["Cast - Frontal Cone"] = 11,
["Fixate"] = 11,
["Cast - Tank Interrupt"] = 11,
["Fixate On You"] = 11,
["Spiteful Affix"] = 3,
["Unit - Show Energy"] = 11,
},
},
["KokonutKrew"] = {
["use_ui_parent"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 4,
["Extra Border"] = 2,
["Target Color"] = 3,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 1,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604599472,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 355,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Nameplate Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Skull Texture",
["Name"] = "Skull Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Skull Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Name"] = "Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Important [Plater]",
["NpcNames"] = {
"164362",
"168882",
"168988",
"170234",
"165905",
"170452",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1605214963,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 607,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
323149,
324392,
340544,
342189,
333227,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "M+ Spiteful",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604674264,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 695,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
["SpellIds"] = {
321247,
334522,
320232,
319962,
325879,
324427,
322999,
325360,
322903,
324103,
333294,
333540,
319521,
326021,
326450,
322711,
329104,
295000,
242391,
320197,
329608,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
["Time"] = 1604698647,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 462,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
240446,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1604454032,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 351,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["SpellIds"] = {
337220,
337253,
337251,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
["Time"] = 1604617977,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 513,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
["SpellIds"] = {
332329,
320103,
321406,
335817,
321061,
320141,
326171,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Health Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the health bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604696442,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 970,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
338353,
334748,
334749,
320784,
341352,
341520,
341522,
336005,
339777,
331933,
326617,
324914,
324776,
326046,
340634,
319070,
328295,
317936,
327413,
319654,
323821,
320772,
324293,
330562,
330868,
341902,
342139,
342675,
323190,
332836,
327648,
328217,
322938,
340544,
325876,
325700,
323552,
332666,
332612,
332706,
340026,
294171,
292910,
294165,
338871,
330813,
335694,
327461,
329787,
304946,
15245,
276754,
304831,
277036,
320657,
294362,
270248,
292926,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1604617585,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 595,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
320170,
320171,
320462,
330712,
332170,
333875,
326836,
342135,
333861,
341969,
317963,
327481,
328331,
322614,
325701,
326438,
323538,
321764,
296523,
330755,
295929,
296019,
335685,
170751,
342207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["version"] = -1,
["Name"] = "Auto Set Skull",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604607993,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 406,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Key"] = "nameplateSizeOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137254901960784,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Unit - Main Target [P]",
["NpcNames"] = {
"156212",
"168098",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1611856720,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1606506781,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 109,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = -1,
["Name"] = "Unit - Health Markers [P]",
["NpcNames"] = {
"164451",
"164463",
"164461",
"165946",
"164501",
"164218",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
["Time"] = 1604599443,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 460,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
323489,
323496,
319941,
319592,
334266,
325258,
334913,
326221,
322936,
323236,
321834,
336752,
325418,
324667,
327233,
324368,
324205,
323943,
319713,
320596,
320729,
323608,
330614,
320063,
332708,
334023,
317231,
317943,
320966,
334053,
328458,
321968,
331718,
325793,
330453,
326997,
334051,
292903,
330843,
294173,
189200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.275,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Name"] = "Animation Speed",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate [Plater]",
["NpcNames"] = {
"165560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1604593143,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
["Enabled"] = true,
["Revision"] = 833,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
321828,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 25,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 30,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Tank Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["NpcNames"] = {
},
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["Time"] = 1597097268,
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["version"] = -1,
["Name"] = "Cast Bar Icon Settings [P]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Color Automation [Plater]",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Time"] = 1547392935,
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Ahwa-Azralon",
["Name"] = "Execute Range [Plater]",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 135358,
["Time"] = 1547406548,
},
{
["Enabled"] = false,
["Revision"] = 222,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Time"] = 1547993111,
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Hide Neutral Units [Plater]",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 1990989,
["Time"] = 1541606242,
},
{
["Enabled"] = false,
["Revision"] = 254,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Time"] = 1603567332,
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["version"] = -1,
["Name"] = "Combo Points [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Tecno-Azralon",
["Name"] = "Extra Border [Plater]",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 133689,
["Time"] = 1547409079,
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Time"] = 1596791840,
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["version"] = -1,
["Name"] = "Reorder Nameplate [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Don't Have Aura [Plater]",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 136207,
["Time"] = 1554138845,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Players Targeting a Target [Plater]",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 1966587,
["Time"] = 1548278227,
},
{
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["Time"] = 1608663128,
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["Name"] = "Aura Reorder [Plater]",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Current Target Color [Plater]",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["url"] = "",
["Icon"] = 878211,
["Time"] = 1552354619,
},
},
["aura_x_offset"] = 0,
["first_run3"] = true,
["npc_cache"] = {
[170474] = {
"Brood Assassin",
"Plaguefall",
},
[173604] = {
"Sinister Antiquarian",
"Castle Nathria",
},
[75209] = {
"Molten Earth Elemental",
"Bloodmaul Slag Mines",
},
[168111] = {
"Empowered Imperial Curator",
"Torghast, Tower of the Damned",
},
[168878] = {
"Rigged Plagueborer",
"Plaguefall",
},
[164407] = {
"Sludgefist",
"Castle Nathria",
},
[75976] = {
"Low-Born Arakkoa",
"Skyreach",
},
[168112] = {
"General Kaal",
"Castle Nathria",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[77605] = {
"Whirling Dervish",
"Skyreach",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
},
[170093] = {
"Mawsworn Seeker",
"Torghast, Tower of the Damned",
},
[168113] = {
"General Grashaal",
"Castle Nathria",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[152656] = {
"Deadsoul Stalker",
"Torghast, Tower of the Damned",
},
[162046] = {
"Famished Tick",
"Sanguine Depths",
},
[164218] = {
"Lord Chamberlain",
"Halls of Atonement",
},
[170414] = {
"Howling Spectre",
"Torghast, Tower of the Damned",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
},
[75211] = {
"Magma Lord",
"Bloodmaul Slag Mines",
},
[173800] = {
"Sewer Rat",
"Castle Nathria",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
},
[153552] = {
"Weeping Wraith",
"Torghast, Tower of the Damned",
},
[169457] = {
"Bargast",
"Castle Nathria",
},
[173609] = {
"Nathrian Conservator",
"Castle Nathria",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[157002] = {
"Imperial Enforcer",
"Torghast, Tower of the Damned",
},
[61623] = {
"Sap Globule",
"Siege of Niuzao Temple",
},
[170927] = {
"Erupting Ooze",
"Plaguefall",
},
[154128] = {
"Blazing Elemental",
"Torghast, Tower of the Damned",
},
[173802] = {
"Carved Assistant",
"Castle Nathria",
},
[157003] = {
"Imperial Duelist",
"Torghast, Tower of the Damned",
},
[154129] = {
"Burning Emberguard",
"Torghast, Tower of the Damned",
},
[155215] = {
"Faeleaf Lasher",
"Torghast, Tower of the Damned",
},
[155790] = {
"Mawsworn Acolyte",
"Torghast, Tower of the Damned",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[153874] = {
"Mawsworn Sentry",
"Torghast, Tower of the Damned",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[173484] = {
"Conjured Manifestation",
"Castle Nathria",
},
[155216] = {
"Faeleaf Warden",
"Torghast, Tower of the Damned",
},
[162051] = {
"Frenzied Ghoul",
"Sanguine Depths",
},
[75820] = {
"Vengeful Magma Elemental",
"Bloodmaul Slag Mines",
},
[170419] = {
"Lost Dredger",
"Torghast, Tower of the Damned",
},
[173613] = {
"Nathrian Registrar",
"Castle Nathria",
},
[170228] = {
"Bone Husk",
"Torghast, Tower of the Damned",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[155793] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
},
[167610] = {
"Stonefiend Anklebiter",
"Halls of Atonement",
},
[79462] = {
"Blinding Solar Flare",
"Skyreach",
},
[75406] = {
"Slagna",
"Bloodmaul Slag Mines",
},
[155219] = {
"Gormling Spitter",
"Torghast, Tower of the Damned",
},
[168058] = {
"Infused Quill-feather",
"Sanguine Depths",
},
[167611] = {
"Stoneborn Eviscerator",
"Halls of Atonement",
},
[153878] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
},
[56754] = {
"Azure Serpent",
"Shado-Pan Monastery",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[156242] = {
"Animated Prowler",
"Torghast, Tower of the Damned",
},
[79303] = {
"Adorned Bladetalon",
"Skyreach",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[153879] = {
"Deadsoul Shadow",
"Torghast, Tower of the Damned",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[162056] = {
"Rockbound Sprite",
"Sanguine Depths",
},
[168891] = {
"Rigged Plagueborer",
"Plaguefall",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[168700] = {
"Pestering Fiend",
"Castle Nathria",
},
[167806] = {
"Animated Sin",
"Halls of Atonement",
},
[65362] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[174194] = {
"Court Executor",
"Castle Nathria",
},
[167615] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[85341] = {
"Lunarfall Raccoon",
"SMV Alliance Garrison Level 2",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
},
[168574] = {
"Pestilent Harvester",
"Plaguefall",
},
[164550] = {
"Slithering Ooze",
"Plaguefall",
},
[165189] = {
"Cat",
"Eye of the Storm",
},
[154011] = {
"Armed Prisoner",
"Torghast, Tower of the Damned",
},
[58959] = {
"Nip'tul",
"Eye of the Storm",
},
[155225] = {
"Faeleaf Grovesinger",
"Torghast, Tower of the Damned",
},
[77006] = {
"Corpse Skitterling",
"Shadowmoon Burial Grounds",
},
[151329] = {
"Warden Skoldus",
"Torghast, Tower of the Damned",
},
[74579] = {
"Molten Elemental",
"Bloodmaul Slag Mines",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[174069] = {
"Hulking Gargon",
"Castle Nathria",
},
[164552] = {
"Rotmarrow Slime",
"Plaguefall",
},
[153885] = {
"Deadsoul Shambler",
"Torghast, Tower of the Damned",
},
[79466] = {
"Initiate of the Rising Sun",
"Skyreach",
},
[174070] = {
"Kennel Overseer",
"Castle Nathria",
},
[168002] = {
"Empowered Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[172282] = {
"Web Wrap",
"Plaguefall",
},
[157016] = {
"Imperial Archivist",
"Torghast, Tower of the Damned",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[174071] = {
"Vicious Gargon",
"Castle Nathria",
},
[168003] = {
"Empowered Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[172858] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[164363] = {
"Undying Stonefiend",
"Halls of Atonement",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[173178] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[165066] = {
"Huntsman Altimor",
"Castle Nathria",
},
[81767] = {
"Bloodmaul Flamespeaker",
"Bloodmaul Slag Mines",
},
[168005] = {
"Empowered Deadsoul Shambler",
"Torghast, Tower of the Damned",
},
[168580] = {
"Plagueborer",
"Plaguefall",
},
[165067] = {
"Margore",
"Castle Nathria",
},
[152995] = {
"Warden of Souls",
"Torghast, Tower of the Damned",
},
[171455] = {
"Stonewall Gargon",
"Sanguine Depths",
},
[152612] = {
"Subjugator Klontzas",
"Torghast, Tower of the Damned",
},
[83620] = {
"Bloodmaul Earthbreaker",
"Bloodmaul Slag Mines",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[154018] = {
"Prisonbreak Mauler",
"Torghast, Tower of the Damned",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[157340] = {
"Skeletal Remains",
"Torghast, Tower of the Damned",
},
[174842] = {
"Belligerent Waiter",
"Castle Nathria",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[79469] = {
"Whirling Dervish",
"Skyreach",
},
[83621] = {
"Bloodmaul Magma Binder",
"Bloodmaul Slag Mines",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[173949] = {
"Nathrian Soldier",
"Castle Nathria",
},
[171188] = {
"Plaguebound Devoted",
"Plaguefall",
},
[163857] = {
"Plaguebound Devoted",
"Plaguefall",
},
[165430] = {
"Malignant Spawn",
"Plaguefall",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[153382] = {
"Maw of the Maw",
"Torghast, Tower of the Damned",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[79467] = {
"Adept of the Dawn",
"Skyreach",
},
[168393] = {
"Plaguebelcher",
"Plaguefall",
},
[168457] = {
"Stonewall Gargon",
"Sanguine Depths",
},
[83622] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
},
[173360] = {
"Plaguebelcher",
"Plaguefall",
},
[167691] = {
"Stasis Trap",
"Castle Nathria",
},
[171448] = {
"Dreadful Huntmaster",
"Sanguine Depths",
},
[74356] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[168394] = {
"Slimy Morsel",
"Plaguefall",
},
[173568] = {
"Anima Crazed Worker",
"Castle Nathria",
},
[75191] = {
"Bloodmaul Slaver",
"Bloodmaul Slag Mines",
},
[74349] = {
"Bloodmaul Magma Binder",
"Bloodmaul Slag Mines",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[74355] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[162041] = {
"Grubby Dirtcruncher",
"Sanguine Depths",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[173633] = {
"Nathrian Archivist",
"Castle Nathria",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[174336] = {
"Kennel Overseer",
"Castle Nathria",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[173953] = {
"Loyal Gargon",
"Castle Nathria",
},
[168907] = {
"Slime Tentacle",
"Plaguefall",
},
[171887] = {
"Slimy Smorgasbord",
"Plaguefall",
},
[164362] = {
"Slimy Morsel",
"Plaguefall",
},
[167566] = {
"Bleakwing Assassin",
"Castle Nathria",
},
[56884] = {
"Taran Zhu",
"Shado-Pan Monastery",
},
[152875] = {
"Massive Crusher",
"Torghast, Tower of the Damned",
},
[76116] = {
"Diving Chakram Spinner",
"Skyreach",
},
[150959] = {
"Mawsworn Interceptor",
"Torghast, Tower of the Damned",
},
[62795] = {
"Sik'thik Warden",
"Siege of Niuzao Temple",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[83624] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[174338] = {
"Stinky Feedhauler",
"Castle Nathria",
},
[76087] = {
"Defense Construct",
"Skyreach",
},
[173444] = {
"Caramain",
"Castle Nathria",
},
[168398] = {
"Slimy Morsel",
"Plaguefall",
},
[168973] = {
"High Torturer Darithos",
"Castle Nathria",
},
[75193] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[168108] = {
"Empowered Lumbering Creation",
"Torghast, Tower of the Damned",
},
[163915] = {
"Hatchling Nest",
"Plaguefall",
},
[163892] = {
"Rotting Slimeclaw",
"Plaguefall",
},
[173445] = {
"Sindrel",
"Castle Nathria",
},
[58963] = {
"Ekkrezza",
"Eye of the Storm",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[168969] = {
"Gushing Slime",
"Plaguefall",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
},
[165521] = {
"Lady Inerva Darkvein",
"Castle Nathria",
},
[162103] = {
"Executor Tarvold",
"Sanguine Depths",
},
[173446] = {
"Hargitas",
"Castle Nathria",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[168107] = {
"Empowered Mawsworn Interceptor",
"Torghast, Tower of the Damned",
},
[75194] = {
"Gnasher",
"Bloodmaul Slag Mines",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[156239] = {
"Dark Ascended Corrus",
"Torghast, Tower of the Damned",
},
[164185] = {
"Echelon",
"Halls of Atonement",
},
[168337] = {
"Moldovaak",
"Castle Nathria",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
},
[74357] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[65415] = {
"Void Sha",
"Shado-Pan Monastery",
},
[171172] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[154030] = {
"Oddly Large Mawrat",
"Torghast, Tower of the Damned",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[167955] = {
"Sanguine Cadet",
"Sanguine Depths",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[150965] = {
"Mawsworn Shackler",
"Torghast, Tower of the Damned",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[78932] = {
"Driving Gale-Caller",
"Skyreach",
},
[167892] = {
"Tormented Soul",
"Halls of Atonement",
},
[167956] = {
"Dark Acolyte",
"Sanguine Depths",
},
[173641] = {
"Nathrian Gargon",
"Castle Nathria",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
},
[77559] = {
"Solar Magnifier",
"Skyreach",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[417] = {
"Bheeshon",
"Eye of the Storm",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[76154] = {
"Skyreach Raven Whisperer",
"Skyreach",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
},
[150958] = {
"Mawsworn Guard",
"Torghast, Tower of the Damned",
},
[165594] = {
"Coldheart Ambusher",
"Torghast, Tower of the Damned",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[78933] = {
"Herald of Sunrise",
"Skyreach",
},
[170385] = {
"Writhing Misery",
"Torghast, Tower of the Damned",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
},
[174090] = {
"Nathrian Hierarch",
"Castle Nathria",
},
[168022] = {
"Slime Tentacle",
"Plaguefall",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
},
[79093] = {
"Skyreach Sun Talon",
"Skyreach",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[171919] = {
"Ayeleth's Torturer",
"Torghast, Tower of the Damned",
},
[76132] = {
"Soaring Chakram Master",
"Skyreach",
},
[164406] = {
"Shriekwing",
"Castle Nathria",
},
[168579] = {
"Fen Hatchling",
"Plaguefall",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[156015] = {
"Writhing Soulmass",
"Torghast, Tower of the Damned",
},
[164255] = {
"Globgrog",
"Plaguefall",
},
[75964] = {
"Ranjit",
"Skyreach",
},
[174092] = {
"Nathrian Gargon Rider",
"Castle Nathria",
},
[165469] = {
"Nathrian Enforcer",
"Castle Nathria",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[151128] = {
"Lord of Locks",
"Torghast, Tower of the Damned",
},
[171474] = {
"Finger Food",
"Plaguefall",
},
[174093] = {
"Nathrian Ranger",
"Castle Nathria",
},
[75198] = {
"Bloodmaul Geomancer",
"Bloodmaul Slag Mines",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[151815] = {
"Deadsoul Echo",
"Torghast, Tower of the Damned",
},
[173280] = {
"Stone Legion Skirmisher",
"Castle Nathria",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[167898] = {
"Manifestation of Envy",
"Halls of Atonement",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[155251] = {
"Elder Longbranch",
"Torghast, Tower of the Damned",
},
[168962] = {
"Reborn Phoenix",
"Castle Nathria",
},
[166644] = {
"Artificer Xy'mox",
"Castle Nathria",
},
[152661] = {
"Mawsworn Ward",
"Torghast, Tower of the Damned",
},
[164705] = {
"Pestilence Slime",
"Plaguefall",
},
[170071] = {
"Mawsworn Shadestalker",
"Torghast, Tower of the Damned",
},
[173276] = {
"Stone Legion Commando",
"Castle Nathria",
},
[165408] = {
"Halkias",
"Halls of Atonement",
},
[165472] = {
"Nathrian Siphoner",
"Castle Nathria",
},
[76253] = {
"Dread Raven Hatchling",
"Skyreach",
},
[170199] = {
"Harnessed Specter",
"Castle Nathria",
},
[173840] = {
"Plaguebound Devoted",
"Plaguefall",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
},
[152708] = {
"Mawsworn Seeker",
"Torghast, Tower of the Damned",
},
[152644] = {
"Deadsoul Drifter",
"Torghast, Tower of the Damned",
},
[56678] = {
"Jade Staff",
"Shado-Pan Monastery",
},
[155828] = {
"Runecarved Colossus",
"Torghast, Tower of the Damned",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
},
[169753] = {
"Famished Tick",
"Sanguine Depths",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[157809] = {
"Mawsworn Darkcaster",
"Torghast, Tower of the Damned",
},
[169498] = {
"Plague Bomb",
"Plaguefall",
},
[165474] = {
"Nathrian Assassin",
"Castle Nathria",
},
[152508] = {
"Dusky Tremorbeast",
"Torghast, Tower of the Damned",
},
[168101] = {
"Empowered Deadsoul Shade",
"Torghast, Tower of the Damned",
},
[164261] = {
"Hungering Destroyer",
"Castle Nathria",
},
[152253] = {
"The Tarragrue",
"Torghast, Tower of the Damned",
},
[75360] = {
"Searing Ember",
"Bloodmaul Slag Mines",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[174162] = {
"Countess Gloomveil",
"Castle Nathria",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
},
[170452] = {
"Essence Orb",
"Torghast, Tower of the Damned",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[169601] = {
"Stone Legion Commando",
"Castle Nathria",
},
[169458] = {
"Hecutis",
"Castle Nathria",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[173146] = {
"Winged Ravager",
"Castle Nathria",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[156023] = {
"Miniature Soulmass",
"Torghast, Tower of the Damned",
},
[157109] = {
"Vampire Bat",
"Torghast, Tower of the Damned",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[174100] = {
"Nathrian Singuard",
"Castle Nathria",
},
[173142] = {
"Dread Feaster",
"Castle Nathria",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
},
[157807] = {
"Mawsworn Soulweaver",
"Torghast, Tower of the Damned",
},
[173973] = {
"Nathrian Tracker",
"Castle Nathria",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[164967] = {
"Doctor Ickus",
"Plaguefall",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[164266] = {
"Domina Venomblade",
"Plaguefall",
},
[74787] = {
"Slave Watcher Crushto",
"Bloodmaul Slag Mines",
},
[173080] = {
"Wandering Death",
"Torghast, Tower of the Damned",
},
[173464] = {
"Deplina",
"Castle Nathria",
},
[76097] = {
"Solar Familiar",
"Skyreach",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[168098] = {
"Empowered Coldheart Agent",
"Torghast, Tower of the Damned",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
},
[75426] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
},
[81750] = {
"Bloodmaul Ogron",
"Bloodmaul Slag Mines",
},
[165415] = {
"Toiling Groundskeeper",
"Halls of Atonement",
},
[58856] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[173145] = {
"Gorging Mite",
"Castle Nathria",
},
[168099] = {
"Empowered Coldheart Javelineer",
"Torghast, Tower of the Damned",
},
[169696] = {
"Mire Soldier",
"Plaguefall",
},
[173448] = {
"Dragost",
"Castle Nathria",
},
[168591] = {
"Ravenous Dreadbat",
"Sanguine Depths",
},
[164267] = {
"Margrave Stradama",
"Plaguefall",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[156219] = {
"Coldheart Scout",
"Torghast, Tower of the Damned",
},
[165481] = {
"Court Assassin",
"Castle Nathria",
},
[171166] = {
"Unraveling Soul Remnant",
"Torghast, Tower of the Damned",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[170197] = {
"Conjured Manifestation",
"Castle Nathria",
},
[173466] = {
"Fara",
"Castle Nathria",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[75715] = {
"Reanimated Ritual Bones",
"Shadowmoon Burial Grounds",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[173339] = {
"Plaguebelcher",
"Plaguefall",
},
[165060] = {
"Animimic",
"Torghast, Tower of the Damned",
},
[153003] = {
"Soul Fragment",
"Torghast, Tower of the Damned",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[168102] = {
"Empowered Deadsoul Echo",
"Torghast, Tower of the Damned",
},
[151814] = {
"Deadsoul Shade",
"Torghast, Tower of the Damned",
},
[164897] = {
"Fog Dweller",
"Torghast, Tower of the Damned",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
},
[152517] = {
"Deadsoul Lifetaker",
"Torghast, Tower of the Damned",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[152500] = {
"Deadsoul Amalgam",
"Torghast, Tower of the Damned",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[84978] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
},
[74790] = {
"Gug'rokk",
"Bloodmaul Slag Mines",
},
[165470] = {
"Nathrian Executor",
"Castle Nathria",
},
[173469] = {
"Kullan",
"Castle Nathria",
},
[156159] = {
"Coldheart Javelineer",
"Torghast, Tower of the Damned",
},
[172064] = {
"Unstable Larva",
"Plaguefall",
},
[173798] = {
"Rat of Unusual Size",
"Castle Nathria",
},
[170418] = {
"Goxul the Devourer",
"Torghast, Tower of the Damned",
},
[151816] = {
"Deadsoul Scavenger",
"Torghast, Tower of the Damned",
},
[162100] = {
"Kryxis the Voracious",
"Sanguine Depths",
},
[155211] = {
"Gormling Pest",
"Torghast, Tower of the Damned",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[157094] = {
"Imperial Curator",
"Torghast, Tower of the Damned",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
},
[74366] = {
"Forgemaster Gog'duh",
"Bloodmaul Slag Mines",
},
[171171] = {
"Mawsworn Archer",
"Torghast, Tower of the Damned",
},
[151817] = {
"Deadsoul Devil",
"Torghast, Tower of the Damned",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
},
[173407] = {
"Lord of Anguish",
"Torghast, Tower of the Damned",
},
[168361] = {
"Fen Hornet",
"Plaguefall",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
},
[56915] = {
"Sun",
"Temple of the Jade Serpent",
},
[168106] = {
"Empowered Mawsworn Guard",
"Torghast, Tower of the Damned",
},
[151818] = {
"Deadsoul Miscreation",
"Torghast, Tower of the Damned",
},
[162102] = {
"Grand Proctor Beryllia",
"Sanguine Depths",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
},
[58826] = {
"Zao Sunseeker",
"Temple of the Jade Serpent",
},
[168837] = {
"Stealthling",
"Plaguefall",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[174175] = {
"Loyal Stoneborn",
"Halls of Atonement",
},
[171173] = {
"Mawsworn Shadestalker",
"Torghast, Tower of the Damned",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[75814] = {
"Bloodmaul Earthbreaker",
"Bloodmaul Slag Mines",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[174012] = {
"Executrix Ophelia",
"Castle Nathria",
},
[171557] = {
"Shade of Bargast",
"Castle Nathria",
},
[168968] = {
"Plaguebound Fallen",
"Plaguefall",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[174773] = {
"Spiteful Shade",
"Plaguefall",
},
[83623] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
},
[76205] = {
"Blooded Bladefeather",
"Skyreach",
},
[174208] = {
"Court Executor",
"Castle Nathria",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
},
[75272] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
},
[75210] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[74475] = {
"Magmolatus",
"Bloodmaul Slag Mines",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75975] = {
"Skyreach Overlord",
"Skyreach",
},
[168110] = {
"Empowered Imperial Duelist",
"Torghast, Tower of the Damned",
},
[75786] = {
"Roltall",
"Bloodmaul Slag Mines",
},
[74927] = {
"Unstable Slag",
"Bloodmaul Slag Mines",
},
[74570] = {
"Ruination",
"Bloodmaul Slag Mines",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ui_parent_scale_tune"] = 1.406249965948519,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateLargeTopInset"] = "0.085",
["nameplateShowEnemyMinus"] = "1",
["nameplateMotionSpeed"] = "0.05",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyPets"] = "0",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1.15",
["nameplateTargetRadialPosition"] = "1",
["nameplateResourceOnTarget"] = "0",
["nameplateShowFriends"] = "0",
["nameplateMinScale"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateOtherTopInset"] = "0.085",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowAll"] = "1",
["nameplateShowFriendlyMinions"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["NamePlateHorizontalScale"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["nameplateShowEnemies"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["NamePlateVerticalScale"] = "1",
},
["aura2_y_offset"] = 5,
["login_counter"] = 191,
["script_auto_imported"] = {
["Unit - Important"] = 11,
["Aura - Buff Alert"] = 13,
["Cast - Very Important"] = 11,
["Explosion Affix M+"] = 11,
["Aura - Debuff Alert"] = 11,
["Cast - Ultra Important"] = 11,
["Cast - Big Alert"] = 11,
["Cast - Small Alert"] = 11,
["Auto Set Skull"] = 11,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 12,
["Countdown"] = 11,
["Unit - Health Markers"] = 12,
["Cast - Frontal Cone"] = 11,
["Fixate"] = 11,
["Cast - Tank Interrupt"] = 11,
["Fixate On You"] = 11,
["Spiteful Affix"] = 3,
["Unit - Show Energy"] = 11,
},
["number_region_first_run"] = true,
["patch_version"] = 13,
["plate_config"] = {
["global_health_height"] = 12,
["player"] = {
["healthbar_enabled"] = false,
["power_enabled"] = false,
["power_percent_text_enabled"] = false,
},
["global_health_width"] = 112,
},
["captured_spells"] = {
[199483] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343724] = {
["source"] = "Damonturok-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328891] = {
["source"] = "Tlal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[262652] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Forgesong",
["npcID"] = 0,
},
[1022] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[202425] = {
["source"] = "Mudara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2050] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308434] = {
["source"] = "Gabryanna",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327104] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[193475] = {
["source"] = "Gummiës",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324547] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loadstar",
["npcID"] = 0,
},
[223143] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Heartstop",
["npcID"] = 0,
},
[330943] = {
["source"] = "Dabigpearl-Aggramar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1044] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Darkisan-Tichondrius",
["npcID"] = 0,
},
[329666] = {
["source"] = "Frôst-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23881] = {
["source"] = "Tankotron-Azshara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[5215] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[290793] = {
["source"] = "Gibbz-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328900] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[185422] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[48018] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lerict",
["npcID"] = 0,
},
[52174] = {
["source"] = "Tankotron-Azshara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[272126] = {
["source"] = "Deebmosa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[156779] = {
["source"] = "Rednave",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307166] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[269571] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[17] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[136] = {
["source"] = "Zujo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[8680] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[126664] = {
["source"] = "Tankotron-Azshara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[269576] = {
["source"] = "Rommark-Zul'jin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[246807] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[53390] = {
["source"] = "Captinfroggy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[262161] = {
["source"] = "Xisas-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339142] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339654] = {
["source"] = "Rommark-Zul'jin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[47540] = {
["source"] = "Voirdire-Eitrigg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[139] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[339400] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[54861] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mockjaw",
["npcID"] = 0,
},
[294133] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mitígate",
["npcID"] = 0,
},
[116947] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earthgrab Totem",
["npcID"] = 60561,
},
[113942] = {
["source"] = "Zafiana-Dalaran",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5487] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[194509] = {
["source"] = "Voirdire-Eitrigg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[8936] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bendeez-Azralon",
["npcID"] = 0,
},
[323802] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Orison-Frostmane",
["npcID"] = 0,
},
[317920] = {
["source"] = "Aelnarie-WyrmrestAccord",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[279302] = {
["source"] = "Ilenn-Aegwynn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[248473] = {
["source"] = "Tankotron-Azshara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[289277] = {
["source"] = "Rednave",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197835] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[51505] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[310507] = {
["source"] = "Llarz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Voidkiller",
["npcID"] = 0,
},
[194384] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339664] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[24378] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[203975] = {
["source"] = "Myrlindian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307185] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[305395] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Scarycat",
["npcID"] = 0,
},
[208963] = {
["source"] = "Skyfury Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 105427,
},
[290819] = {
["source"] = "Zujo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108446] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[260881] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Njagos",
["npcID"] = 0,
},
[321510] = {
["source"] = "Captinfroggy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[260242] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3355] = {
["source"] = "Frôst-MoonGuard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[11366] = {
["source"] = "Raiozinho-Goldrinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2336] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Delro",
["npcID"] = 0,
},
[586] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[247456] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tóny-Silvermoon",
["npcID"] = 0,
},
[24858] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Daottd-Hyjal",
["npcID"] = 0,
},
[292359] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Peëp",
["npcID"] = 0,
},
[118038] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[253595] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Karzulah",
["npcID"] = 0,
},
[292360] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blightwind",
["npcID"] = 0,
},
[203852] = {
["source"] = "Horsepower",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196819] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[292361] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332514] = {
["source"] = "Zarrett",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[236077] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308474] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Slamnesty",
["npcID"] = 0,
},
[292362] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[596] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[347349] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3409] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[287504] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115098] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48438] = {
["source"] = "Mëowkai",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[143625] = {
["source"] = "Celdah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325101] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Steward",
["npcID"] = 166663,
},
[20271] = {
["source"] = "Pál-Ner'zhul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[193753] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Solumterra",
["npcID"] = 0,
},
[59052] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deafknight",
["npcID"] = 0,
},
[221886] = {
["source"] = "Alvär-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[235313] = {
["source"] = "Kommandant",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[332777] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[121557] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Angelica",
["npcID"] = 0,
},
[221887] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101545] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[301578] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mschöksondyk",
["npcID"] = 0,
},
[135700] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321527] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[138130] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[118297] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61029,
},
[155777] = {
["source"] = "Mëowkai",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[16595] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Peëp",
["npcID"] = 0,
},
[137619] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dwhite-Boulderfist",
["npcID"] = 0,
},
[204242] = {
["source"] = "Krimmzon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[107428] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[283167] = {
["source"] = "Damonturok-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115804] = {
["source"] = "Luçilla-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101546] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2484] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308488] = {
["source"] = "Irosa",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204883] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[289308] = {
["source"] = "Flamefrost",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77762] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308491] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[334067] = {
["source"] = "Zafiana-Dalaran",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[188389] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327164] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[228287] = {
["source"] = "Luçilla-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308495] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[72968] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[209746] = {
["source"] = "Thanne-DemonSoul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[255909] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[214222] = {
["source"] = "Hurgruk-Velen",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[642] = {
["source"] = "Damonturok-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[12294] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308498] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[211793] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Psychotronic-Ysondre",
["npcID"] = 0,
},
[235450] = {
["source"] = "Normanatomic",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330749] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324867] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[11327] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[52437] = {
["source"] = "Xisas-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320009] = {
["source"] = "Celdah",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[51510] = {
["source"] = "Galtharian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[208086] = {
["source"] = "Xisas-Sargeras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308504] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Farender",
["npcID"] = 0,
},
[336126] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[221771] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[308506] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lenbar",
["npcID"] = 0,
},
[223306] = {
["source"] = "Krimmzon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[287280] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[105771] = {
["source"] = "Tankotron-Azshara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23214] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Isolander",
["npcID"] = 0,
},
[275773] = {
["source"] = "Hurgruk-Velen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[131493] = {
["source"] = "Peëp",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[281400] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pziggly",
["npcID"] = 0,
},
[6343] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slamnesty",
["npcID"] = 0,
},
[245686] = {
["source"] = "Zarrett",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[270661] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kralizek",
["npcID"] = 0,
},
[8690] = {
["source"] = "Thiccshorty",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[336135] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Elûse",
["npcID"] = 0,
},
[116706] = {
["source"] = "Luçilla-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330765] = {
["source"] = "Skîttles",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196840] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[347901] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[190319] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330511] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328210] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336139] = {
["source"] = "Damonturok-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324631] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327701] = {
["source"] = "Zarrett",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[172] = {
["source"] = "Zafiana-Dalaran",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[327704] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[43265] = {
["source"] = "Ilenn-Aegwynn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[227151] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2782] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seniat-Hyjal",
["npcID"] = 0,
},
[308525] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kelostus",
["npcID"] = 0,
},
[137639] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204262] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Reuric",
["npcID"] = 0,
},
[44544] = {
["source"] = "Flamefrost",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327708] = {
["source"] = "Neuretic",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[41635] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[256948] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deepsixing",
["npcID"] = 0,
},
[8219] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Holoylan",
["npcID"] = 0,
},
[280398] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197871] = {
["source"] = "Gibbz-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[260402] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5672] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Healing Stream Totem",
["npcID"] = 3527,
},
[158486] = {
["source"] = "Shevoodoo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[51514] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[190456] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[290121] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Llarz",
["npcID"] = 0,
},
[213602] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[55095] = {
["source"] = "Arkvoodle-Jubei'Thos",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337948] = {
["source"] = "Cwel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197874] = {
["source"] = "Gibbz-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[16870] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[335903] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shämån",
["npcID"] = 0,
},
[341530] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Papadragon",
["npcID"] = 0,
},
[335904] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Forgesong",
["npcID"] = 0,
},
[196980] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[317491] = {
["source"] = "Xisas-Sargeras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341533] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1459] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[290640] = {
["source"] = "Iliketoresto",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[116841] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[85256] = {
["source"] = "Damonturok-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[36554] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[297035] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xavalak",
["npcID"] = 0,
},
[311869] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Elûse",
["npcID"] = 0,
},
[26573] = {
["source"] = "Ghòstpally-BloodFurnace",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[332842] = {
["source"] = "Kaylex-Archimonde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[322101] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zenmo",
["npcID"] = 0,
},
[89157] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Laithiel",
["npcID"] = 0,
},
[316220] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[108978] = {
["source"] = "Raiozinho-Goldrinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[108211] = {
["source"] = "Drouch",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Augmented-Khadgar",
["npcID"] = 0,
},
[342309] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[188290] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23920] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[333104] = {
["source"] = "Tankotron-Azshara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[255937] = {
["source"] = "Echoras-Scilla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[32216] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[251463] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepsixing",
["npcID"] = 0,
},
[8122] = {
["source"] = "Voirdire-Eitrigg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[298839] = {
["source"] = "Garrukk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[47585] = {
["source"] = "Nayeon-Nazjatar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[107574] = {
["source"] = "Xisas-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[156070] = {
["source"] = "Krenger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[195072] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blaír",
["npcID"] = 0,
},
[768] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[288613] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337973] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[231390] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Irønfang",
["npcID"] = 0,
},
[127140] = {
["source"] = "Raiozinho-Goldrinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[59542] = {
["source"] = "Echoras-Scilla",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[774] = {
["source"] = "Mëowkai",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323654] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tealck-Tichondrius",
["npcID"] = 0,
},
[332862] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Angelicbow",
["npcID"] = 0,
},
[305497] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Scarycat",
["npcID"] = 0,
},
[146739] = {
["source"] = "Zafiana-Dalaran",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5217] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196099] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stumpz-Hyjal",
["npcID"] = 0,
},
[5225] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Baneclaw",
["npcID"] = 0,
},
[783] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[176151] = {
["source"] = "Rednave",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154796] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shotcha-ArgentDawn",
["npcID"] = 0,
},
[194310] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Baltarstar-Undermine",
["npcID"] = 0,
},
[337470] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[154797] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[30283] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ronaldplsme",
["npcID"] = 0,
},
[340541] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jozbekwazroz",
["npcID"] = 0,
},
[342076] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[329289] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[281209] = {
["source"] = "Sheknight",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196742] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101568] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deafknight",
["npcID"] = 0,
},
[318038] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Simarrah",
["npcID"] = 0,
},
[100] = {
["source"] = "Tankotron-Azshara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[186257] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zydios",
["npcID"] = 0,
},
[340546] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337989] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Psychotronic-Ysondre",
["npcID"] = 0,
},
[186258] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325203] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[341572] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[186387] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[329554] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blaír",
["npcID"] = 0,
},
[201350] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Opinionated",
["npcID"] = 0,
},
[408] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[198793] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Triixx",
["npcID"] = 0,
},
[6552] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[324701] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[57723] = {
["source"] = "Samoansavage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[344907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Vaýne",
["npcID"] = 0,
},
[315496] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[276111] = {
["source"] = "Thiccshorty",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321379] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[276112] = {
["source"] = "Grandmadiane",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331866] = {
["source"] = "Tbe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[208772] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331868] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mazeel",
["npcID"] = 0,
},
[330334] = {
["source"] = "Xisas-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[163505] = {
["source"] = "Korubo-Drakkari",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[51490] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[57724] = {
["source"] = "Ssol",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[164273] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[51714] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Slowbot-Mannoroth",
["npcID"] = 0,
},
[335452] = {
["source"] = "Xisas-Sargeras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[11426] = {
["source"] = "Normanatomic",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[210053] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[110909] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321388] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Anadyn",
["npcID"] = 0,
},
[344662] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[6788] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[323436] = {
["source"] = "Echoras-Scilla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[2383] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3408] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[109248] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1715] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203407] = {
["source"] = "Mëowkai",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324463] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345691] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deafknight",
["npcID"] = 0,
},
[124210] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lucilla-EarthenRing",
["npcID"] = 0,
},
[212743] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[54049] = {
["source"] = "Jhaadrom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[310143] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338788] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[6940] = {
["source"] = "Flippout",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324724] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[132951] = {
["source"] = "Damonturok-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345696] = {
["source"] = "Dyanni",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[186403] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[335467] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Grodeslin-Quel'Thalas",
["npcID"] = 0,
},
[184662] = {
["source"] = "Damonturok-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77758] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Becheurasse",
["npcID"] = 0,
},
[25771] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[307187] = {
["source"] = "Nistavan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77761] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plzdontkick",
["npcID"] = 0,
},
[309638] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sherrio",
["npcID"] = 0,
},
[33702] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pepperswiss-Trollbane",
["npcID"] = 0,
},
[184575] = {
["source"] = "Ghòstpally-BloodFurnace",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[152262] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328908] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[320125] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[18562] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[311497] = {
["source"] = "Fuzzyfakk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[69070] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goldshireho",
["npcID"] = 0,
},
[343721] = {
["source"] = "Damonturok-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[236021] = {
["source"] = "Korubo-Drakkari",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[113746] = {
["source"] = "Luçilla-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[883] = {
["source"] = "Zujo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[118922] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328508] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zulgulos",
["npcID"] = 0,
},
[853] = {
["source"] = "Echoras-Scilla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[192106] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[101643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Taver-Frostmourne",
["npcID"] = 0,
},
[323385] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[10060] = {
["source"] = "Gibbz-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[185313] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[306830] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[212283] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[232698] = {
["source"] = "Nayeon-Nazjatar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[281000] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[4987] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zachai",
["npcID"] = 0,
},
[199736] = {
["source"] = "Rednave",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[197277] = {
["source"] = "Pál-Ner'zhul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[212653] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[118779] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[184362] = {
["source"] = "Tankotron-Azshara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1784] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[280746] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Raztakhans-Drakkari",
["npcID"] = 0,
},
[54710] = {
["source"] = "Kenziexo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[53] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[212084] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[106951] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[275006] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Diamondnoob",
["npcID"] = 0,
},
[311492] = {
["source"] = "Lockthar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[338036] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dendhur",
["npcID"] = 0,
},
[257040] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepsixing",
["npcID"] = 0,
},
[337852] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Deall-Ragnaros",
["npcID"] = 0,
},
[338804] = {
["source"] = "Gemynix-Frostwolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[117526] = {
["source"] = "Rommark-Zul'jin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[342181] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345710] = {
["source"] = "Tankotron-Azshara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[15407] = {
["source"] = "Nayeon-Nazjatar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324739] = {
["source"] = "Fuzzyfakk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[290213] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[20707] = {
["source"] = "Nistavan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[115008] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rostmonk-Stormrage",
["npcID"] = 0,
},
[116095] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[80354] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343666] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Øbsidian",
["npcID"] = 0,
},
[203277] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xeprav",
["npcID"] = 0,
},
[6201] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepsixing",
["npcID"] = 0,
},
[243955] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Roxanna",
["npcID"] = 0,
},
[85673] = {
["source"] = "Krimmzon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[307095] = {
["source"] = "Glocklock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[58875] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Reuric",
["npcID"] = 0,
},
[199027] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34914] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Slime-Stormrage",
["npcID"] = 0,
},
[198688] = {
["source"] = "Samoansavage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196770] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[57984] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61029,
},
[100780] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[109304] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[260708] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nutrågeous",
["npcID"] = 0,
},
[307865] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1822] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[262115] = {
["source"] = "Delthos-Zul'jin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198817] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5246] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[331497] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Blaír",
["npcID"] = 0,
},
[209261] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Jiyoon",
["npcID"] = 0,
},
[119085] = {
["source"] = "Ssol",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[339324] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[242551] = {
["source"] = "Toolbît",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[8042] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[167105] = {
["source"] = "Ninefeet-Kil'jaeden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[124217] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[157131] = {
["source"] = "Rohal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2645] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324748] = {
["source"] = "Tankotron-Azshara",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[155722] = {
["source"] = "Korubo-Drakkari",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[258920] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[340094] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198819] = {
["source"] = "Ninefeet-Kil'jaeden",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[19801] = {
["source"] = "Frôst-MoonGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[108853] = {
["source"] = "Raiozinho-Goldrinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[227847] = {
["source"] = "Ninefeet-Kil'jaeden",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[51052] = {
["source"] = "Ilenn-Aegwynn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[102351] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[131347] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blaír",
["npcID"] = 0,
},
[52127] = {
["source"] = "Mikock-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[7384] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[113860] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pepperswiss-Trollbane",
["npcID"] = 0,
},
[1850] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zuldox",
["npcID"] = 0,
},
[24275] = {
["source"] = "Pál-Ner'zhul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[35395] = {
["source"] = "Hurgruk-Velen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Elûse",
["npcID"] = 0,
},
[85288] = {
["source"] = "Tankotron-Azshara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[185394] = {
["source"] = "Bildad",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1856] = {
["source"] = "Samoansavage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[54149] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[3714] = {
["source"] = "Heartstop",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[20473] = {
["source"] = "Krimmzon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48107] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[34428] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[5394] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reuric",
["npcID"] = 0,
},
[311484] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[185438] = {
["source"] = "Bradachá-Tichondrius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[87024] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[308899] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Laithiel",
["npcID"] = 0,
},
[2580] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[336009] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mafuyuchan-Blackrock",
["npcID"] = 0,
},
[203554] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[311483] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[187698] = {
["source"] = "Frôst-MoonGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[16589] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kotoer",
["npcID"] = 0,
},
[234756] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Víoletsophïe",
["npcID"] = 0,
},
[227723] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[31884] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[330896] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deall-Ragnaros",
["npcID"] = 0,
},
[339848] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[102417] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[338825] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[343173] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[304971] = {
["source"] = "Pál-Ner'zhul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[187827] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[281178] = {
["source"] = "Damonturok-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196608] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Taver-Frostmourne",
["npcID"] = 0,
},
[223819] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[106898] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[165961] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[145629] = {
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[210391] = {
["source"] = "Hurgruk-Velen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[87840] = {
["source"] = "Nøtch",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[1543] = {
["source"] = "Frôst-MoonGuard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48108] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[193538] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Juicycreep",
["npcID"] = 0,
},
[2094] = {
["source"] = "Samoansavage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[465] = {
["source"] = "Hurgruk-Velen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[326809] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Arkeroes",
["npcID"] = 0,
},
[186265] = {
["source"] = "Rommark-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325275] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zydios",
["npcID"] = 0,
},
[106830] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[182104] = {
["source"] = "Amkurrar",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[327066] = {
["source"] = "Wíndrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[331939] = {
["source"] = "Xisas-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[203814] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cadigan",
["npcID"] = 0,
},
[43308] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[121536] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Angelica",
["npcID"] = 0,
},
[117405] = {
["source"] = "Rommark-Zul'jin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[328837] = {
["source"] = "Jauntap",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[5761] = {
["source"] = "Timmyheaters-Mal'Ganis",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[236645] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shatha-Bladefist",
["npcID"] = 0,
},
[247676] = {
["source"] = "Ghòstpally-BloodFurnace",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[44535] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311468] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Frostch-Illidan",
["npcID"] = 0,
},
[337299] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nolypie",
["npcID"] = 0,
},
[311469] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dõnatellõ",
["npcID"] = 0,
},
[311477] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[345228] = {
["source"] = "Xisas-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[120] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sammyskillz",
["npcID"] = 0,
},
[300728] = {
["source"] = "Tbe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345230] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311470] = {
["source"] = "Annehidfrank",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[347788] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311476] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dragonweaver",
["npcID"] = 0,
},
[108366] = {
["source"] = "Zafiana-Dalaran",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2823] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dryven",
["npcID"] = 0,
},
[6673] = {
["source"] = "Lubisco-Azralon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[22568] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[257044] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[345231] = {
["source"] = "Orex-Blackrock",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[185311] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324260] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[3600] = {
["source"] = "Earthbind Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 2630,
},
[48707] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[45242] = {
["source"] = "Centius-Garrosh",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[107570] = {
["source"] = "Delthos-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311474] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brokenheals",
["npcID"] = 0,
},
[199854] = {
["source"] = "Xisas-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[202028] = {
["source"] = "Korubo-Drakkari",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[298823] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Peëp",
["npcID"] = 0,
},
[309173] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Laithiel",
["npcID"] = 0,
},
[311475] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kiiloh",
["npcID"] = 0,
},
[256374] = {
["source"] = "Frôst-MoonGuard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[134847] = {
["source"] = "Blingtron 4000",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43929,
},
[203819] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[322729] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fwittion",
["npcID"] = 0,
},
[85222] = {
["source"] = "Krimmzon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[198065] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[974] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[331937] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Emeryxo",
["npcID"] = 0,
},
[342423] = {
["source"] = "Jussaphase",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[196741] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[58180] = {
["source"] = "Korubo-Drakkari",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311478] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alasko",
["npcID"] = 0,
},
[114108] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[32223] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[781] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311479] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[109132] = {
["source"] = "Luçilla-Area52",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204197] = {
["source"] = "Voirdire-Eitrigg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311464] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Njagos",
["npcID"] = 0,
},
[308514] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33076] = {
["source"] = "Dougiehouser-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[127230] = {
["source"] = "Kkatman",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[191034] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Seniat-Hyjal",
["npcID"] = 0,
},
[311481] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mcbeerface-Stormrage",
["npcID"] = 0,
},
[326059] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[1966] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337824] = {
["source"] = "Krimmzon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[321712] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[123586] = {
["source"] = "Luçilla-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[221883] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ythania",
["npcID"] = 0,
},
[351077] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Uddercarnage",
["npcID"] = 0,
},
[327851] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dragonweaver",
["npcID"] = 0,
},
[19434] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[290512] = {
["source"] = "Luçilla-Area52",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[347348] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[270564] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thergrun",
["npcID"] = 0,
},
[261769] = {
["source"] = "Luçilla-Area52",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198069] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Calm",
["npcID"] = 0,
},
[347600] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[291843] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Taver-Frostmourne",
["npcID"] = 0,
},
[188196] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48778] = {
["source"] = "Sprumn-Velen",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[8679] = {
["source"] = "Bradachá-Tichondrius",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[198837] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[326064] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ramlathel",
["npcID"] = 0,
},
[65081] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[204336] = {
["source"] = "Bígolbísh-Sargeras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[267611] = {
["source"] = "Pál-Ner'zhul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337341] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Gruumshz-Azralon",
["npcID"] = 0,
},
[333089] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Forgesong",
["npcID"] = 0,
},
[21562] = {
["source"] = "Gibbz-Stormrage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[185358] = {
["source"] = "Rommark-Zul'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[48265] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deathvec",
["npcID"] = 0,
},
[48792] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[18499] = {
["source"] = "Delthos-Zul'jin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311489] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Arkaezi",
["npcID"] = 0,
},
[339321] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deall-Ragnaros",
["npcID"] = 0,
},
[270058] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Farender",
["npcID"] = 0,
},
[202636] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[77489] = {
["source"] = "Dougiehouser-Stormrage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[69369] = {
["source"] = "Korubo-Drakkari",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[47536] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Trinzic",
["npcID"] = 0,
},
[47568] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[2983] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[264689] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Elesteria",
["npcID"] = 0,
},
[334428] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ratcoon",
["npcID"] = 0,
},
[341449] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Seoltrain-Stormrage",
["npcID"] = 0,
},
[315584] = {
["source"] = "Samoansavage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[190784] = {
["source"] = "Ghòstpally-BloodFurnace",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[203720] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[336872] = {
["source"] = "Pál-Ner'zhul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[311493] = {
["source"] = "Bladim-Ragnaros",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[324031] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Covidcorp",
["npcID"] = 0,
},
[334511] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Guruwas",
["npcID"] = 0,
},
[197690] = {
["source"] = "Ataric",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[311494] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kenïon",
["npcID"] = 0,
},
[49039] = {
["source"] = "Ilenn-Aegwynn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[251836] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Roch",
["npcID"] = 0,
},
[167898] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[33763] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ultracat-Moonrunner",
["npcID"] = 0,
},
[204596] = {
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gigagonk",
["npcID"] = 0,
},
[12654] = {
["source"] = "Raiozinho-Goldrinn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[337113] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Drexias-MoonGuard",
["npcID"] = 0,
},
[311496] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Redreaperr",
["npcID"] = 0,
},
[8092] = {
["source"] = "Voirdire-Eitrigg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 0,
},
[204213] = {
["source"] = "Voirdire-Eitrigg",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[23161] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Borllan",
["npcID"] = 0,
},
[260734] = {
["source"] = "Bígolbísh-Sargeras",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[22812] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hallepurry",
["npcID"] = 0,
},
[156077] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Xonhorn",
["npcID"] = 0,
},
[5697] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lerict",
["npcID"] = 0,
},
[311498] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Løki",
["npcID"] = 0,
},
[134522] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
[325437] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hellacat-Thrall",
["npcID"] = 0,
},
[314186] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Heartstop",
["npcID"] = 0,
},
[311499] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Biggdaddy",
["npcID"] = 0,
},
[132169] = {
["source"] = "Delthos-Zul'jin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 0,
},
},
["aura_y_offset"] = 5,
},
},
}
